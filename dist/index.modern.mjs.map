{"version":3,"file":"index.modern.mjs","sources":["../src/hooks/types.ts","../src/hooks/consts.ts","../src/hooks/utils.ts","../src/store/booking/types.ts","../src/store/booking/reducer.tsx","../src/store/responseState/types.ts","../src/store/responseState/reducer.tsx","../src/store/upsell/reducer.ts","../src/store/user/reducer.ts","../src/store/rootReducer.tsx","../src/hooks/useManualApi.ts","../src/hooks/PersistContext.tsx","../src/hooks/index.tsx","../src/hooks/useSetResponseState.ts","../src/hooks/useAddons.ts","../src/hooks/useBooking.ts","../src/hooks/useBookingPrice.ts","../src/hooks/useLocations.ts","../src/hooks/useConnection.ts","../src/hooks/usePassengersData.ts","../src/hooks/useCredit.ts","../src/hooks/useDepartures.ts","../src/hooks/useCityPairs.ts","../src/hooks/useConnectionRoute.ts","../src/hooks/useFlexiTickets.ts","../src/hooks/useTimeTickets.ts","../src/store/user/types.ts","../src/hooks/useHeaders.ts","../src/hooks/useUser.ts","../src/hooks/useUserTickets.ts","../src/hooks/usePayment.ts","../src/hooks/useCreateTickets.ts","../src/hooks/useLines.ts","../src/hooks/useSearchLocations.ts","../src/hooks/usePaymentsHistory.tsx","../src/hooks/useSeats.ts","../src/hooks/useTariffs.ts","../src/hooks/useTicketActions.ts","../src/hooks/useTicketReview.ts","../src/hooks/useTickets.ts","../src/hooks/useLineTimetables.ts","../src/hooks/useTimetables.ts","../src/hooks/useSeatClasses.ts","../src/hooks/useUpsell.ts","../src/store/upsell/types.ts","../src/hooks/useVehicleStandards.ts"],"sourcesContent":["import { RouteSectionData } from './useAddons';\n\nexport type VehicleType = 'BUS' | 'TRAIN';\nexport type Currency =\n  | 'CHF'\n  | 'CZK'\n  | 'EUR'\n  | 'GBP'\n  | 'HRK'\n  | 'HUF'\n  | 'PLN'\n  | 'UAH';\n\nexport type Language = 'de-AT' | 'en' | 'cs' | 'de' | 'sk' | 'hu' | 'uk' | 'pl';\n\nexport type StationCountry =\n  | 'DE'\n  | 'BE'\n  | 'CH'\n  | 'LU'\n  | 'HR'\n  | 'IT'\n  | 'FR'\n  | 'UA'\n  | 'HU'\n  | 'AT'\n  | 'UK'\n  | 'CZ'\n  | 'SK'\n  | 'ME'\n  | 'PL'\n  | 'NL'\n  | 'BA';\n\nexport type TicketType = 'FLEXI' | 'RJ_SRO' | 'RJ_SEAT' | 'RJ_TIME';\nexport type State = 'UNPAID' | 'VALID' | 'USED' | 'CANCELED';\nexport type TicketState = State;\nexport type TicketAddonState = State | 'EXPIRED' | 'DELETED' | 'NULLIFIED';\nexport type FlexiType = 'FLEX' | 'WEEK' | 'MONTH' | 'QUARTER';\n\nexport enum Tariff {\n  Regular = 'REGULAR',\n  CzechStudentPass15 = 'CZECH_STUDENT_PASS_15',\n  CzechStudentPass26 = 'CZECH_STUDENT_PASS_26',\n  Isic = 'ISIC',\n  AttendedChild = 'ATTENDED_CHILD',\n  Disabled = 'DISABLED',\n  DisabledAttendance = 'DISABLED_ATTENDANCE',\n  Euro26 = 'EURO26',\n  Child = 'CHILD',\n  UaRefugee = 'UA_REFUGEE',\n  UaRefugeeChild = 'UA_REFUGEE_CHILD',\n  Disabled3 = 'DISABLED_3',\n  ChildUnder12 = 'CHILD_UNDER_12',\n}\n\nexport interface SeatPosition {\n  vehicleNumber: number;\n  seatIndex: number;\n}\n\nexport interface SelectedSeat extends SeatPosition {\n  sectionId: number;\n}\n\nexport interface RouteSectionDepArr {\n  sectionId: number;\n  departureStationId: number;\n  arrivalStationId: number;\n}\n\nexport interface RouteSectionFromTo {\n  sectionId: number;\n  fromStationId: number;\n  toStationId: number;\n}\n\nexport interface AddonsPassengersPayload {\n  tariffs: Tariff[];\n  routeSections: RouteSectionData[];\n}\n\nexport interface SeatSectionBasic {\n  sectionId: number;\n  fromStationId: number;\n  toStationId: number;\n}\n\nexport enum SeatClass {\n  C0 = 'C0',\n  C1 = 'C1',\n  C2 = 'C2',\n  No = 'NO',\n  Train1StClass = 'TRAIN_1ST_CLASS',\n  Train2NdClass = 'TRAIN_2ND_CLASS',\n  TrainCouchetteBusiness4 = 'TRAIN_COUCHETTE_BUSINESS_4',\n  TrainCouchetteBusiness = 'TRAIN_COUCHETTE_BUSINESS',\n  TrainCouchetteRelax = 'TRAIN_COUCHETTE_RELAX',\n  TrainCouchetteRelaxForWomen = 'TRAIN_COUCHETTE_RELAX_FOR_WOMEN',\n  TrainCouchetteStandard = 'TRAIN_COUCHETTE_STANDARD',\n  TrainLowCost = 'TRAIN_LOW_COST',\n  TrainStandardPlus = 'TRAIN_STANDARD_PLUS',\n  BusStandard = 'BUS_STANDARD',\n  BusRelax = 'BUS_RELAX',\n}\n\nexport enum PaymentType {\n  Cash = 'CASH',\n  Gift = 'GIFT',\n  Online = 'ONLINE',\n  Credit = 'CREDIT',\n  FastBank = 'FAST_BANK',\n  Transfer = 'TRANSFER',\n}\n\nexport enum VehicleKey {\n  YELLOW = 'YELLOW',\n  YELLOW_R8 = 'YELLOW_R8',\n  ECONOMY = 'ECONOMY',\n  FUN_RELAX = 'FUN_RELAX',\n  FUN_RELAX_SELF_SERVICE = 'FUN_RELAX_SELF_SERVICE',\n  FUN_RELAX_NO_STEWARD = 'FUN_RELAX_NO_STEWARD',\n  DEUTSCHE_BAHN = 'DEUTSCHE_BAHN',\n  ECONOMY_PLATFORM = 'ECONOMY_PLATFORM',\n  SAD = 'SAD',\n  WEST_BAHN = 'WEST_BAHN',\n  IDS_JMK = 'IDS_JMK',\n  OBB = 'OBB',\n  UKRAINIAN_RAILWAYS = 'UKRAINIAN_RAILWAYS',\n  GEPARD_EXPRESS = 'GEPARD_EXPRESS',\n  UNITED_BUSES = 'UNITED_BUSES',\n}\n\nexport enum PaymentMethod {\n  Account = 'ACCOUNT',\n  Cash = 'CASH',\n  Giftcertificate = 'GIFT_CERTIFICATE',\n  Gopaysporopay = 'GOPAY_SPOROPAY',\n  Gopaytatrapay = 'GOPAY_TATRAPAY',\n  Gopayunicreditsk = 'GOPAY_UNICREDIT_SK',\n  Gopayvub = 'GOPAY_VUB',\n  Gpeapplepay = 'GPE_APPLE_PAY',\n  Gpegooglepay = 'GPE_GOOGLE_PAY',\n  Gpeonlinecard = 'GPE_ONLINE_CARD',\n  Payuapplepay = 'PAYU_APPLE_PAY',\n  Payucsasservis24 = 'PAYU_CSAS_SERVIS24',\n  Payucsob = 'PAYU_CSOB',\n  Payuera = 'PAYU_ERA',\n  Payufio = 'PAYU_FIO',\n  Payugemoneybank = 'PAYU_GE_MONEY_BANK',\n  Payugiropay = 'PAYU_GIROPAY',\n  Payugooglepay = 'PAYU_GOOGLE_PAY',\n  Payuinstanttr = 'PAYU_INSTANT_TR',\n  Payukb = 'PAYU_KB',\n  Payumbankmpenize = 'PAYU_MBANK_MPENIZE',\n  Payuonlinecard = 'PAYU_ONLINE_CARD',\n  Payuraiffeisen = 'PAYU_RAIFFEISEN',\n  Payusepa = 'PAYU_SEPA',\n  Payusofort = 'PAYU_SOFORT',\n  Payusofortat = 'PAYU_SOFORT_AT',\n  Payuunicredit = 'PAYU_UNICREDIT',\n  Transfer = 'TRANSFER',\n}\n\n/**\n * Can be one number as string '5545700263'\n * or multiple numbers split by comma '5545700263,5531912020'\n */\nexport type RouteId = string;\n\n/**\n * ISO date in string format\n */\nexport type DateString = string;\n","import axios, { AxiosError, ParamsSerializerOptions } from 'axios';\nimport JsSHA from 'jssha';\nimport qs from 'qs';\nimport { Language, PaymentMethod, StationCountry } from './types';\n\nexport enum Env {\n  PROD = 'prod',\n  QA = 'qa',\n  DEV = 'dev',\n}\n\nexport const envUrls = Object.freeze({\n  [Env.PROD]: 'https://brn-ybus-pubapi.sa.cz/restapi',\n  [Env.QA]: 'https://brn-qa-ybus-pubapi.sa.cz/restapi',\n  [Env.DEV]: 'https://brn-dev-ybus-pubapi.sa.cz/restapi',\n});\n\nexport const paramsSerializer: ParamsSerializerOptions = {\n  serialize: (params) => qs.stringify(params, { indices: false }),\n};\n\nconst TIMEOUT = 30000;\n\nexport const api = axios.create({\n  baseURL: envUrls[Env.QA],\n  timeout: TIMEOUT,\n  headers: { 'Cache-Control': 'no-cache' },\n  paramsSerializer,\n  transitional: {\n    clarifyTimeoutError: true,\n  },\n});\n\nexport const resInterceptor = (onUnauthorized: () => void) =>\n  api.interceptors.response.use(\n    (response) => {\n      delete api.defaults.headers.common['X-ReCaptcha-Token'];\n      return response;\n    },\n    async (error) => {\n      if (axios.isCancel(error)) {\n        return;\n      }\n      if (error?.response?.status === 401) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\nconst bodyHashEndpoints = [\n  '/tickets/create/unregistered',\n  '/users/login/registeredAccount',\n  '/users/login/unregisteredAccount',\n  '/users/login/email',\n  '/users/signup/registeredAccount',\n  '/users/forgottenPassword/email',\n  '/tickets/timetickets/unregistered',\n];\n\nexport const getHashedData = (data: unknown, hash: string): string => {\n  const shaObj = new JsSHA('SHA3-512', 'TEXT');\n  const cleanedData = typeof data === 'string' ? data : JSON.stringify(data);\n  shaObj.setHMACKey(hash, 'TEXT');\n  shaObj.update(cleanedData);\n  return shaObj.getHMAC('HEX');\n};\n\nexport const reqInterceptor = (hash: string) =>\n  api.interceptors.request.use((req) => {\n    const token = (req.headers?.Authorization as string | undefined)?.split(\n      ' ',\n    )[1];\n\n    // @ts-expect-error workaround for hiding token hash\n    // YBUS is requiring the token hash once and doesn't want it the other time ... ¯\\_(ツ)_/¯\n    const hideTokenHash = req.hideTokenHash;\n\n    if (!req.headers) {\n      req.headers = {};\n    }\n\n    if (!req.url?.includes('const') && !hideTokenHash) {\n      if (token && !bodyHashEndpoints.includes(req.url || '')) {\n        req.headers['X-Token-Hash'] = getHashedData(token, hash);\n      } else if (req.data) {\n        req.headers['X-Body-Hash'] = getHashedData(req.data, hash);\n      }\n    }\n\n    if (hideTokenHash) {\n      // @ts-expect-error hideTokenHash\n      delete req.hideTokenHash;\n    }\n\n    req.headers.Referer = 'regiojet:///';\n    return req;\n  });\n\nexport const TIMEOUT_MESSAGE = 'alert.outage';\nexport const FAIL_MESSAGE = 'alert.fail';\nexport const NETWORK_MESSAGE = 'alert.network';\n\nexport const getErrorMessage = (error?: AxiosError | null) => {\n  if (!error) {\n    return;\n  }\n  switch (error.code) {\n    // we want to ignore canceled requests\n    case AxiosError.ERR_CANCELED:\n      return;\n    case AxiosError.ETIMEDOUT:\n    case AxiosError.ECONNABORTED:\n      return TIMEOUT_MESSAGE;\n    case AxiosError.ERR_NETWORK:\n    case 'ENOTFOUND':\n      return NETWORK_MESSAGE;\n  }\n  return FAIL_MESSAGE;\n};\n\nexport const langPriorityCountries = Object.freeze<\nRecord<Language, StationCountry[]>\n>({\n  cs: ['CZ', 'SK'],\n  de: ['DE', 'AT', 'CZ'],\n  'de-AT': ['AT', 'DE', 'CZ'],\n  en: ['UK', 'BE', 'NL', 'LU', 'DE'],\n  hu: ['HU', 'SK', 'AT'],\n  pl: ['PL', 'CZ', 'SK', 'UA'],\n  sk: ['SK', 'CZ', 'AT'],\n  uk: ['UA', 'CZ', 'PL', 'SK', 'HU'],\n});\n\nexport const unusablePaymentMethods = [\n  PaymentMethod.Cash,\n  PaymentMethod.Transfer,\n  PaymentMethod.Giftcertificate,\n];\n","import equal from 'fast-deep-equal/es6/react';\nimport { SectionWithSeats } from '../store/booking/types';\nimport { SeatClass, SelectedSeat } from './types';\nimport { PriceClass, Section } from './useConnectionRoute';\nimport { TicketTypeId } from './usePayment';\nimport { SeatTicket, SroTicket, Tickets } from './useUserTickets';\n\nexport const basketItemsToTicketTypes = (tickets: Tickets) =>\n  Object.entries(tickets).reduce((prev, [type, ticketList]) => {\n    if (!ticketList.length) {\n      return prev;\n    }\n    prev.push(\n      ...ticketList.map(\n        ({ id, sroTicketId }:\n        Partial<Pick<SroTicket, 'sroTicketId'> & Pick<SeatTicket, 'id'>>,\n        ) =>\n          ({\n            id: id || sroTicketId,\n            type,\n          }),\n      ),\n    );\n    return prev;\n  }, [] as TicketTypeId[]);\n\nexport const createTxToken = () => {\n  let result = '';\n  let rest = '';\n  let number = new Date().valueOf();\n  const characters =\n    '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n  while (number > 1) {\n    const remainder = Math.floor(number % characters.length);\n    number /= characters.length;\n    result += characters[remainder];\n  }\n\n  for (let i = result.length; i < 8; i++) {\n    rest += '1';\n  }\n  return rest + result;\n};\n\nexport const mapFieldToUser = Object.freeze({\n  EMAIL: 'email',\n  FIRST_NAME: 'firstName',\n  SURNAME: 'surname',\n});\n\nexport const couchetteClasses: `${SeatClass}`[] = [\n  'TRAIN_COUCHETTE_BUSINESS_4',\n  'TRAIN_COUCHETTE_BUSINESS',\n];\n\nexport const getMoreExpensiveClass = (\n  baseClass: SeatClass,\n  priceClasses: PriceClass[],\n): PriceClass | null => {\n  const actualClassIndex = priceClasses.findIndex(\n    (pc) => pc.seatClassKey === baseClass,\n  );\n\n  const actualClass = priceClasses[actualClassIndex];\n  const moreExpensiveClass = priceClasses[actualClassIndex + 1];\n\n  if (\n    !actualClass || // Not found\n    !moreExpensiveClass || // Last class selected\n    actualClass.type !== 'RJ_SEAT' || // Don't offer timetickets\n    moreExpensiveClass.type !== 'RJ_SEAT' ||\n    actualClass.price >= moreExpensiveClass.price || // Don't offer cheaper class\n    moreExpensiveClass.price / actualClass.price > 1.5 || // The price difference is lower than 50%\n    actualClass.seatClassKey === moreExpensiveClass.seatClassKey || // Don't offer same class (e.g. action prices)\n    actualClass.actionPrice || // Don't offer for employee / with bicycle etc\n    moreExpensiveClass.actionPrice || // Don't offer upsell class with bicycle...\n    couchetteClasses.includes(moreExpensiveClass.seatClassKey) // Don't offer coupe\n  ) {\n    return null;\n  }\n\n  return moreExpensiveClass;\n};\n\nconst shouldIgnoreAction = (event: string) => event === 'SET_RESPONSE_STATE';\n\nexport const gtmPush = (payload: {\n  event: string;\n  [key: string]: any;\n}): void => {\n  if (\n    typeof window !== 'undefined' &&\n    // @ts-expect-error dataLayer\n    window.dataLayer?.push &&\n    !shouldIgnoreAction(payload.event)\n  ) {\n    // @ts-expect-error dataLayer\n    window.dataLayer.push(payload);\n  }\n};\n\nexport const getAffiliateCode = (): string | undefined => {\n  const affiliateCode =\n    typeof localStorage !== 'undefined'\n      ? localStorage.getItem('affiliateCode')\n      : '';\n\n  if (!affiliateCode) {\n    return undefined;\n  }\n\n  const expirationTs = parseInt(\n    localStorage.getItem('affiliateCodeExpiration') || '',\n    10,\n  );\n\n  if (expirationTs < new Date().valueOf()) {\n    localStorage.removeItem('affiliateCode');\n    localStorage.removeItem('affiliateCodeExpiration');\n    return undefined;\n  }\n\n  return affiliateCode;\n};\n\nexport const mapFromToSections = (\n  depArrSections: Section[],\n): SectionWithSeats[] =>\n  depArrSections.map((s) => ({\n    sectionId: s.id,\n    fromStationId: s.departureStationId,\n    toStationId: s.arrivalStationId,\n  }));\n\nexport const r8Stations = [\n  4987881000, 3088864001, 4961583000, 5009212000, 4961583001, 2370298003,\n  372825006, 5095524133, 5095524027, 372825007, 372825008, 4961583004, 7063331002,\n];\n\nexport const r23Stations = [\n  5010256458, 5812866010, 5145776001, 5010257320, 5812866008, 5812866007,\n  5812866006, 5812866005, 5812866004, 5812866003, 5812866002, 5812866001,\n  3088864000, 5812866009,\n];\n\nexport const isRegional = (fromStationId: number, toStationId: number) =>\n  (r8Stations.includes(fromStationId) && r8Stations.includes(toStationId)) ||\n  (r23Stations.includes(fromStationId) && r23Stations.includes(toStationId));\n\n/**\n * Soft booking can book other seat than selected. We need to inform user about it\n */\nexport const getNewSeats = (\n  reqSeats: SelectedSeat[],\n  respSeats: SelectedSeat[],\n) =>\n  equal(reqSeats, respSeats)\n    ? []\n    : respSeats.filter(\n      (respSeat) => !reqSeats.some((reqSeat) => equal(reqSeat, respSeat)),\n    );\n\nexport const getAddonTranslationKey = (addonCode: string, prependAll?: boolean): string => {\n  const lowerCaseAddon = addonCode.toLowerCase();\n  if (lowerCaseAddon.includes('kolo')) {\n    return 'addon.bike';\n  }\n  if (lowerCaseAddon.includes('lyze')) {\n    return 'addon.ski';\n  }\n  if (lowerCaseAddon.includes('parkovani')) {\n    return 'addon.parking';\n  }\n  if (lowerCaseAddon.includes('zavazadlo')) {\n    return 'addon.luggage';\n  }\n  if (lowerCaseAddon.includes('smartguide')) {\n    return 'addon.smartguide';\n  }\n  if (lowerCaseAddon.includes('berider')) {\n    return 'addon.berider';\n  }\n  if (lowerCaseAddon.includes('hoppygo')) {\n    return 'addon.hoppygo';\n  }\n\n  if (prependAll) {\n    return 'addon.' + addonCode;\n  }\n\n  return addonCode;\n};\n\nexport const unorderedArrayEqual = (arr1: string[], arr2: string[]) => {\n  if (!arr1 || !arr2) {\n    return false;\n  }\n  const sorted1 = arr1.sort();\n  const sorted2 = arr2.sort();\n\n  return sorted1.every((e, i) => sorted2[i] === e);\n};\n\nexport const calculateDistance = (\n  lat1: number,\n  lon1: number,\n  lat2: number,\n  lon2: number,\n): number => {\n  const p = 0.017453292519943295; // Math.PI / 180\n  const a =\n    0.5 -\n    Math.cos((lat2 - lat1) * p) / 2 +\n    (Math.cos(lat1 * p) *\n      Math.cos(lat2 * p) *\n      (1 - Math.cos((lon2 - lon1) * p))) /\n    2;\n\n  return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\n};\n\nexport const getPriorityInArray = <Item>(arr: Item[], item: Item) =>\n  arr.includes(item) ? arr.indexOf(item) : arr.length;\n","import {\n  FlexiType,\n  RouteId,\n  SeatClass,\n  SeatPosition,\n  SeatSectionBasic,\n  SelectedSeat,\n  Tariff,\n  TicketType,\n} from '../../hooks/types';\nimport { SelectedAddon } from '../../hooks/useAddons';\nimport {\n  ConnectionLocations,\n  ConnectionPayload,\n} from '../../hooks/useConnection';\nimport { CarbonOffset } from '../../hooks/useConnectionRoute';\nimport { PassengerData } from '../../hooks/useCreateTickets';\n\nexport interface SectionWithSeats extends SeatSectionBasic {\n  selectedSeats?: SeatPosition[];\n}\n\nexport type ConnectionDirection = 'there' | 'back';\n\nexport const CLEAR_BOOKING = 'CLEAR_BOOKING';\nexport const REPLACE_TARIFFS = 'REPLACE_TARIFFS';\nexport const SAVE_CONNECTION = 'SAVE_CONNECTION';\nexport const SELECT_ADDONS = 'SELECT_ADDONS';\nexport const SELECT_CLASS = 'SELECT_CLASS';\nexport const SELECT_CODE_DISCOUNT = 'SELECT_CODE_DISCOUNT';\nexport const SELECT_PERC_DISCOUNT = 'SELECT_PERC_DISCOUNT';\nexport const SELECT_ROUTE = 'SELECT_ROUTE';\nexport const SELECT_SEATS = 'SELECT_SEATS';\nexport const SET_PRICE = 'SET_PRICE';\nexport const UPSELL_ADDONS = 'UPSELL_ADDONS';\n\nexport interface PayloadCommons {\n  direction: ConnectionDirection;\n}\n\nexport interface SelectRoutePayload extends PayloadCommons {\n  fromStationId: number;\n  routeId: RouteId;\n  tariffs: Tariff[];\n  toStationId: number;\n  type?: TicketType;\n}\nexport interface ReplaceTariffsPayload extends PayloadCommons {\n  tariffs: Tariff[];\n}\n\nexport interface SelectClassPayload extends PayloadCommons {\n  flexiType?: FlexiType;\n  lineGroupCode?: string;\n  lineNumber?: number;\n  price: number;\n  priceSource?: string;\n  seatClass: SeatClass;\n  sections: SectionWithSeats[];\n  type: TicketType;\n}\n\nexport interface SelectSeatsPayload extends PayloadCommons {\n  seats: SelectedSeat[];\n}\n\nexport interface SelectAddonsPayload extends PayloadCommons {\n  selectedAddons: SelectedAddon[];\n}\n\nexport interface SelectPercentualDiscountPayload extends PayloadCommons {\n  percentualDiscountIds?: number[];\n  discountAmount?: number;\n}\n\nexport interface SelectCodeDiscountPayload extends PayloadCommons {\n  codeDiscount?: string;\n  discountAmount?: number;\n}\n\nexport interface SetPricePayload extends PayloadCommons {\n  price: number;\n}\n\nexport interface SaveConnectionPayload extends Partial<ConnectionPayload> {\n  ignoreFavorite?: boolean;\n}\n\nexport interface ClearBookingPayload {\n  direction?: ConnectionDirection;\n}\n\ninterface SaveConnectionAction {\n  type: typeof SAVE_CONNECTION;\n  payload: SaveConnectionPayload;\n}\n\ninterface ReplaceTariffsAction {\n  type: typeof REPLACE_TARIFFS;\n  payload: ReplaceTariffsPayload;\n}\n\ninterface SelectRouteAction {\n  type: typeof SELECT_ROUTE;\n  payload: SelectRoutePayload;\n}\n\ninterface SelectClassAction {\n  type: typeof SELECT_CLASS;\n  payload: SelectClassPayload;\n}\n\ninterface SelectSeatsAction {\n  type: typeof SELECT_SEATS;\n  payload: SelectSeatsPayload;\n}\n\ninterface UpsellAddonsAction {\n  type: typeof UPSELL_ADDONS;\n  payload: SelectAddonsPayload;\n}\n\ninterface SelectAddonsAction {\n  type: typeof SELECT_ADDONS;\n  payload: SelectAddonsPayload;\n}\n\ninterface ClearBookingAction {\n  type: typeof CLEAR_BOOKING;\n  payload: ClearBookingPayload;\n}\n\ninterface SelectPercentualDiscountAction {\n  type: typeof SELECT_PERC_DISCOUNT;\n  payload: SelectPercentualDiscountPayload;\n}\n\ninterface SelectCodeDiscountAction {\n  type: typeof SELECT_CODE_DISCOUNT;\n  payload: SelectCodeDiscountPayload;\n}\n\ninterface SetPriceAction {\n  type: typeof SET_PRICE;\n  payload: SetPricePayload;\n}\n\nexport type BookingState =\n  | 'ADDONS_SELECTED'\n  | 'CLASS_SELECTED'\n  | 'ROUTE_SELECTED'\n  | 'SEAT_SELECTED';\n\nexport interface BookingProps {\n  carbonOffset?: CarbonOffset;\n  bookingState: BookingState;\n  codeDiscount?: string;\n  flexiType?: FlexiType;\n  fromStationId?: number;\n  lineGroupCode?: string;\n  lineNumber?: number;\n  passengers?: PassengerData[];\n  percentualDiscountIds?: number[];\n  price?: number;\n  discountAmount?: number;\n  priceSource?: string;\n  routeId?: RouteId;\n  seatClass?: SeatClass;\n  sections?: SectionWithSeats[];\n  selectedAddons?: SelectedAddon[];\n  tariffs?: Tariff[];\n  toStationId?: number;\n  type?: TicketType;\n}\n\nexport interface Booking {\n  back: BookingProps | null;\n  connection: Partial<ConnectionPayload>;\n  isReturn: boolean;\n  there: BookingProps | null;\n}\n\nexport interface BookingReducerProps {\n  booking: Booking | null;\n  fav: ConnectionLocations[];\n}\n\nexport type BookingActions =\n  | ClearBookingAction\n  | ReplaceTariffsAction\n  | SaveConnectionAction\n  | SelectAddonsAction\n  | SelectClassAction\n  | SelectCodeDiscountAction\n  | SelectPercentualDiscountAction\n  | SelectRouteAction\n  | SelectSeatsAction\n  | SetPriceAction\n  | UpsellAddonsAction;\n  \n","import React, { Dispatch, FC, ReactNode, useEffect, useMemo } from 'react';\nimport equal from 'fast-deep-equal';\nimport type { Draft } from 'immer';\nimport { createContext } from 'use-context-selector';\nimport { useImmerReducer } from 'use-immer';\nimport { PersistConfig } from '../../hooks';\nimport { api, resInterceptor } from '../../hooks/consts';\nimport { gtmPush } from '../../hooks/utils';\nimport {\n  BookingActions,\n  BookingReducerProps,\n  ClearBookingPayload,\n  CLEAR_BOOKING,\n  REPLACE_TARIFFS,\n  SAVE_CONNECTION,\n  SELECT_ADDONS,\n  SELECT_CLASS,\n  SELECT_CODE_DISCOUNT,\n  SELECT_PERC_DISCOUNT,\n  SELECT_ROUTE,\n  SELECT_SEATS,\n  SET_PRICE,\n  UPSELL_ADDONS,\n} from './types';\n\nconst bookingInitialState: BookingReducerProps = {\n  booking: null,\n  fav: [],\n};\n\ninterface BookingProviderType {\n  children?: ReactNode;\n  persistConfig?: PersistConfig;\n  persist?: boolean;\n  transportHash?: string;\n}\n\ninterface BookingContextType {\n  state: BookingReducerProps;\n  dispatch: Dispatch<BookingActions>;\n}\n\nexport const BookingContext = createContext({} as BookingContextType);\n\nconst bookingReducer = (draft: Draft<BookingReducerProps>, action: BookingActions) => {\n  // default GTM\n  if (typeof window !== 'undefined') {\n    gtmPush({\n      event: action.type + ((action?.payload as ClearBookingPayload)?.direction || ''),\n      [action.type]: {\n        ...action.payload,\n        currency: api.defaults.headers.common['X-Currency'],\n      },\n    });\n  }\n\n  switch (action.type) {\n    case REPLACE_TARIFFS: {\n      if (draft?.booking?.[action.payload.direction]?.tariffs) {\n        draft.booking[action.payload.direction]!.tariffs =\n          action.payload.tariffs;\n      }\n      break;\n    }\n    case SAVE_CONNECTION: {\n      draft.booking = {\n        connection: action.payload,\n        isReturn: !!action.payload.returnDepartureDate,\n        there: null,\n        back: null,\n      };\n\n      if (\n        !action.payload.ignoreFavorite &&\n        action.payload.fromLocationId &&\n        action.payload.fromLocationType &&\n        action.payload.toLocationId &&\n        action.payload.toLocationType\n      ) {\n        const favoriteIndex = draft.fav.findIndex(\n          (i) =>\n            i.fromLocationId === action.payload.fromLocationId &&\n            i.toLocationId === action.payload.toLocationId,\n        );\n        if (favoriteIndex !== -1) {\n          draft.fav.splice(favoriteIndex, 1);\n        }\n\n        draft.fav.unshift({\n          fromLocationId: action.payload.fromLocationId,\n          fromLocationType: action.payload.fromLocationType,\n          toLocationId: action.payload.toLocationId,\n          toLocationType: action.payload.toLocationType,\n        });\n      }\n\n      break;\n    }\n    case SELECT_ROUTE: {\n      const { direction, ...rest } = action.payload;\n\n      if (draft.booking) {\n        const nextBooking = {\n          ...rest,\n          bookingState: 'ROUTE_SELECTED' as const,\n          seatClass: undefined,\n          sections: undefined,\n          price: undefined,\n          priceSource: undefined,\n          selectedAddons: undefined,\n          passengers: undefined,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case UPSELL_ADDONS: {\n      const { direction, ...rest } = action.payload;\n\n      if (draft.booking) {\n        const nextBooking = {\n          ...draft.booking?.[direction],\n          ...rest,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_CLASS: {\n      const { direction, ...rest } = action.payload;\n      if (draft.booking) {\n        const nextBooking = {\n          ...(draft.booking?.[direction] || {}),\n          ...rest,\n          bookingState: 'CLASS_SELECTED' as const,\n          passengers: undefined,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_SEATS: {\n      const { direction, seats } = action.payload;\n      if (draft.booking) {\n        const nextBooking = {\n          ...(draft.booking?.[direction]),\n          sections: draft.booking?.[direction]?.sections?.map((s) => ({\n            ...s,\n            selectedSeats: seats.filter(\n              (seat) => seat.sectionId === s.sectionId,\n            ),\n          })),\n          bookingState: 'SEAT_SELECTED' as const,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_ADDONS: {\n      const { direction, ...rest } = action.payload;\n\n      if (draft.booking) {\n        const nextBooking = {\n          ...draft.booking?.[direction],\n          ...rest,\n          bookingState: 'ADDONS_SELECTED' as const,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_PERC_DISCOUNT: {\n      const { direction, percentualDiscountIds, discountAmount } =\n        action.payload;\n      if (draft.booking?.[direction]?.bookingState) {\n        const nextBooking = {\n          ...draft.booking?.[direction],\n          percentualDiscountIds,\n          discountAmount,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n      break;\n    }\n    case SELECT_CODE_DISCOUNT: {\n      const { direction, codeDiscount, discountAmount } = action.payload;\n      if (draft.booking?.[direction]?.bookingState) {\n        draft.booking[direction] = {\n          ...(draft.booking?.[direction] || {}),\n          codeDiscount,\n          discountAmount,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n      }\n      break;\n    }\n    case SET_PRICE: {\n      const { direction, price } = action.payload;\n      if (draft.booking?.[direction]) {\n        const nextBooking = {\n          ...(draft.booking?.[direction] || {}),\n          price,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n      break;\n    }\n    case CLEAR_BOOKING: {\n      // Clear on new search\n      if (!action?.payload?.direction && draft.booking) {\n        draft.booking = null;\n\n        // Delete manually\n      } else if (action?.payload?.direction && draft.booking) {\n        if (action.payload.direction === 'there') {\n          draft.booking.there = draft.booking.back;\n        }\n\n        if (!draft.booking?.there) {\n          draft.booking = null;\n        } else if (draft.booking.back || draft.booking.isReturn) {\n          draft.booking.back = null;\n          draft.booking.isReturn = false;\n        }\n      }\n      break;\n    }\n  }\n};\n\nconst BookingProvider: FC<BookingProviderType> = ({\n  children,\n  persistConfig,\n  persist,\n}) => {\n  const [state, dispatch] = useImmerReducer(\n    bookingReducer,\n    (persist && persistConfig?.getItem().bookings) || bookingInitialState,\n  );\n\n  useEffect(() => {\n    if (!persist) {\n      return;\n    }\n    persistConfig?.setItem({ bookings: state });\n  }, [state]);\n\n  useEffect(() => {\n    const interceptorId = resInterceptor(() => {\n      dispatch({ type: 'CLEAR_BOOKING', payload: {} });\n    });\n\n    return () => {\n      api.interceptors.response.eject(interceptorId);\n    };\n  }, []);\n\n  const value = useMemo(() => ({ dispatch, state }), [dispatch, state]);\n\n  return <BookingContext.Provider value={value}>{children}</BookingContext.Provider>;\n};\n\nexport default BookingProvider;\n","export const SET_RESPONSE_STATE = 'SET_RESPONSE_STATE';\n\nexport enum ResponseStateCategory {\n  addons,\n  connection,\n  connectionRoute,\n  createTickets,\n  credit,\n  locations,\n  passengersData,\n  payment,\n  seats,\n  tariffs,\n  ticket,\n  ticketAction,\n  user,\n  userTickets,\n  useTicketsType,\n  ticketReview,\n  seatClasses,\n  vehicleStandards,\n}\nexport interface ErrorFields  {\n  description?: string\n  key?: string\n  value?: string\n}\nexport interface ResponseState {\n  error?: {\n    message?: string;\n    errorFields?: ErrorFields[]\n  };\n  loading: boolean;\n}\nexport interface ResponseStatePayload extends ResponseState {\n  type?: ResponseStateCategory;\n}\n\ninterface SetResponseStateAction {\n  type: typeof SET_RESPONSE_STATE;\n  payload: ResponseStatePayload;\n}\n\nexport type ResponseStateReducerProps = {\n  [key in ResponseStateCategory]: ResponseState;\n};\n\nexport type ResponseStateActions = SetResponseStateAction;\n","import React, { Dispatch, FC, ReactNode, useEffect, useMemo } from 'react';\nimport equal from 'fast-deep-equal';\nimport type { Draft } from 'immer';\nimport { createContext } from 'use-context-selector';\nimport { useImmerReducer } from 'use-immer';\nimport { PersistConfig } from '../../hooks';\nimport {\n  ResponseStateReducerProps,\n  ResponseStateActions,\n  ResponseStateCategory,\n} from './types';\n\nconst responseStateInitialState: ResponseStateReducerProps = {\n  [ResponseStateCategory.addons]: { loading: false },\n  [ResponseStateCategory.connection]: { loading: false },\n  [ResponseStateCategory.connectionRoute]: { loading: false },\n  [ResponseStateCategory.createTickets]: { loading: false },\n  [ResponseStateCategory.credit]: { loading: false },\n  [ResponseStateCategory.locations]: { loading: true },\n  [ResponseStateCategory.passengersData]: { loading: false },\n  [ResponseStateCategory.payment]: { loading: false },\n  [ResponseStateCategory.seats]: { loading: false },\n  [ResponseStateCategory.ticket]: { loading: false },\n  [ResponseStateCategory.tariffs]: { loading: true },\n  [ResponseStateCategory.ticketAction]: { loading: false },\n  [ResponseStateCategory.userTickets]: { loading: false },\n  [ResponseStateCategory.useTicketsType]: { loading: false },\n  [ResponseStateCategory.user]: { loading: false },\n  [ResponseStateCategory.ticketReview]: { loading: false },\n  [ResponseStateCategory.vehicleStandards]: { loading: false },\n  [ResponseStateCategory.seatClasses]: { loading: false },\n};\n\ninterface ResponseStateProviderType {\n  children?: ReactNode;\n  persistConfig?: PersistConfig;\n  persist?: boolean;\n}\n\ninterface ResponseStateType {\n  state: ResponseStateReducerProps;\n  dispatch: Dispatch<ResponseStateActions>;\n}\n\nexport const ResponseStateContext = createContext({} as ResponseStateType);\n\nconst responseStateReducer =\n  (draft: Draft<ResponseStateReducerProps>, action: ResponseStateActions) => {\n    switch (action.type) {\n      case 'SET_RESPONSE_STATE': {\n        const { error, loading, type } = action.payload;\n\n        if (type !== undefined) {\n          const newState = { error, loading };\n          if (!equal(draft[type], newState)) {\n            draft[type] = newState;\n          }\n        } else {\n          Object.keys(draft).forEach((s) => {\n            const newState = { error, loading };\n            if (!equal(draft[+s as ResponseStateCategory], newState)) {\n              draft[+s as ResponseStateCategory] = newState;\n            }\n          });\n        }\n        break;\n      }\n    }\n  };\n\nconst ResponseStateProvider: FC<ResponseStateProviderType> =\n  ({ children, persistConfig, persist }) => {\n    const [state, dispatch] = useImmerReducer(\n      responseStateReducer,\n      (persist && persistConfig?.getItem().responseState) || responseStateInitialState,\n    );\n\n    useEffect(() => {\n      if (!persist) {\n        return;\n      }\n      persistConfig?.setItem({ responseState: state });\n    }, [state]);\n\n    const value = useMemo(() => ({ dispatch, state }), [dispatch, state]);\n\n    return <ResponseStateContext.Provider value={value}>{children}</ResponseStateContext.Provider>;\n  };\n\nexport default ResponseStateProvider;\n","import type { Draft } from 'immer';\nimport { UpsellActions, UpsellReducerProps } from './types';\n\nconst TWO_WEEKS_TIMESTAMP = 12096e5;\n\nexport const upsellInitialState: UpsellReducerProps = {\n  cooldownTs: 0,\n  displayCount: 0,\n};\n\nconst upsellReducer = (draft: Draft<UpsellReducerProps>, action: UpsellActions) => {\n  switch (action.type) {\n    case 'REFUSE_UPSELL': {\n      draft.displayCount++;\n      if (draft.displayCount === 2) {\n        draft.cooldownTs = new Date().valueOf() + TWO_WEEKS_TIMESTAMP;\n      }\n      break;\n    }\n    case 'REFRESH_COOLDOWN': {\n      if (draft.cooldownTs && new Date().valueOf() > draft.cooldownTs) {\n        draft.cooldownTs = 0;\n        draft.displayCount = 0;\n      }\n      break;\n    }\n  }\n};\n\nexport default upsellReducer;\n","import type { Draft } from 'immer';\nimport { api } from '../../hooks/consts';\nimport { Currency, Language } from '../../hooks/types';\nimport { UserActions, UserReducerProps } from './types';\n\nexport const userInitialState: UserReducerProps = {\n  loginNrs: [],\n  user: null,\n  token: null,\n  currency: 'CZK',\n  language: 'cs',\n  paymentMethodCode: null,\n};\n\nexport const generateUserInitialState = (\n  currency: Currency,\n  language: Language = 'cs',\n): UserReducerProps => ({\n  loginNrs: [],\n  user: null,\n  token: null,\n  currency,\n  language,\n  paymentMethodCode: null,\n});\n\nconst userReducer = (draft: Draft<UserReducerProps>, action: UserActions) => {\n  switch (action.type) {\n    case 'CLEAR_USER':\n      draft.user = null;\n      draft.token = null;\n      break;\n    case 'SET_LANG':\n      if (action.payload.language) {\n        draft.language = action.payload.language;\n      }\n      break;\n    case 'SET_TOKEN':\n      draft.token = action.payload.token;\n      break;\n    case 'SET_USER':\n      draft.user = action.payload.user;\n      break;\n    case 'SET_CURRENCY':\n      api.defaults.headers.common['X-Currency'] = action.payload.currency;\n      draft.currency = action.payload.currency;\n      break;\n    case 'SET_PAYMENT_CODE':\n      draft.paymentMethodCode = action.payload.paymentMethodCode;\n      break;\n    case 'SET_LOGIN_NR':\n      draft.loginNrs = Array.from(\n        new Set([action.payload.loginNr, ...(draft.loginNrs || [])]),\n      ).slice(0, 6);\n      break;\n  }\n};\n\nexport default userReducer;\n","import React, {\n  Dispatch,\n  PropsWithChildren,\n  useEffect,\n  useState,\n} from 'react';\nimport { createContext } from 'use-context-selector';\nimport { useImmerReducer } from 'use-immer';\nimport { PersistConfig } from '../hooks';\nimport { api, reqInterceptor, resInterceptor } from '../hooks/consts';\nimport { Currency, Language } from '../hooks/types';\nimport BookingProvider from './booking/reducer';\nimport { BookingReducerProps } from './booking/types';\nimport ResponseStateProvider from './responseState/reducer';\nimport { ResponseStateReducerProps } from './responseState/types';\nimport upsellReducer, { upsellInitialState } from './upsell/reducer';\nimport { UpsellActions, UpsellReducerProps } from './upsell/types';\nimport userReducer, {\n  generateUserInitialState,\n  userInitialState,\n} from './user/reducer';\nimport { UserActions, UserReducerProps } from './user/types';\n\nexport interface RootReducerProps {\n  user: UserReducerProps;\n  upsell: UpsellReducerProps;\n}\n\nexport interface PersistedState extends RootReducerProps {\n  bookings?: BookingReducerProps;\n  responseState?: ResponseStateReducerProps;\n}\n\nconst initialStoreContent: {\n  state: RootReducerProps;\n  interceptorsMounted: boolean;\n  dispatch: {\n    upsellDispatch: Dispatch<UpsellActions>;\n    userDispatch: Dispatch<UserActions>;\n  };\n} = {\n  dispatch: {\n    upsellDispatch: () => { },\n    userDispatch: () => { },\n  },\n  interceptorsMounted: false,\n  state: {\n    upsell: upsellInitialState,\n    user: userInitialState,\n  },\n};\n\nexport const StoreContext = createContext(initialStoreContent);\n\nexport interface StoreProviderProps {\n  lang?: Language;\n  currency: Currency;\n  transportHash?: string;\n  persistConfig?: PersistConfig;\n  persist?: { booking?: boolean; responseState?: boolean };\n  saveConnection?: boolean;\n}\n\nconst StoreProvider = ({\n  children,\n  currency,\n  transportHash,\n  lang = 'cs',\n  persistConfig,\n  persist,\n}: PropsWithChildren<StoreProviderProps>) => {\n  const [upsell, upsellDispatch] = useImmerReducer(\n    upsellReducer,\n    persistConfig?.getItem().upsell || upsellInitialState,\n  );\n  const [user, userDispatch] = useImmerReducer(\n    userReducer,\n    persistConfig?.getItem().user || generateUserInitialState(currency, lang),\n  );\n  const [interceptorsMounted, setInterceptorsMounted] = useState(false);\n\n  useEffect(() => {\n    persistConfig?.setItem({ upsell });\n  }, [upsell]);\n\n  useEffect(() => {\n    persistConfig?.setItem({ user });\n  }, [user]);\n\n  useEffect(() => {\n    if (user.token) {\n      api.defaults.headers.Authorization = `Bearer ${user.token}`;\n    } else {\n      delete api.defaults.headers.Authorization;\n    }\n  }, [user.token]);\n\n  useEffect(() => {\n    if (user.currency) {\n      api.defaults.headers.common['X-Currency'] = user.currency;\n    }\n  }, [user.currency]);\n\n  useEffect(() => {\n    const reqIID = transportHash ? reqInterceptor(transportHash) : undefined;\n    const resIID = resInterceptor(() => {\n      userDispatch({ type: 'CLEAR_USER' });\n    });\n\n    // it was happening that requests would fail because the interceptors weren't mounted\n    setInterceptorsMounted(true);\n\n    return () => {\n      if (reqIID) {\n        api.interceptors.request.eject(reqIID);\n      }\n      api.interceptors.response.eject(resIID);\n    };\n  }, []);\n\n  return (\n    <StoreContext.Provider\n      value={{\n        dispatch: {\n          upsellDispatch,\n          userDispatch,\n        },\n        interceptorsMounted,\n        state: { upsell, user },\n      }}\n    >\n      <ResponseStateProvider\n        persistConfig={persistConfig}\n        persist={persist?.responseState}>\n        <BookingProvider\n          persistConfig={persistConfig}\n          persist={persist?.booking}>\n          {children}\n        </BookingProvider>\n      </ResponseStateProvider>\n    </StoreContext.Provider>\n  );\n};\n\nexport default StoreProvider;\n","import { makeUseAxios } from 'axios-hooks';\nimport { api as axios } from './consts';\n\nexport const useApi = makeUseAxios({ axios });\n\nexport const useManualApi = makeUseAxios({\n  axios,\n  defaultOptions: { manual: true },\n});\n","import React, { ReactNode, useEffect, useMemo, useRef } from 'react';\nimport type { ResponseValues } from 'axios-hooks';\nimport { createContext, useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport { Language } from './types';\nimport {\n  ConnectionSearchCity,\n  LocationCountry,\n  LocationStation,\n} from './useLocations';\nimport { useApi } from './useManualApi';\nimport type { SeatClassData } from './useSeatClasses';\nimport type { TariffResponse } from './useTariffs';\nimport type { VehicleStandard } from './useVehicleStandards';\n\ninterface PersistProps extends PersistContextCacheItem {\n  locationsResponse: ResponseValues<LocationCountry[], any, any>;\n  tariffsResponse: ResponseValues<TariffResponse[], any, any>;\n  seatClassesResponse: ResponseValues<SeatClassData[], any, any>;\n  vehicleStandardsResponse: ResponseValues<VehicleStandard[], any, any>;\n}\n\nexport interface PersistContextCacheItem {\n  locations?: ConnectionSearchCity[];\n  tariffs?: TariffResponse[];\n  seatClasses?: SeatClassData[];\n  vehicleStandards?: VehicleStandard[];\n}\n\nexport interface PersistContextCache {\n  getItem: () => PersistContextCacheItem;\n  setItem: (o: Partial<PersistContextCacheItem>) => void;\n}\n\nconst PersistContext = createContext<PersistProps>({} as PersistProps);\n\ninterface Props {\n  children?: ReactNode;\n  cache?: PersistContextCache;\n}\n\nexport const flattenLocations = (\n  locations: LocationCountry[],\n): ConnectionSearchCity[] =>\n  locations.flatMap((c) =>\n    c.cities.map((city) => ({\n      aliases: city.aliases,\n      code: c.code,\n      id: city.id,\n      name: `${city.name}, ${c.country}`,\n      placeType: 'CITY' as const,\n      stations: city.stations.map((st: LocationStation) => ({\n        ...st,\n        aliases: [...st.aliases, ...city.aliases],\n        countryCode: c.code,\n        name: st.fullname,\n        placeType: 'STATION' as const,\n        types: st.stationsTypes,\n      })),\n    })),\n  );\n\nconst useHandleApiResponse = <T extends keyof PersistContextCacheItem>(\n  response: ResponseValues<any, any, any>,\n  cacheKey: T,\n  cacheRef: React.MutableRefObject<Language | undefined>,\n  cache: PersistContextCache | undefined,\n  language: Language,\n) => {\n  const data = response.data || cache?.getItem()[cacheKey];\n\n  useEffect(() => {\n    if (cache && cacheRef.current !== language && data) {\n      cache.setItem({ [cacheKey]: data });\n      cacheRef.current = language;\n    }\n  }, [data, language, cache]);\n\n  return data;\n};\n\nconst useHandleApiError = (\n  response: ResponseValues<any, any, any>,\n  refetch: () => void,\n) => {\n  useEffect(() => {\n    if (!response.error) {\n      return;\n    }\n\n    const interval = setInterval(refetch, 10_000);\n    return () => clearInterval(interval);\n  }, [response.error, refetch]);\n};\n\nexport const PersistContextProvider: React.FC<Props> = ({\n  cache,\n  children,\n}) => {\n  const { language, currency } = useContextSelector(\n    StoreContext,\n    (c) => c.state.user,\n  );\n\n  const locationsCacheSetForLang = useRef<Language>();\n  const tariffsCacheSetForLang = useRef<Language>();\n  const seatClassesCacheSetForLang = useRef<Language>();\n  const vehicleStandardsCacheSetForLang = useRef<Language>();\n\n  useEffect(() => {\n    api.defaults.headers.common['X-Lang'] =\n      language === 'de-AT' ? 'at' : language;\n    api.defaults.headers.common['X-Currency'] = currency;\n  }, [language, currency]);\n\n  const [locationsResponse, refetchLocations] =\n    useApi<LocationCountry[]>('/consts/locations');\n  const [tariffsResponse, refetchTariffs] =\n    useApi<TariffResponse[]>('/consts/tariffs');\n  const [seatClassesResponse, refetchSeatClasses] = useApi<SeatClassData[]>(\n    '/consts/seatClasses',\n  );\n  const [vehicleStandardsResponse, refetchVehicleStandards] = useApi<VehicleStandard[]>(\n    '/consts/vehicleStandards',\n  );\n\n  const fetchedForLanguage = useRef(language);\n\n  useEffect(() => {\n    if (fetchedForLanguage.current === language) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    Promise.all([\n      refetchLocations({ signal }),\n      refetchTariffs({ signal }),\n      refetchSeatClasses({ signal }),\n      refetchVehicleStandards({ signal }),\n    ]).then(() => {\n      fetchedForLanguage.current = language;\n    });\n    return () => {\n      abortController.abort();\n    };\n  }, [\n    language,\n    refetchLocations,\n    refetchSeatClasses,\n    refetchTariffs,\n    refetchVehicleStandards,\n  ]);\n\n  const locations = useMemo(() => {\n    if (locationsResponse.data) {\n      return flattenLocations(locationsResponse.data);\n    }\n    return cache?.getItem().locations;\n  }, [locationsResponse.data, cache]);\n\n  useEffect(() => {\n    if (cache && locationsCacheSetForLang.current !== language && locations) {\n      cache.setItem({ locations });\n      locationsCacheSetForLang.current = language;\n    }\n  }, [locations, language, cache]);\n\n  const tariffs = useHandleApiResponse(\n    tariffsResponse,\n    'tariffs',\n    tariffsCacheSetForLang,\n    cache,\n    language,\n  );\n  const seatClasses = useHandleApiResponse(\n    seatClassesResponse,\n    'seatClasses',\n    seatClassesCacheSetForLang,\n    cache,\n    language,\n  );\n  const vehicleStandards = useHandleApiResponse(\n    vehicleStandardsResponse,\n    'vehicleStandards',\n    vehicleStandardsCacheSetForLang,\n    cache,\n    language,\n  );\n\n  useHandleApiError(locationsResponse, refetchLocations);\n  useHandleApiError(tariffsResponse, refetchTariffs);\n  useHandleApiError(seatClassesResponse, refetchSeatClasses);\n  useHandleApiError(vehicleStandardsResponse, refetchVehicleStandards);\n\n  return (\n    <PersistContext.Provider\n      value={{\n        locations,\n        locationsResponse,\n        tariffs,\n        tariffsResponse,\n        seatClassesResponse,\n        seatClasses,\n        vehicleStandards,\n        vehicleStandardsResponse,\n      }}\n    >\n      {children}\n    </PersistContext.Provider>\n  );\n};\n\nexport default PersistContext;\n","import React, { ReactNode, useEffect } from 'react';\nimport StoreProvider, { PersistedState, StoreProviderProps } from '../store/rootReducer';\nimport { api, Env, envUrls } from './consts';\nimport { PersistContextCache, PersistContextProvider } from './PersistContext';\n\nexport interface PersistConfig {\n  getItem: () => PersistedState;\n  setItem: (o: Partial<PersistedState>) => void;\n}\n\ninterface ShopProviderProps extends StoreProviderProps {\n  children?: ReactNode;\n  env?: Env;\n  verbose?: boolean;\n  cache?: PersistContextCache;\n  applicationOrigin?: string;\n}\n\nconst ShopProvider: React.FC<ShopProviderProps> = ({\n  children,\n  env = Env.QA,\n  verbose,\n  cache,\n  applicationOrigin = 'WEB',\n  ...rest\n}) => {\n  api.defaults.baseURL = envUrls[env];\n  api.defaults.headers['X-Application-Origin'] = applicationOrigin;\n\n  useEffect(() => {\n    if (verbose) {\n      const reqInterceptor = api.interceptors.request.use((req) => {\n        const { baseURL, data, headers, params, url } = req;\n        // eslint-disable-next-line no-console\n        console.log('Req: ', { baseURL, data, headers, params, url });\n        return req;\n      });\n      const resInterceptor = api.interceptors.response.use((res) => {\n        const { baseURL, params, url } = res.request ?? {};\n        const { status, data, headers } = res;\n        // eslint-disable-next-line no-console\n        console.log('Res: ', { baseURL, data, headers, params, status, url });\n        return res;\n      }, (e) => {\n        // eslint-disable-next-line no-console\n        console.log('Res error: ', e, JSON.stringify(e, null, 2));\n        throw e;\n      });\n\n      return () => {\n        api.interceptors.request.eject(reqInterceptor);\n        api.interceptors.response.eject(resInterceptor);\n      };\n    }\n  }, [verbose]);\n\n  return (\n    <StoreProvider {...rest}>\n      <PersistContextProvider cache={cache}>{children}</PersistContextProvider>\n    </StoreProvider>\n  );\n};\n\nexport default ShopProvider;\n","import { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport {\n  ErrorFields,\n  ResponseStateCategory,\n  SET_RESPONSE_STATE,\n} from '../store/responseState/types';\n\nconst useSetResponseState = (category: ResponseStateCategory) => {\n  const dispatch = useContextSelector(ResponseStateContext, c => c.dispatch);\n\n  return (\n    message: string | undefined,\n    loading: boolean,\n    errorFields: ErrorFields[] | undefined = undefined,\n  ) => {\n    dispatch({\n      type: SET_RESPONSE_STATE,\n      payload: { type: category, error: { message, errorFields }, loading },\n    });\n  };\n};\n\nexport default useSetResponseState;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport {\n  AddonsPassengersPayload,\n  Currency,\n  RouteSectionDepArr,\n  SelectedSeat,\n  TicketAddonState,\n} from './types';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\ninterface AddonCommons {\n  addonId: number;\n  currency: Currency;\n  price: number;\n}\n\nexport interface TicketAddon {\n  id: number;\n  name: string;\n  shortDescription: string;\n  description: string;\n  iconUrl: string;\n  infoUrl: string | null;\n  infoUrlLabel: string | null;\n  price: number;\n  currency: Currency;\n  conditions: Conditions;\n  state: TicketAddonState;\n}\n\nexport interface SelectedAddon extends AddonCommons {\n  addonCode?: string;\n  conditionsHash: string;\n  count: number;\n}\n\nexport interface VerifyAddonsPayload extends AddonsPassengersPayload {\n  selectedAddons: SelectedAddon[];\n}\n\nexport interface RouteSectionData extends RouteSectionDepArr {\n  selectedSeats: SelectedSeat[];\n}\n\nexport interface Addon extends AddonCommons {\n  addonCode: string;\n  conditions: Conditions;\n  shortDescription: string;\n  description: string;\n  iconUrl: string;\n  infoUrl: null | string;\n  infoUrlLabel: null | string;\n  maxCount: number;\n  name: string;\n}\n\nexport interface Conditions {\n  descriptions: Descriptions;\n  code: string;\n}\n\nexport interface Descriptions {\n  cancel: string;\n  rebook: string;\n  expiration: string;\n}\n\nconst useAddons = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.addons,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.addons],\n  );\n\n  const [{ loading: addonsLoading, error: addonsError, data }, callAddons] =\n    useManualApi<Addon[]>({ url: '/addons', method: 'POST' });\n\n  const [\n    { loading: verificationLoading, error: verificationError },\n    callVerifyAddons,\n  ] = useManualApi({ url: '/addons/verify', method: 'POST' });\n\n  const [{ loading: putLoading, error: putError }, callPutAddons] =\n    useManualApi({ url: '/addons', method: 'PUT' });\n\n  const fetchAddons = async (payload: AddonsPassengersPayload, signal?: GenericAbortSignal) => {\n    try {\n      await callAddons({ data: payload, signal });\n\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const verifyAddons = async (payload: VerifyAddonsPayload, signal?: GenericAbortSignal) => {\n    try {\n      await callVerifyAddons({ data: payload, signal });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const putAddons = async (\n    ticketId: number,\n    selectedAddons: SelectedAddon[],\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await callPutAddons({ data: { selectedAddons }, params: { ticketId }, signal });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    setState(\n      addonsError?.response?.data?.message ||\n      verificationError?.response?.data?.message ||\n      putError?.response?.data?.message,\n      addonsLoading || verificationLoading || putLoading,\n      addonsError?.response?.data?.errorFields ||\n      verificationError?.response?.data?.errorFields ||\n      putError?.response?.data?.errorFields,\n    );\n  }, [\n    addonsError,\n    addonsLoading,\n    verificationError,\n    verificationLoading,\n    putError,\n    putLoading,\n  ]);\n\n  return {\n    fetchAddons,\n    putAddons,\n    verifyAddons,\n    data: data?.filter((a) => a.maxCount).sort((a, b) => b.price - a.price),\n    ...categoryState,\n  };\n};\n\nexport default useAddons;\n","import type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport {\n  CLEAR_BOOKING,\n  ConnectionDirection,\n  REPLACE_TARIFFS,\n  SAVE_CONNECTION,\n  SaveConnectionPayload,\n  SELECT_ADDONS,\n  SELECT_CLASS,\n  SELECT_CODE_DISCOUNT,\n  SELECT_PERC_DISCOUNT,\n  SELECT_ROUTE,\n  SELECT_SEATS,\n  SelectClassPayload,\n  SelectRoutePayload,\n  SET_PRICE,\n  UPSELL_ADDONS,\n} from '../store/booking/types';\nimport { Currency, SelectedSeat, Tariff } from './types';\nimport { SelectedAddon } from './useAddons';\nimport { useManualApi } from './useManualApi';\n\nexport interface DiscountResponse {\n  amount: number;\n  currency: Currency;\n  discountedTicketPrice: number;\n}\n\nexport const useBookingDiscount = (directionProp: ConnectionDirection = 'there') => {\n  const isReturn = useContextSelector(BookingContext, c => c.state.booking?.isReturn);\n  const direction = directionProp === 'back' && isReturn ? 'back' : 'there';\n  const bookingItem = useContextSelector(BookingContext, c => c.state.booking?.[direction]);\n  const dispatch = useContextSelector(BookingContext, c => c.dispatch);\n\n  const [{ error, data }, verifyDiscount] =\n    useManualApi<DiscountResponse>({\n      method: 'POST',\n    });\n  const selectCodeDiscount = async (\n    codeDiscount: string | number | undefined,\n    signal?: GenericAbortSignal,\n  ) => {\n    if (!bookingItem) {\n      return;\n    }\n    const { data: discountData } = await verifyDiscount({\n      url:\n        typeof codeDiscount === 'number'\n          ? `/discounts/percentual/${codeDiscount}/verify`\n          : `/discounts/code/${codeDiscount}/verify`,\n      data: {\n        actionPrice: null,\n        passengers: bookingItem.tariffs?.map((tariff) => ({\n          tariff,\n        })),\n        route: {\n          priceSource: bookingItem.priceSource,\n          routeId: bookingItem.routeId,\n          seatClass: bookingItem.seatClass,\n          sections: bookingItem.sections?.map(\n            ({ selectedSeats, ...section }) => ({ section, selectedSeats }),\n          ),\n        },\n        ticketPrice: bookingItem.price,\n      },\n      signal,\n    });\n\n    const discountAmount =\n      bookingItem.price! - discountData.discountedTicketPrice;\n\n    dispatch({\n      type: SET_PRICE,\n      payload: { direction, price: discountData.discountedTicketPrice },\n    });\n\n    if (typeof codeDiscount === 'number') {\n      dispatch({\n        type: SELECT_PERC_DISCOUNT,\n        payload: {\n          percentualDiscountIds: [codeDiscount],\n          discountAmount,\n          direction,\n        },\n      });\n    } else {\n      dispatch({\n        type: SELECT_CODE_DISCOUNT,\n        payload: { codeDiscount, discountAmount, direction },\n      });\n    }\n  };\n\n  return {\n    data,\n    error,\n    selectCodeDiscount,\n  };\n};\n\nconst useBookingActions = (directionProp: ConnectionDirection = 'there') => {\n  const isReturn = useContextSelector(BookingContext, c => c.state.booking?.isReturn);\n  const direction = directionProp === 'back' && isReturn ? 'back' : 'there';\n  const dispatch = useContextSelector(BookingContext, c => c.dispatch);\n\n  const createBooking = (payload: SaveConnectionPayload) =>\n    dispatch({ type: SAVE_CONNECTION, payload });\n\n  const replaceTariffs = (tariffs: Tariff[]) =>\n    dispatch({\n      type: REPLACE_TARIFFS,\n      payload: { direction, tariffs },\n    });\n\n  const selectRoute = (payload: Omit<SelectRoutePayload, 'direction'>) =>\n    dispatch({\n      type: SELECT_ROUTE,\n      payload: { ...payload, direction },\n    });\n\n  const selectClass = (payload: Omit<SelectClassPayload, 'direction'>) =>\n    dispatch({\n      type: SELECT_CLASS,\n      payload: { ...payload, direction },\n    });\n\n  const selectSeats = (seats: SelectedSeat[]) =>\n    dispatch({ type: SELECT_SEATS, payload: { seats, direction } });\n\n  const selectAddons = (selectedAddons: SelectedAddon[]) =>\n    dispatch({\n      type: SELECT_ADDONS,\n      payload: { selectedAddons, direction },\n    });\n\n  const upsellAddons = (selectedAddons: SelectedAddon[]) => \n    dispatch({\n      type: UPSELL_ADDONS,\n      payload: { selectedAddons, direction },\n    });\n\n  const clearBooking = (dir?: ConnectionDirection) =>\n    dispatch({ type: CLEAR_BOOKING, payload: { direction: dir } });\n\n  return {\n    clearBooking,\n    createBooking,\n    replaceTariffs,\n    selectAddons,\n    selectClass,\n    selectRoute,\n    selectSeats,\n    upsellAddons,\n  };\n};\n\nexport default useBookingActions;\n","import { useMemo } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\n\nconst useBookingPrice = () => {\n  const thereAddons = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.selectedAddons,\n  );\n  const backAddons = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.back?.selectedAddons,\n  );\n  const therePrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.price,\n  );\n  const backPrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.back?.price,\n  );\n  const backCarbonOffsetPrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.carbonOffset?.amount,\n  );\n  const thereCarbonOffsetPrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.carbonOffset?.amount,\n  );\n  //eslint-disable-next-line no-console\n  console.log('🚀 ~ useBookingPrice ~ backCarbonOffsetPrice:', backCarbonOffsetPrice);\n  //eslint-disable-next-line no-console\n  console.log('🚀 ~ useBookingPrice ~ thereCarbonOffsetPrice:', thereCarbonOffsetPrice);\n  const addonsPrice = useMemo(\n    () =>\n      [...(thereAddons || []), ...(backAddons || [])].reduce(\n        (prev, curr) => prev + (curr.price * curr.count),\n        0,\n      ),\n    [thereAddons, backAddons],\n  );\n\n  const bookingPrice = (therePrice ?? 200) + (backPrice ?? 200);\n\n  const CarbonOffsetPrice = (backCarbonOffsetPrice ?? 0) + (thereCarbonOffsetPrice ?? 0);\n\n  const totalPrice = bookingPrice + addonsPrice + CarbonOffsetPrice;\n\n  return { addonsPrice, backPrice, bookingPrice, therePrice, totalPrice, CarbonOffsetPrice };\n};\n\nexport default useBookingPrice;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useContext, useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { getErrorMessage, langPriorityCountries } from './consts';\nimport PersistContext from './PersistContext';\nimport { StationCountry } from './types';\nimport useSetResponseState from './useSetResponseState';\nimport { getPriorityInArray } from './utils';\n\nexport type StationType = 'BUS_STATION' | 'TRAIN_STATION';\nexport type LocationType = 'CITY' | 'STATION';\n\nexport interface StationCityCommons {\n  aliases: string[];\n  id: number;\n  name: string;\n  significance?: number;\n}\n\nexport interface ConnectionSearchStation extends StationCityCommons {\n  address: string;\n  latitude: number;\n  longitude: number;\n  placeType: 'STATION';\n  types: StationType[];\n  countryCode: StationCountry;\n}\n\nexport interface ConnectionSearchCity extends StationCityCommons {\n  stations: (ConnectionSearchStation & LocationStation)[];\n  placeType: 'CITY';\n  code: StationCountry;\n}\n\nexport interface LocationStation extends StationCityCommons {\n  address: string;\n  fullname: string;\n  imageUrl: string | null;\n  latitude: number;\n  longitude: number;\n  significance: number;\n  stationsTypes: StationType[];\n}\n\nexport interface LocationCity extends StationCityCommons {\n  stations: LocationStation[];\n}\n\nexport interface LocationCountry {\n  country: string;\n  code: StationCountry;\n  cities: LocationCity[];\n}\n\nconst useLocations = (sort?: boolean) => {\n  const language = useContextSelector(StoreContext, c => c.state.user.language);\n  const priorityCountries = langPriorityCountries[language];\n  const setState = useSetResponseState(\n    ResponseStateCategory.locations,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.locations],\n  );\n\n  const {\n    locationsResponse: { error, loading },\n    locations,\n  } = useContext(PersistContext);\n\n  const getStation = useCallback(\n    (stationId: number) => {\n      if (!locations) {\n        return;\n      }\n      for (const city of locations) {\n        for (const station of city.stations) {\n          if (station.id === stationId) {\n            return {\n              ...station,\n              cityId: city.id,\n              cityName: city.name,\n            };\n          }\n        }\n      }\n    },\n    [locations],\n  );\n\n  const getCity = useCallback((cityId: number) =>\n    locations?.find(c => c.id === cityId), [locations],\n  );\n\n  const getDestination = (destinationId: number) =>\n    getStation(destinationId) ?? getCity(destinationId);\n\n  const data = useMemo(() => {\n    return sort ?\n      locations\n        ?.sort((a: { code: StationCountry }, b: { code: StationCountry }) =>\n          getPriorityInArray(priorityCountries, a.code) -\n          getPriorityInArray(priorityCountries, b.code),\n        )\n        .map(c => ({\n          ...c,\n          stations: c.stations.sort((a, b) => b.significance - a.significance),\n        })) :\n      locations;\n  }, [locations]);\n\n  useEffect(() => {\n    setState(\n      error?.response?.data?.message || getErrorMessage(error),\n      !!loading,\n    );\n  }, [error, loading]);\n\n  return { data, getCity, getDestination, getStation, ...categoryState };\n};\n\nexport default useLocations;\n","import { useMemo, useRef, useState } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport { DateString, StationCountry, Tariff, VehicleKey } from './types';\nimport { RouteOverview } from './useConnectionRoute';\nimport { ActionPrice } from './useCreateTickets';\nimport useLocations, { LocationType } from './useLocations';\nimport { useManualApi } from './useManualApi';\n\nexport const croatiaNotSroStations = [\n  5577656005, 5577656007, 5577656006, 5362691025,\n];\n\nconst additionalStationsMap = Object.freeze<Record<number, number>>({\n  10202001: 3088864005,\n});\n\nconst routesURL = '/routes/search/simple';\nconst versionHeaders = { Accept: 'application/1.2.0+json' };\n\nconst additionalStationsArrivalCountries: (StationCountry | undefined)[] = [\n  'HR',\n];\n\nexport interface ConnectionLocations {\n  fromLocationId: number;\n  fromLocationName?: string;\n  fromLocationType: LocationType;\n  toLocationId: number;\n  toLocationName?: string;\n  toLocationType: LocationType;\n}\n\nexport interface ConnectionPayload extends ConnectionLocations {\n  departureDate: DateString;\n  returnDepartureDate?: DateString;\n  tariffs: Tariff[];\n}\n\nexport interface SroConnectionPayload {\n  departureDate: DateString;\n  fromLocationType: LocationType;\n  fromLocation: number;\n  numberOfPassengers: number;\n  toLocationType: LocationType;\n  toLocation: number;\n}\n\ntype ConnectionState =\n  | Omit<ConnectionPayload, 'fromLocationName' | 'toLocationName'>\n  | undefined;\n\nexport interface ConnectionRoute extends RouteOverview {\n  actionPrice?: ActionPrice;\n  surcharge: boolean;\n  pricesCount: number;\n  nationalTrip: boolean;\n  vehicleStandards: VehicleKey[];\n}\n\nexport interface Connection {\n  routes: ConnectionRoute[];\n  routesMessage: string | null;\n  textBubbles: { id: number; text: string }[];\n}\n\nconst useConnection = () => {\n  const isCreditPrice = useContextSelector(\n    StoreContext,\n    (c) => c.state.user.user?.creditPrice,\n  );\n\n  const connection = useRef<ConnectionState>();\n  const headersRef = useRef<Record<string, string | undefined>>({});\n\n  const [{ data, loading }, callConnectionSearch] = useManualApi<Connection>({\n    url: routesURL,\n    method: 'GET',\n    headers: versionHeaders,\n  });\n  const [additionalData, setAdditionalData] = useState<Connection>();\n  const { getCity, getStation } = useLocations();\n\n  const [sroLoading, setSroLoading] = useState(false);\n\n  const shouldFindSro = useMemo(\n    () =>\n      !!data?.routes.some(\n        ({\n          transfersCount,\n          vehicleTypes,\n          arrivalStationId,\n          departureStationId,\n        }) =>\n          !transfersCount &&\n          vehicleTypes.includes('TRAIN') &&\n          !(\n            croatiaNotSroStations.includes(arrivalStationId) ||\n            croatiaNotSroStations.includes(departureStationId)\n          ),\n      ),\n    [data],\n  );\n\n  const correctPriceData: Connection | undefined = data && {\n    routesMessage:\n      additionalData?.routesMessage &&\n      data.routesMessage &&\n      additionalData?.routesMessage !== data.routesMessage\n        ? [data.routesMessage, additionalData?.routesMessage].join('\\n')\n        : data.routesMessage || additionalData?.routesMessage || null,\n    textBubbles: additionalData?.textBubbles.length\n      ? [...data.textBubbles, ...additionalData.textBubbles].filter(\n        (bubble, index, self) =>\n          index ===\n            self.findIndex((t) => t.id === bubble.id && t.text === bubble.text),\n      )\n      : data.textBubbles,\n    routes: (additionalData\n      ? [...data.routes, ...additionalData.routes]\n      : data.routes\n    )\n      .sort(\n        (a, b) =>\n          new Date(a.departureTime).valueOf() -\n          new Date(b.departureTime).valueOf(),\n      )\n      .map((ar) => ({\n        ...ar,\n        priceFrom: isCreditPrice ? ar.creditPriceFrom : ar.priceFrom,\n        priceTo: isCreditPrice ? ar.creditPriceTo : ar.priceTo,\n      })),\n  };\n\n  const fetchConnectionData = async (\n    params: ConnectionPayload,\n    headers: Record<string, string | undefined>,\n    move?: 'BACKWARD' | 'FORWARD',\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      if (additionalData) {\n        setAdditionalData(undefined);\n      }\n\n      const additionalStation =\n        !!additionalStationsMap[params.fromLocationId] &&\n        additionalStationsArrivalCountries.includes(\n          params.toLocationType === 'CITY'\n            ? getCity(params.toLocationId)?.code\n            : getStation(params.toLocationId)?.countryCode,\n        );\n\n      const [{ headers: responseHeaders }, additionalRes] = await Promise.all([\n        callConnectionSearch({\n          headers: { ...headers, ...versionHeaders },\n          params: {\n            ...params,\n            departureDate: params.departureDate.slice(0, 10),\n            ...(move && { move }),\n          },\n          signal,\n        }),\n        additionalStation &&\n          api.get<Connection>(routesURL, {\n            headers,\n            signal,\n            params: {\n              ...params,\n              fromLocationId: additionalStationsMap[params.fromLocationId],\n              fromLocationType: 'STATION',\n              departureDate: params.departureDate.slice(0, 10),\n              ...(move && { move }),\n            },\n          }),\n      ]);\n\n      if (additionalRes) {\n        setAdditionalData(additionalRes.data);\n      }\n\n      headersRef.current = {\n        'x-used-departurefromdatetime':\n          responseHeaders['x-used-departurefromdatetime'],\n        'x-used-departuretodatetime':\n          responseHeaders['x-used-departuretodatetime'],\n      };\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchConnection = async (\n    {\n      returnDepartureDate,\n      fromLocationName,\n      toLocationName,\n      departureDate,\n      ...params\n    }: ConnectionPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      connection.current = { ...params, departureDate };\n      const apiParams = {\n        ...params,\n        departureDate,\n        returnDepartureDate,\n        fromLocationName,\n        toLocationName,\n      };\n      return await fetchConnectionData(apiParams, {}, undefined, signal);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchForwardRoutes = async (\n    headers?: Record<string, string | undefined>,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      return await fetchConnectionData(\n        connection.current as ConnectionPayload,\n        {\n          ...headersRef.current,\n          ...headers,\n        },\n        'FORWARD',\n        signal,\n      );\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchBackwardRoutes = async (\n    headers?: Record<string, string | undefined>,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      return await fetchConnectionData(\n        connection.current as ConnectionPayload,\n        {\n          ...headersRef.current,\n          ...headers,\n        },\n        'BACKWARD',\n        signal,\n      );\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchSroRoutes = async (\n    payload: SroConnectionPayload,\n    signal?: GenericAbortSignal,\n  ): Promise<ConnectionRoute[]> => {\n    setSroLoading(true);\n    const [firstRoute, secondRoute] = await Promise.all(\n      [2, 1].map((seatClass) =>\n        api.get<ConnectionRoute[]>('/routes/search/RJ_SRO', {\n          params: { ...payload, seatClass },\n          signal,\n        }),\n      ),\n    );\n    setSroLoading(false);\n\n    return firstRoute.data.map((route, i) => {\n      const currentRoute = secondRoute.data[i];\n      if (!currentRoute) {\n        return {\n          ...route,\n          /* YBUS returns prices only for 1 passenger in SRO - to unify it with seat tickets,\n           * we need to multiply by no of passengers */\n          creditPriceFrom: route.creditPriceFrom * payload.numberOfPassengers,\n          creditPriceTo: route.creditPriceTo * payload.numberOfPassengers,\n          priceFrom: route.priceFrom * payload.numberOfPassengers,\n          priceTo: route.priceTo * payload.numberOfPassengers,\n        };\n      }\n      return {\n        ...route,\n        /* Some props has to be calculated to be merged correctly */\n        pricesCount: route.pricesCount + currentRoute.pricesCount,\n        creditPriceFrom:\n          Math.min(route.creditPriceFrom, currentRoute.creditPriceFrom) *\n          payload.numberOfPassengers,\n        creditPriceTo:\n          Math.max(route.creditPriceTo, currentRoute.creditPriceTo) *\n          payload.numberOfPassengers,\n        priceFrom:\n          Math.min(route.priceFrom, currentRoute.priceFrom) *\n          payload.numberOfPassengers,\n        priceTo:\n          Math.max(route.priceTo, currentRoute.priceTo) *\n          payload.numberOfPassengers,\n        freeSeatsCount: route.freeSeatsCount + currentRoute.freeSeatsCount,\n      };\n    });\n  };\n\n  return {\n    data: correctPriceData,\n    fetchBackwardRoutes,\n    fetchConnection,\n    fetchForwardRoutes,\n    fetchSroRoutes,\n    loading: loading || sroLoading,\n    shouldFindSro,\n  };\n};\n\nexport default useConnection;\n","import { useEffect, useMemo } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { Tariff, TicketType } from './types';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport enum PassengerFieldsFromApi {\n  email = 'EMAIL',\n  firstName = 'FIRST_NAME',\n  surname = 'SURNAME',\n  phone = 'PHONE',\n  customerName = 'CUSTOMER_NAME',\n  customerAddress = 'CUSTOMER_ADDRESS',\n  dateOfBirth = 'BIRTHDAY',\n}\n\nexport enum PassengerFieldsToSend {\n  email = 'email',\n  firstName = 'firstName',\n  phone = 'phone',\n  surname = 'surname',\n  customerName = 'customerName',\n  customerAddress = 'customerAddress',\n  dateOfBirth = 'dateOfBirth',\n}\n\nexport const mapPassengerData: {\n  [key in PassengerFieldsFromApi]: PassengerFieldsToSend;\n} = {\n  CUSTOMER_ADDRESS: PassengerFieldsToSend.customerAddress,\n  CUSTOMER_NAME: PassengerFieldsToSend.customerName,\n  EMAIL: PassengerFieldsToSend.email,\n  FIRST_NAME: PassengerFieldsToSend.firstName,\n  PHONE: PassengerFieldsToSend.phone,\n  SURNAME: PassengerFieldsToSend.surname,\n  BIRTHDAY: PassengerFieldsToSend.dateOfBirth,\n};\n\nexport interface ContactData {\n  email: true;\n  phone: boolean;\n}\n\nexport interface PassengerField {\n  name: PassengerFieldsToSend;\n  value: string;\n  error?: string;\n}\n\nexport interface Passengers {\n  tariff: Tariff;\n  fields: Record<PassengerFieldsToSend, string>;\n}\n\nexport interface PersonalDataPassengers {\n  tariff?: Tariff;\n  fields: PassengerField[];\n}\n\nexport interface PersonalData {\n  from: string;\n  to: string;\n  passengers: PersonalDataPassengers[];\n}\n\nexport interface PassengersData {\n  contactData: ContactData;\n  personalData: PersonalData;\n}\n\nexport interface PassengersApiData {\n  firstPassengerData: PassengerFieldsFromApi[];\n  otherPassengersData: PassengerFieldsFromApi[];\n}\n\nconst typesToIgnore: TicketType[] = ['RJ_TIME', 'FLEXI'];\n\nconst usePassengersData = () => {\n  const connection = useContextSelector(BookingContext, c => c.state.booking?.connection);\n  const bookingThere = useContextSelector(BookingContext, c => c.state.booking?.there);\n  const bookingBack = useContextSelector(BookingContext, c => c.state.booking?.back);\n  const setState = useSetResponseState(\n    ResponseStateCategory.passengersData,\n  );\n  const [\n    { data: thereData, loading: thereLoading, error: thereError },\n    fetchThere,\n  ] = useManualApi<PassengersApiData>({});\n  const [\n    { data: backData, loading: backLoading, error: backError },\n    fetchBack,\n  ] = useManualApi<PassengersApiData>({});\n\n  const loading = thereLoading || backLoading;\n  const error = thereError || backError;\n\n  const data = useMemo(() => {\n    if (!thereData || (bookingBack?.routeId && !backData) || !connection) {\n      return {\n        contactData: { email: true } as ContactData,\n        personalData: {\n          from: connection?.fromLocationName,\n          passengers: [],\n          to: connection?.toLocationName,\n        } as PersonalData,\n      };\n    }\n    const morePreciseData = !backData ||\n      thereData.otherPassengersData.length > backData.otherPassengersData.length ?\n      thereData :\n      backData;\n\n    const contactData: ContactData = {\n      email: true,\n      phone: morePreciseData.firstPassengerData.some((pd) =>\n        pd.includes(PassengerFieldsFromApi.phone),\n      ),\n    };\n\n    const personalData: PersonalData = {\n      from: connection.fromLocationName!,\n      to: connection.toLocationName!,\n      passengers: Array.from({ length: (bookingThere || bookingBack)?.tariffs?.length ?? 1 })\n        .map((_, i) => ({\n          fields: (i\n            ? morePreciseData.otherPassengersData\n            : morePreciseData.firstPassengerData.filter(\n              (p) => !['EMAIL', 'PHONE'].includes(p),\n            )\n          ).map((passData) => ({\n            name: mapPassengerData[passData],\n            value: '',\n          })),\n          tariff: (bookingThere || bookingBack)?.tariffs?.[i],\n        })),\n    };\n\n    return { contactData, personalData };\n  }, [thereData, backData]);\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [loading, error]);\n\n  useEffect(() => {\n    if (!bookingBack?.routeId || !bookingBack.type || typesToIgnore.includes(bookingBack.type)) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (bookingBack?.type === 'RJ_SRO') {\n      fetchBack({\n        params: {\n          departureDate: new Date(),\n          fromStationId: bookingBack?.fromStationId,\n          numberOfPassenger: bookingBack?.tariffs?.length,\n          routeId: bookingBack?.routeId,\n          seatClass: 1,\n          toStationId: bookingBack?.toStationId,\n        },\n        signal,\n        url: `/routes/${bookingBack?.routeId}/passengersData/RJ_SRO`,\n      });\n    } else {\n      fetchBack({\n        data: {\n          priceSource: bookingBack?.priceSource,\n          seatClass: bookingBack?.seatClass,\n          sections: (bookingBack?.sections || []).map(\n            ({ selectedSeats, ...section }) => section,\n          ),\n          tariffs: bookingBack?.tariffs,\n        },\n        method: 'POST',\n        signal,\n        url: `/routes/${bookingBack?.routeId}/passengersData`,\n      });\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [bookingBack?.routeId]);\n\n  useEffect(() => {\n    if (!bookingThere?.routeId || !bookingThere.type || typesToIgnore.includes(bookingThere.type)) {\n      return;\n    }\n\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (bookingThere?.type === 'RJ_SRO') {\n      fetchThere({\n        params: {\n          departureDate: new Date(),\n          fromStationId: bookingThere?.fromStationId,\n          numberOfPassenger: bookingThere?.tariffs?.length,\n          routeId: bookingThere?.routeId,\n          seatClass: 1,\n          toStationId: bookingThere?.toStationId,\n        },\n        signal,\n        url: `/routes/${bookingThere?.routeId}/passengersData/RJ_SRO`,\n      });\n    } else {\n      fetchThere({\n        data: {\n          priceSource: bookingThere?.priceSource,\n          seatClass: bookingThere?.seatClass,\n          sections: (bookingThere?.sections || []).map(\n            ({ selectedSeats, ...section }) => section,\n          ),\n          tariffs: bookingThere?.tariffs,\n        },\n        method: 'POST',\n        signal,\n        url: `/routes/${bookingThere?.routeId}/passengersData`,\n      });\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [bookingThere?.routeId]);\n\n  return {\n    data,\n    error: error?.response?.data.message,\n    loading,\n  };\n};\n\nexport default usePassengersData;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { useManualApi } from './useManualApi';\nimport {\n  PassengerFieldsFromApi,\n  PassengerFieldsToSend,\n} from './usePassengersData';\nimport { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { Tickets } from './useUserTickets';\nimport { basketItemsToTicketTypes, gtmPush } from './utils';\n\n/**\n * Adding user credit\n */\nconst useCredit = (\n  unpaidTickets: Tickets,\n) => {\n  const user = useContextSelector(StoreContext, c => c.state.user);\n  const currency = useContextSelector(StoreContext, c => c.state.user.currency);\n  const setState = useSetResponseState(\n    ResponseStateCategory.credit,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.credit],\n  );\n\n  const [{ error, loading }, fetchAddCredit] = useManualApi<{\n    payRedirectUrl: string;\n  }>({\n    url: '/payments/credit/add',\n    method: 'POST',\n  });\n\n  const addCredit = async (\n    amount: number,\n    rememberCard: boolean,\n    chargeTickets = false,\n    tickets: TicketTypeId[] | undefined = undefined,\n    fields: Partial<Record<PassengerFieldsToSend, string>> = {},\n    signal?: GenericAbortSignal,\n  ) => {\n    if (user.user) {\n      const ticketsCorrelation = chargeTickets\n        ? (tickets ? tickets : basketItemsToTicketTypes(unpaidTickets))\n          .map((t) => `${t.type}=${t.id}`)\n          .join('&')\n        : null;\n\n      try {\n        const payload = {\n          amount: currency === 'EUR' ? parseFloat(amount.toFixed(1)) : amount,\n          currency,\n          paymentMethodCode: user.paymentMethodCode,\n          correlationId: `credit${ticketsCorrelation ? `&${ticketsCorrelation}` : ''\n          }`,\n          formFields: [\n            {\n              fieldType: PassengerFieldsFromApi.email,\n              fieldValue: fields?.email || user.user.email,\n            },\n            fields.firstName && {\n              fieldType: PassengerFieldsFromApi.firstName,\n              fieldValue: fields.firstName,\n            },\n            fields.surname && {\n              fieldType: PassengerFieldsFromApi.surname,\n              fieldValue: fields.surname,\n            }, fields.customerName && {\n              fieldType: PassengerFieldsFromApi.customerName,\n              fieldValue: fields.customerName,\n            }, fields.customerAddress && {\n              fieldType: PassengerFieldsFromApi.customerAddress,\n              fieldValue: fields.customerAddress,\n            },\n          ].filter(Boolean),\n          rememberCard,\n        };\n\n        gtmPush({ event: 'ADD_CREDIT', ADD_CREDIT: payload });\n\n        const { data } = await fetchAddCredit({ data: payload, signal });\n\n        return data.payRedirectUrl;\n      } catch (e) { }\n    }\n  };\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [error, loading]);\n\n  return { addCredit, ...categoryState };\n};\n\nexport default useCredit;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport { DateString, VehicleKey } from './types';\nimport { useApi } from './useManualApi';\n\nexport interface Departure {\n  busConnectionId: number;\n  label: string;\n  number: null | string;\n  delay: number;\n  vehicleCategory: 'COACH' | 'RAIL_CAR';\n  freeSeatsCount: number;\n  connectionStations: ConnectionStation[];\n  type: 'RJ' | 'R' | 'WB';\n  vehicleStandard: VehicleKey;\n}\n\nexport interface ConnectionStation {\n  stationId: number;\n  arrival: DateString | null;\n  departure: DateString | null;\n  platform: null | string;\n  departingStation: boolean;\n}\n\nconst useDepartures = (stationId: number, limit = 10) => {\n  const language = useContextSelector(\n    StoreContext,\n    (c) => c.state.user.language,\n  );\n  const [{ loading, error, data }, fetchDepartures] = useApi<Departure[]>({\n    headers: { Accept: 'application/1.1.0+json' },\n    method: 'GET',\n    url: `/routes/${stationId}/departures?limit=${limit}`,\n  });\n\n  useEffect(() => {\n    api.defaults.headers.common['X-Lang'] =\n      language === 'de-AT' ? 'at' : language;\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchDepartures({ signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [language]);\n\n  return { data, error, fetchDepartures, loading };\n};\n\nexport default useDepartures;\n","import { useEffect } from 'react';\nimport { VehicleType } from './types';\nimport { useManualApi } from './useManualApi';\n\nexport interface CityPair {\n  departureCityId: number;\n  arrivalCityId: number;\n  numberOfTransfers: number;\n  transportTypes: VehicleType[];\n  iataCodesForDepartureCity: string[];\n  iataCodesForArrivalCity: string[];\n}\n\nconst useCityPairs = (cityId: number) => {\n  const [{ data: cityPairs = [], loading }, fetchFromCityPairs] = useManualApi<\n  CityPair[]\n  >({ method: 'GET', url: '/consts/cityPairs' });\n\n  useEffect(() => {\n    if (!cityId) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchFromCityPairs({ params: { fromCityId: cityId }, signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [cityId]);\n\n  return { cityPairs, loading };\n};\n\nexport default useCityPairs;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { getErrorMessage } from './consts';\nimport {\n  Currency,\n  DateString,\n  FlexiType,\n  RouteId,\n  SeatClass,\n  Tariff,\n  TicketType,\n  VehicleKey,\n  VehicleType,\n} from './types';\nimport { Descriptions } from './useAddons';\nimport { ActionPrice } from './useCreateTickets';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport type Service =\n  | 'typy_vozidel_astra'\n  | 'typy_vozidel_automaty'\n  | 'typy_vozidel_bezp_sluzba'\n  | 'typy_vozidel_bez_dotykove_obrazovky'\n  | 'typy_vozidel_chlazene_napoje'\n  | 'typy_vozidel_denni_tisk'\n  | 'typy_vozidel_detske_kupe'\n  | 'typy_vozidel_dotykova_obrazovka'\n  | 'typy_vozidel_dzus'\n  | 'typy_vozidel_imobilni'\n  | 'typy_vozidel_imobilni_rampa'\n  | 'typy_vozidel_klidova_zona'\n  | 'typy_vozidel_klimatizace'\n  | 'typy_vozidel_kocarky'\n  | 'typy_vozidel_kresilko'\n  | 'typy_vozidel_low_cost'\n  | 'typy_vozidel_obcerstveni'\n  | 'typy_vozidel_online_catering'\n  | 'typy_vozidel_prednostni_servis'\n  | 'typy_vozidel_preprava_kola'\n  | 'typy_vozidel_restauracni_vuz'\n  | 'typy_vozidel_sekt'\n  | 'typy_vozidel_sluchatka'\n  | 'typy_vozidel_snidane'\n  | 'typy_vozidel_spaci_vuz'\n  | 'typy_vozidel_spaci_vuz_zeny'\n  | 'typy_vozidel_stevardka'\n  | 'typy_vozidel_teple_napoje_zdarma'\n  | 'typy_vozidel_tiche_kupe'\n  | 'typy_vozidel_wifi_ano'\n  | 'typy_vozidel_wifi_ne'\n  | 'typy_vozidel_zabavni_portal_ano'\n  | 'typy_vozidel_zasuvka'\n  | 'typy_vozidel_zastuvka_ne'; // Yeah, there's typo\n\nexport interface Line {\n  id: number;\n  code: string | null;\n  from: string;\n  to: string;\n  lineGroupCode: string;\n  lineNumber: number;\n}\n\nexport interface CarbonOffset {\n  amount: number;\n  currency: Currency;\n}\n\nexport interface TransferTime {\n  days: number;\n  hours: number;\n  minutes: number;\n}\n\nexport interface Transfer {\n  fromStationId: number;\n  toStationId: number;\n  calculatedTransferTime: TransferTime;\n  determinedTransferTime: TransferTime | null;\n  description: string | null;\n}\n\nexport interface TariffNotifications {\n  title: string;\n  description: string;\n  content: string[];\n}\n\nexport interface PriceClass {\n  actionPrice: null | ActionPrice;\n  bookable: boolean;\n  conditions: { descriptions: Descriptions };\n  creditPrice: number;\n  customerNotifications: string[];\n  flexiType?: FlexiType;\n  freeSeatsCount: number;\n  lineGroupCode?: string;\n  lineNumber?: number;\n  price: number;\n  priceSource: string;\n  seatClassKey: SeatClass;\n  services: Service[];\n  tariffNotifications: TariffNotifications;\n  tariffs: Tariff[];\n  type: TicketType;\n}\n\nexport interface TransfersInfo {\n  info: string;\n  transfers: Transfer[];\n}\n\nexport interface RouteSectionCommons {\n  arrivalCityName: string;\n  arrivalStationId: number;\n  arrivalCityId: number;\n  arrivalStationName: string;\n  arrivalTime: DateString;\n  delay: string | null;\n  departureCityName: string;\n  departureStationId: number;\n  departureCityId: number;\n  departureStationName: string;\n  departureTime: DateString;\n  estimatedArrivalTime: DateString;\n  freeSeatsCount: number;\n  support: boolean;\n  travelTime: string;\n}\n\nexport interface Section extends RouteSectionCommons {\n  departurePlatform: string | null;\n  id: number;\n  line: Line;\n  notices: string[] | null;\n  vehicleType: VehicleType;\n  services: Service[];\n  vehicleStandardKey: VehicleKey;\n}\n\nexport interface RouteOverview extends RouteSectionCommons {\n  bookable: boolean;\n  creditPriceFrom: number;\n  creditPriceTo: number;\n  id: RouteId;\n  mainSectionId: number;\n  notices: boolean;\n  priceFrom: number;\n  priceTo: number;\n  transfersCount: number;\n  vehicleTypes: VehicleType[];\n}\n\nexport interface Surcharge {\n  price: number;\n  notification: string;\n}\n\nexport interface RouteDetail extends RouteOverview {\n  carbonOffset: CarbonOffset;\n  nationalTrip: boolean;\n  priceClasses: PriceClass[];\n  sections: Section[];\n  transfersInfo: TransfersInfo | null;\n  surcharge: null | Surcharge;\n  vehicleStandardKey: VehicleKey;\n}\n\nexport interface FlexiResponse {\n  flexiType?: FlexiType;\n  lineGroupCode: string;\n  lineNumber: number;\n  price: number;\n  seatClassKey: SeatClass;\n}\n\nexport interface RoutePayload {\n  routeId: string | number;\n  fromStationId: number;\n  toStationId: number;\n  tariffs: Tariff[];\n}\n\nexport interface SroPriceClass {\n  conditions: SroConditions;\n  freeSeatsCount: number;\n  numberOfPassengers: number;\n  price: number;\n  priceSource: string;\n  seatClassKey: SeatClass;\n}\n\nexport interface SroPriceClassSelectable extends SroPriceClass {\n  tariffs: Tariff[];\n  type: TicketType;\n}\n\nexport interface SroConditions {\n  cancelCharge: number;\n  code: string;\n  refundToOriginalSourcePossible: boolean;\n}\n\nexport interface SroRouteResponse {\n  priceClasses: SroPriceClass[];\n  routeId: string;\n}\n\nconst emptyArr: any[] = [];\n\nconst departureDate = '2022-01-01';\n\nconst useConnectionRoute = (ignoreErrors = false) => {\n  const setState = useSetResponseState(ResponseStateCategory.connectionRoute);\n  const isCreditPrice = useContextSelector(\n    StoreContext,\n    (c) => c.state.user.user?.creditPrice,\n  );\n  const [{ data, error, loading }, fetchRjSeat] = useManualApi<RouteDetail>({});\n\n  const [{ loading: sroLoading1, error: sroError1, data: sroData1 }, callSro1] =\n    useManualApi<SroRouteResponse>({});\n\n  const [{ loading: sroLoading2, error: sroError2, data: sroData2 }, callSro2] =\n    useManualApi<SroRouteResponse>({});\n  const rjSroLoading = sroLoading1 || sroLoading2;\n  const rjSroError = sroError1 || sroError2;\n\n  const dataWithPrice: RouteDetail | undefined = useMemo(\n    () =>\n      data && {\n        ...data,\n        priceFrom: isCreditPrice ? data.creditPriceFrom : data.priceFrom,\n        priceClasses: data.priceClasses.map((pc) => ({\n          ...pc,\n          price: isCreditPrice ? pc.creditPrice : pc.price,\n          type: 'RJ_SEAT' as TicketType,\n        })),\n      },\n    [data, isCreditPrice],\n  );\n\n  const fetchRoute = useCallback(\n    async (params: RoutePayload, signal?: GenericAbortSignal) => {\n      try {\n        // causes some weird bug in the app with memoizing even when not using any memoizing ...\n        // if (\n        //   params.fromStationId === data?.departureStationId\n        //   && params.toStationId === data.arrivalStationId\n        //   && params.routeId === data.id\n        //   && unorderedArrayEqual(params.tariffs, data.priceClasses[0]?.tariffs)\n        // ) return data;\n        const response = await fetchRjSeat({\n          url: `/routes/${params.routeId}/simple`,\n          params,\n          signal,\n        });\n\n        return response.data;\n      } catch {\n        return undefined;\n      }\n    },\n    [fetchRjSeat],\n  );\n\n  const fetchSroRoutes = useCallback(\n    async (\n      { routeId, ...payload }: RoutePayload,\n      signal?: GenericAbortSignal,\n    ) => {\n      // if (\n      //   sroData1?.routeId === routeId &&\n      //   sroData2?.routeId === routeId\n      // ) return [sroData2, sroData1].flatMap((sro) => sro.priceClasses);\n      const params = {\n        ...payload,\n        numberOfPassengers: payload.tariffs.length,\n      };\n      const url = `/routes/${routeId}/RJ_SRO`;\n      try {\n        const sroPriceClasses = await Promise.all([\n          callSro2({\n            params: {\n              ...params,\n              departureDate,\n              seatClass: 2,\n            },\n            signal,\n            url,\n          }),\n          callSro1({\n            params: {\n              ...params,\n              departureDate,\n              seatClass: 1,\n            },\n            signal,\n            url,\n          }),\n        ]);\n        return sroPriceClasses.flatMap((sro) => sro.data.priceClasses);\n      } catch {\n        return undefined;\n      }\n    },\n    [callSro1, callSro2],\n  );\n\n  const routeLoading = loading || rjSroLoading;\n  const routeError = error || rjSroError;\n\n  useEffect(() => {\n    if (!ignoreErrors) {\n      setState(\n        routeError?.response?.data?.message || getErrorMessage(routeError),\n        routeLoading,\n        routeError?.response?.data?.errorFields,\n      );\n    }\n  }, [routeLoading, routeError]);\n\n  const rjSroClasses = useMemo(\n    () =>\n      sroData1?.priceClasses.length || sroData2?.priceClasses.length\n        ? [\n          ...(sroData1?.priceClasses ?? []),\n          ...(sroData2?.priceClasses ?? []),\n        ].map<SroPriceClassSelectable>((sroCl) => ({\n          ...sroCl,\n          tariffs: new Array<Tariff>(sroCl.numberOfPassengers).fill(\n            Tariff.Regular,\n          ),\n          price: sroCl.price * sroCl.numberOfPassengers,\n          type: 'RJ_SRO',\n        }))\n        : (emptyArr as SroPriceClassSelectable[]),\n    [sroData1, sroData2],\n  );\n\n  return {\n    data: dataWithPrice,\n    fetchRoute,\n    fetchSroRoutes,\n    rjSroClasses,\n    routeError,\n    routeLoading,\n  };\n};\n\nexport default useConnectionRoute;\n","import { useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { FlexiResponse, RoutePayload } from './useConnectionRoute';\nimport { useManualApi } from './useManualApi';\nimport { isRegional } from './utils';\n\nconst useFlexiTickets = () => {\n  const [{ data, loading }, fetchClasses] = useManualApi<FlexiResponse[]>({});\n\n  const fetchRoute =\n    async (params: RoutePayload, departureDate: string, signal?: GenericAbortSignal) => {\n      try {\n        const { routeId, fromStationId, toStationId, tariffs } = params;\n\n        if (!isRegional(fromStationId, toStationId) ||\n          tariffs.length !== 1) {\n          return true;\n        }\n        await fetchClasses({\n          signal,\n          url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/FLEX/${departureDate}/${tariffs[0]}`,\n        });\n        return true;\n      } catch (e) {\n        return false;\n      }\n    };\n\n  return useMemo(() => ({\n    data,\n    fetchRoute,\n    loading,\n  }), [loading, data]);\n};\n\nexport default useFlexiTickets;","import { useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport { FlexiResponse, RoutePayload } from './useConnectionRoute';\nimport { useManualApi } from './useManualApi';\n\nenum FlexiType {\n  Week = 'WEEK',\n  Month = 'MONTH',\n  Quarter = 'QUARTER',\n}\nconst flexiTypes = [FlexiType.Week, FlexiType.Month, FlexiType.Quarter];\n\nconst useTimeTickets = () => {\n  const departureDate = useContextSelector(\n    BookingContext,\n    c => c.state.booking?.connection.departureDate,\n  );\n  const [\n    { data: flexiClassesWeek, loading: loadingWeek, error: errorWeek },\n    fetchWeek,\n  ] = useManualApi<FlexiResponse[]>({});\n  const [\n    { data: flexiClassesMonth, loading: loadingMonth, error: errorMonth },\n    fetchMonth,\n  ] = useManualApi<FlexiResponse[]>({});\n  const [\n    { data: flexiClassesQuarter, loading: loadingQuarter, error: errorQuarter },\n    fetchQuarter,\n  ] = useManualApi<FlexiResponse[]>({});\n\n  const loading = loadingWeek || loadingMonth || loadingQuarter;\n  const error = errorWeek || errorMonth || errorQuarter;\n\n  const isFlexiLoaded = !!(\n    flexiClassesWeek?.length &&\n    flexiClassesMonth?.length &&\n    flexiClassesQuarter?.length\n  );\n\n  const fetchRoute = async (\n    {\n      fromStationId,\n      toStationId,\n      tariffs,\n      routeId,\n    }: RoutePayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    await Promise.all(\n      [fetchWeek({\n        signal,\n        url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/${FlexiType.Week}/${departureDate}/${tariffs[0]}`,\n      }),\n      fetchMonth({\n        signal,\n        url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/${FlexiType.Month}/${departureDate}/${tariffs[0]}`,\n      }),\n      fetchQuarter({\n        signal,\n        url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/${FlexiType.Quarter}/${departureDate}/${tariffs[0]}`,\n      })],\n    );\n  };\n\n  const data = useMemo(() =>\n    (isFlexiLoaded ? [flexiClassesWeek, flexiClassesMonth, flexiClassesQuarter] : [])\n      .flatMap(\n        (flexiClasses, i) => flexiClasses.map(\n          ({ price, seatClassKey, lineNumber, lineGroupCode }) => ({\n            flexiType: flexiTypes[i],\n            lineGroupCode,\n            lineNumber,\n            price,\n            seatClassKey,\n            type: 'FLEXI' as const,\n          })),\n      ), [isFlexiLoaded]);\n\n  return { data, error, fetchRoute, loading };\n};\n\nexport default useTimeTickets;","import {\n  Currency,\n  Language,\n  PaymentMethod,\n  Tariff,\n} from '../../hooks/types';\nimport { Company, Notifications } from '../../hooks/useUser';\n\nexport const SET_CURRENCY = 'SET_CURRENCY';\nexport const SET_CLASS = 'SET_CLASS';\nexport const SET_LANG = 'SET_LANG';\nexport const SET_LOGIN_NR = 'SET_LOGIN_NR';\nexport const SET_PAYMENT_CODE = 'SET_PAYMENT_CODE';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USER = 'SET_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\n\nexport interface PersistedUser {\n  id: number;\n  accountCode: string;\n  company?: Company;\n  companyInformation: boolean;\n  credit: number;\n  creditPrice: boolean;\n  currency: Currency;\n  defaultTariffKey: Tariff;\n  email: string;\n  employeeNumber: null | string;\n  firstName: string | null;\n  notifications: Notifications;\n  phoneNumber: string | null;\n  surname: string | null;\n}\n\nexport interface UserReducerProps {\n  currency: Currency;\n  language: Language;\n  loginNrs: string[];\n  paymentMethodCode: PaymentMethod | null;\n  token: string | null;\n  user: PersistedUser | null;\n}\n\ninterface SetTokenAction {\n  type: typeof SET_TOKEN;\n  payload: { token: string | null };\n}\n\ninterface SetLoginNrAction {\n  type: typeof SET_LOGIN_NR;\n  payload: { loginNr: string };\n}\n\ninterface SetLangAction {\n  type: typeof SET_LANG;\n  payload: { language: Language };\n}\n\ninterface SetCurrencyAction {\n  type: typeof SET_CURRENCY;\n  payload: { currency: Currency };\n}\n\ninterface SetPaymentCodeAction {\n  type: typeof SET_PAYMENT_CODE;\n  payload: { paymentMethodCode: PaymentMethod | null };\n}\n\ninterface SetUserAction {\n  type: typeof SET_USER;\n  payload: { user: PersistedUser | null };\n}\n\ninterface SetClearUserAction {\n  type: typeof CLEAR_USER;\n}\n\nexport type UserActions =\n  | SetClearUserAction\n  | SetCurrencyAction\n  | SetLangAction\n  | SetLoginNrAction\n  | SetPaymentCodeAction\n  | SetTokenAction\n  | SetUserAction;\n","import type { AxiosRequestConfig, GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport {\n  CLEAR_USER,\n  PersistedUser,\n  SET_CURRENCY,\n  SET_LANG,\n  SET_LOGIN_NR,\n  SET_TOKEN,\n  SET_USER,\n} from '../store/user/types';\nimport { api } from './consts';\nimport { Currency, Language } from './types';\n\nconst fetchAuthorize = (config?: AxiosRequestConfig) => api.get<PersistedUser | null>('/users/authenticate', config);\n\nexport const useHeadersActions = () => {\n  const dispatch = useContextSelector(StoreContext, c => c.dispatch.userDispatch);\n  const isLoggedIn = useContextSelector(StoreContext, c => !!c.state.user.user);\n\n  const setCurrency = (currency: Currency) => {\n    if (currency !== api.defaults.headers.common['X-Currency']) {\n      dispatch({ type: SET_CURRENCY, payload: { currency } });\n    }\n  };\n\n  const authorize = async (signal?: GenericAbortSignal) => {\n    let response;\n    try {\n      response = await fetchAuthorize({ signal });\n    } catch {\n      // @ts-expect-error hideTokenHash\n      response = await fetchAuthorize({ hideTokenHash: true, signal });\n    }\n    const data = response.data;\n    if (!data) {\n      return;\n    }\n    dispatch({ type: SET_USER, payload: { user: data } });\n    if (data.creditPrice) {\n      dispatch({\n        type: SET_LOGIN_NR,\n        payload: { loginNr: data.accountCode },\n      });\n    }\n    setCurrency(data.currency);\n    return data;\n  };\n\n  const setCaptcha = (hash: string) => {\n    if (!isLoggedIn) {\n      api.defaults.headers.common['X-ReCaptcha-Token'] = hash;\n    }\n  };\n\n  const setLanguage = (language: Language) => {\n    if (language !== api.defaults.headers.common['X-Lang']) {\n      dispatch({ type: SET_LANG, payload: { language } });\n    }\n  };\n\n  const setToken = async (token: string | null) => {\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n      dispatch({ type: SET_TOKEN, payload: { token } });\n      // eslint-disable-next-line @typescript-eslint/return-await\n      return await authorize();\n    } else {\n      delete api.defaults.headers.Authorization;\n      dispatch({ type: CLEAR_USER });\n    }\n  };\n\n  return {\n    authorize,\n    setCaptcha,\n    setCurrency,\n    setLanguage,\n    setToken,\n  };\n};\n\nconst useHeaders = () => {\n  const { currency, language, token } = useContextSelector(StoreContext, c => c.state.user);\n\n  return {\n    currency,\n    language: language || 'cs',\n    token,\n  };\n};\n\nexport default useHeaders;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { SET_LOGIN_NR, SET_PAYMENT_CODE, SET_USER } from '../store/user/types';\nimport { getErrorMessage, unusablePaymentMethods } from './consts';\nimport {\n  Currency,\n  DateString,\n  PaymentMethod,\n  StationCountry,\n  Tariff,\n} from './types';\nimport useBookingActions from './useBooking';\nimport { useHeadersActions } from './useHeaders';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface UserRegisterCommons {\n  firstName: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  company?: Company;\n  currency: Currency;\n}\n\nexport interface User extends UserRegisterCommons {\n  id: number;\n  accountCode: string;\n  restrictPhoneNumbers: boolean;\n  credit: number;\n  creditPrice: boolean;\n  defaultTariffKey: Tariff;\n  notifications: Notifications;\n  companyInformation: boolean;\n  conditionsAcceptance: boolean;\n  employeeNumber: null | string;\n}\n\nexport interface SimpleSignupPayload {\n  firstName: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  notifications: Notifications;\n  agreeWithTerms: boolean;\n}\n\nexport interface RegisterPayload extends UserRegisterCommons {\n  companyInformation: boolean;\n  defaultTariff: Tariff;\n  password: string;\n  notifications: Notifications;\n  agreeWithTerms: boolean;\n}\n\nexport interface LoginPayload {\n  accountCode: string;\n  password: string;\n}\n\nexport interface ChangeInfoPayload {\n  phoneNumber?: string;\n  restrictPhoneNumbers?: boolean;\n  companyInformation?: boolean;\n  company?: Company;\n  defaultTariffKey?: Tariff;\n  notifications?: Notifications;\n}\n\nexport interface ChangePasswordPayload {\n  newPassword: string;\n  oldPassword: string;\n}\n\nexport interface SignupData {\n  token: string;\n}\n\nexport interface ForgottenPasswordData {\n  accountCode: string;\n  email: string;\n  correlationId: string;\n}\n\nexport interface Company {\n  companyName: string;\n  address: string;\n  registrationNumber: string;\n  vatNumber: string;\n}\n\nexport interface Notifications {\n  newsletter: boolean;\n  reservationChange: boolean;\n  routeRatingSurvey: boolean;\n}\n\nexport interface PercentualDiscount {\n  dateFrom: DateString | null;\n  dateTo: DateString | null;\n  fromCityId: number | null;\n  fromCountry: null | StationCountry | 'EU';\n  fromStationId: number | null;\n  id: number;\n  passengers: number;\n  percentage: number;\n  state: 'VALID' | 'USED';\n  ticketId: number | null;\n  toCityId: number | null;\n  toCountry: null | StationCountry | 'EU';\n  toStationId: number | null;\n}\n\nexport const useUserActions = () => {\n  const setState = useSetResponseState(ResponseStateCategory.user);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.user],\n  );\n  const dispatch = useContextSelector(\n    StoreContext,\n    (c) => c.dispatch.userDispatch,\n  );\n  const user = useContextSelector(StoreContext, (c) => c.state.user.user);\n  const { setToken } = useHeadersActions();\n  const { clearBooking } = useBookingActions();\n\n  const [{ error: signupError, loading: signupLoading }, callRegistration] =\n    useManualApi<SignupData>({\n      url: '/users/signup/registeredAccount',\n      method: 'POST',\n    });\n\n  const [{ error: loginError, loading: loginLoading }, callLogin] =\n    useManualApi<SignupData>({\n      url: '/users/login/registeredAccount',\n      method: 'POST',\n    });\n  const [\n    { error: forgottenPasswordError, loading: forgottenPasswordLoading },\n    callForgottenPassword,\n  ] = useManualApi<ForgottenPasswordData>({\n    url: '/users/forgottenPassword',\n    method: 'POST',\n  });\n\n  const [\n    { error: loginTicketError, loading: loginTicketLoading },\n    callLoginTicket,\n  ] = useManualApi<SignupData>({\n    url: '/users/login/unregisteredAccount',\n    method: 'POST',\n  });\n\n  const [{ error: logoutError, loading: logoutLoading }, callLogout] =\n    useManualApi(\n      {\n        url: '/users/logout',\n        method: 'POST',\n        data: {},\n      },\n      { manual: true },\n    );\n\n  const [\n    { error: changeInfoError, loading: changeInfoLoading },\n    callChangeInfo,\n  ] = useManualApi({\n    url: '/users/settings/changeUserInformation',\n    method: 'PUT',\n  });\n\n  const [\n    { error: changePassError, loading: changePassLoading },\n    callChangePassword,\n  ] = useManualApi({\n    url: '/users/settings/changePassword',\n    method: 'PUT',\n  });\n\n  const [\n    { error: resetPassError, loading: resetPassLoading },\n    callResetPassword,\n  ] = useManualApi({\n    url: '/users/resetPassword',\n    method: 'POST',\n  });\n\n  const [\n    { error: resetPassVerifyError, loading: resetPassVerifyLoading },\n    callResetPasswordVerify,\n  ] = useManualApi({\n    url: '/users/resetPassword/verify',\n    method: 'GET',\n  });\n\n  const [{ error: qrError, loading: qrLoading, data: qrData }, getAccountQr] =\n    useManualApi({ url: '/tickets/account/qrcode', method: 'GET' });\n\n  const [\n    {\n      error: percDiscountsError,\n      loading: percDiscountsLoading,\n      data: percDiscountsData,\n    },\n    getPercDiscounts,\n  ] = useManualApi<PercentualDiscount[]>({\n    url: '/discounts/percentual',\n    method: 'GET',\n    headers: { Accept: 'application/1.1.0+json' },\n  });\n\n  const [\n    { error: registerOpenError, loading: registerOpenLoading },\n    callRegisterOpen,\n  ] = useManualApi<{ token: string }>({\n    url: '/users/signup/registeredAccount/simple',\n    method: 'POST',\n  });\n\n  const addLoginNumber = async (loginNr: string) =>\n    dispatch({ type: SET_LOGIN_NR, payload: { loginNr } });\n\n  const register = async (\n    payload: RegisterPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const { data, status } = await callRegistration({\n        data: payload,\n        signal,\n      });\n      if (status !== 200) {\n        return false;\n      }\n      await setToken(data.token);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const login = async (payload: LoginPayload, signal?: GenericAbortSignal) => {\n    try {\n      const response = await callLogin({ data: payload, signal });\n      const userData = await setToken(response.data.token);\n      return { response, user: userData };\n    } catch (e) {\n    }\n  };\n\n  const loginTicket = async (\n    accountCode: string,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const response = await callLoginTicket({ data: { accountCode }, signal });\n      const userData = await setToken(response.data.token);\n      return { response, user: userData };\n    } catch (e) {\n    }\n  };\n\n  const logout = async (signal?: GenericAbortSignal) => {\n    try {\n      await callLogout({ signal });\n      await setToken(null);\n      clearBooking();\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const registerOpenTicket = async (\n    data: SimpleSignupPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const response = await callRegisterOpen({ data, signal });\n      if (response.data.token) {\n        await setToken(response.data.token);\n      }\n\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const changeUserInfo = async (\n    changeInfoPayload: ChangeInfoPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      if (user) {\n        const {\n          companyInformation,\n          company,\n          defaultTariffKey,\n          notifications,\n          phoneNumber,\n        } = user;\n\n        await callChangeInfo({\n          data: {\n            companyInformation,\n            company,\n            defaultTariffKey,\n            notifications,\n            phoneNumber,\n            ...changeInfoPayload,\n          },\n          signal,\n        });\n\n        dispatch({\n          type: SET_USER,\n          payload: {\n            user: user && {\n              ...user,\n              ...changeInfoPayload,\n              company: changeInfoPayload.company\n                ? changeInfoPayload.company\n                : company,\n            },\n          },\n        });\n        return true;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const changeUserPassword = async (\n    changeInfoPayload: ChangePasswordPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await callChangePassword({ data: changeInfoPayload, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const requestPasswordReset = async (\n    data: ForgottenPasswordData,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await callForgottenPassword({ data, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const resetPassword = async (\n    newPassword: string,\n    token: string,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const headers = { Authorization: `Bearer ${token}` };\n\n      const { status: crpvStatus } = await callResetPasswordVerify({\n        headers,\n        signal,\n      });\n      const { status: crpStatus } = await callResetPassword({\n        data: { newPassword },\n        headers,\n        signal,\n      });\n      return crpvStatus === 200 && crpStatus === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const setPaymentCode = (paymentMethodCode: PaymentMethod | null) =>\n    (!paymentMethodCode ||\n      !unusablePaymentMethods.includes(paymentMethodCode)) &&\n    dispatch({ type: SET_PAYMENT_CODE, payload: { paymentMethodCode } });\n\n  const loading =\n    changeInfoLoading ||\n    changePassLoading ||\n    forgottenPasswordLoading ||\n    loginLoading ||\n    loginTicketLoading ||\n    logoutLoading ||\n    percDiscountsLoading ||\n    qrLoading ||\n    registerOpenLoading ||\n    resetPassLoading ||\n    resetPassVerifyLoading ||\n    signupLoading;\n\n  const error =\n    changeInfoError ||\n    changePassError ||\n    forgottenPasswordError ||\n    loginError ||\n    loginTicketError ||\n    logoutError ||\n    percDiscountsError ||\n    qrError ||\n    registerOpenError ||\n    resetPassError ||\n    resetPassVerifyError ||\n    signupError;\n\n  useEffect(() => {\n    setState(\n      error?.response?.data?.message || getErrorMessage(error),\n      loading,\n      error?.response?.data?.errorFields,\n    );\n  }, [error, loading]);\n\n  return {\n    addLoginNumber,\n    changeUserInfo,\n    changeUserPassword,\n    login,\n    loginTicket,\n    logout,\n    registerOpenTicket,\n    requestPasswordReset,\n    register,\n    resetPassword,\n    setPaymentCode,\n    accountQr: { getAccountQr, qrData },\n    percDiscounts: { getPercDiscounts, percDiscountsData },\n    ...categoryState,\n  };\n};\n\nconst useUser = () => {\n  const userObj = useContextSelector(StoreContext, (c) => c.state.user);\n\n  const { user } = userObj;\n  const isLoggedIn = !!user;\n  const isCreditPrice = !!user?.creditPrice;\n  const loginNumbers = userObj.loginNrs;\n\n  return {\n    isCreditPrice,\n    isLoggedIn,\n    loginNumbers,\n    user: userObj,\n  };\n};\n\nexport default useUser;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport axios, { isAxiosError } from 'axios';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { useImmer } from 'use-immer';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { FAIL_MESSAGE, api, getErrorMessage } from './consts';\nimport {\n  Currency,\n  DateString,\n  FlexiType,\n  RouteId,\n  SeatClass,\n  Tariff,\n  TicketState,\n  TicketType,\n} from './types';\nimport { TicketAddon } from './useAddons';\nimport { CarbonOffset, Section, TransfersInfo } from './useConnectionRoute';\nimport { Passenger } from './useCreateTickets';\nimport { SectionCommons } from './useSeats';\nimport useSetResponseState from './useSetResponseState';\nimport { PercentualDiscount } from './useUser';\n\nexport interface Bill {\n  amount: number;\n  currency: Currency;\n  label: string;\n}\n\nexport interface CustomerActions {\n  additionalServices: boolean;\n  cancel: boolean;\n  editPassengers: boolean;\n  evaluate: boolean;\n  pay: boolean;\n  payRemaining: boolean;\n  printInvoice: boolean;\n  printTicket: boolean;\n  rebook: boolean;\n  requiredToFillInQuestionnaire: boolean;\n  sentToMail: boolean;\n  showDetail: boolean;\n  storno: boolean;\n}\n\nexport interface TicketDescriptions {\n  cancel: string;\n  expiration: string;\n  rebook: string;\n}\n\nexport interface Conditions {\n  cancel?: DateString;\n  expireAt?: DateString;\n  coolingOff?: DateString;\n  departureCancel?: DateString;\n  expiration?: DateString;\n  cancellationFee?: number;\n  refundToOriginalSourcePossible?: boolean;\n}\n\nexport interface CodeDiscount {\n  code: string;\n  discount: number;\n  id: number;\n}\n\nexport interface TicketSection extends SectionCommons {\n  section: Section;\n}\n\nexport interface TimeTicket {\n  accountCode: string;\n  bills: Bill[];\n  conditions: Conditions;\n  customerActions: CustomerActions;\n  customerNotifications: string[] | null;\n  id: number;\n  name: string;\n  price: number;\n  seatClass: SeatClass;\n  state: TicketState;\n  station1Id: number;\n  station2Id: number;\n  surname: string;\n  tariff: { value: Tariff | null };\n  ticketCode: string;\n  type: FlexiType;\n  unpaid: number;\n  validFrom: DateString;\n  validTo: DateString;\n}\n\nexport interface SeatSroTicketCommons {\n  bills: Bill[];\n  currency: Currency;\n  customerActions: CustomerActions;\n  delay: string | null;\n  estimatedArrivalTime: DateString;\n  passengersInfo: { passengers: Passenger[] };\n  paymentId: number;\n  price: number;\n  routeSections: TicketSection[];\n  seatClassKey: SeatClass;\n  state: TicketState;\n  travelTime: string;\n  unpaid: number;\n}\n\nexport interface SeatTicket extends SeatSroTicketCommons {\n  addons: TicketAddon[] | null;\n  affiliateTicket: boolean | null;\n  cancelChargeSum: number | null;\n  cancelMoneyBackSum: number | null;\n  carbonOffset: CarbonOffset | null;\n  conditions: null | { descriptions: TicketDescriptions; code: string };\n  customerNotifications: string[] | null;\n  expirateAt: null | { days: number; hours: number; minutes: number };\n  expirationDate: DateString | null;\n  id: number;\n  routeId: RouteId;\n  surcharge: number;\n  ticketCode: string;\n  transfersInfo: TransfersInfo | null;\n  usedCodeDiscount: CodeDiscount | null;\n  usedPercentualDiscounts: PercentualDiscount[] | null;\n  wheelChairPlatformOrderPossible: boolean;\n  wheelChairPlatformOrdered: boolean;\n}\n\nexport interface SroTicket extends SeatSroTicketCommons {\n  affiliateTicket: boolean;\n  conditions: Conditions;\n  sroTicketId: number;\n}\n\nexport interface UserTicketsOptions {\n  limit: number;\n  sortDirection?: 'ASC' | 'DESC';\n}\n\nexport type FetchableTicketType = Exclude<TicketType, 'FLEXI'>;\n\nexport interface Tickets {\n  RJ_SEAT: SeatTicket[];\n  RJ_SRO: SroTicket[];\n  RJ_TIME: TimeTicket[];\n}\n\nexport type TicketsResponse =\n  | SeatTicket[]\n  | SroTicket[]\n  | { tickets: TimeTicket[] };\n\nexport const emptyTickets: Tickets = {\n  RJ_SEAT: [],\n  RJ_SRO: [],\n  RJ_TIME: [],\n};\n\nexport const emptyOffsets: Record<FetchableTicketType, number> = Object.freeze({\n  RJ_SEAT: 0,\n  RJ_SRO: 0,\n  RJ_TIME: 0,\n});\n\nexport const defaultOptions: Record<TicketState, UserTicketsOptions> = Object.freeze({\n  CANCELED: { limit: 10 },\n  UNPAID: { limit: 99, sortDirection: 'ASC' },\n  USED: { limit: 5 },\n  VALID: { limit: 10, sortDirection: 'ASC' },\n});\n\nconst ticketTypeToUrlPath = {\n  RJ_SEAT: '/tickets',\n  RJ_SRO: '/tickets/RJ_SRO',\n  RJ_TIME: '/tickets/RJ_TIME',\n};\n\nconst priceReducer =\n  (acc: number, { unpaid }: Tickets[FetchableTicketType][number]) =>\n    unpaid + acc;\n\nconst filterExpired = (t: Pick<SeatTicket, 'expirationDate'> & Pick<SroTicket, 'conditions'> & Pick<TimeTicket, 'conditions'>) =>\n  +new Date(t.expirationDate || t.conditions.expireAt || t.conditions.expiration || 0) >\n  +new Date().valueOf();\n\nconst polishData = (state: TicketState, { RJ_SEAT, RJ_SRO, RJ_TIME }: Tickets) => {\n  const addStateToTicket = (t: any) => ({ ...t, state });\n  if (state !== 'UNPAID') {\n    return {\n      RJ_SEAT: RJ_SEAT.map(addStateToTicket),\n      RJ_SRO: RJ_SRO.map(addStateToTicket),\n      RJ_TIME: RJ_TIME.map(addStateToTicket),\n    };\n  }\n  return {\n    RJ_SEAT: RJ_SEAT.map(addStateToTicket).filter(filterExpired),\n    RJ_SRO: RJ_SRO.map(addStateToTicket).filter(filterExpired),\n    RJ_TIME: RJ_TIME.map(addStateToTicket).filter(filterExpired),\n  };\n};\n\nconst polishSingleType = (state: TicketState, type: FetchableTicketType, tickets: any[]) => {\n  const addStateToTicket = (t: any) => ({ ...t, state });\n  if (state !== 'UNPAID') {\n    return tickets.map(addStateToTicket);\n  }\n  return tickets.filter(filterExpired).map(addStateToTicket);\n};\n\nconst useUserTickets = (\n  state: TicketState,\n  autoFetch = true,\n  options?: Partial<UserTicketsOptions>,\n) => {\n  const token = useContextSelector(StoreContext, c => c.state.user.token);\n  const interceptorsMounted = useContextSelector(StoreContext, c => c.interceptorsMounted);\n  const setState = useSetResponseState(\n    ResponseStateCategory.userTickets,\n  );\n  const error = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.userTickets].error,\n  );\n\n  const [tickets, setTickets] = useImmer<Tickets | undefined>(undefined);\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const maxTickets =\n    useRef<Record<FetchableTicketType, number>>(emptyOffsets);\n  const ticketsCount = useRef({ ...emptyOffsets });\n\n  if (tickets) {\n    ticketsCount.current.RJ_SEAT = tickets.RJ_SEAT.length;\n    ticketsCount.current.RJ_SRO = tickets.RJ_SRO.length;\n    ticketsCount.current.RJ_TIME = tickets.RJ_TIME.length;\n  }\n\n  const defaultParams = useMemo(() => ({\n    ...defaultOptions[state],\n    ...options,\n    ticketStates: [state],\n  }), [state]);\n\n  const shouldFetchMore = tickets ? {\n    RJ_SEAT: tickets.RJ_SEAT.length < maxTickets.current.RJ_SEAT,\n    RJ_SRO: tickets.RJ_SRO.length < maxTickets.current.RJ_SRO,\n    RJ_TIME: tickets.RJ_TIME.length < maxTickets.current.RJ_TIME,\n  } : {};\n\n  const totalPrice = useMemo(() =>\n    tickets ?\n      tickets.RJ_SEAT.reduce(priceReducer, 0) +\n      tickets.RJ_SRO.reduce(priceReducer, 0) +\n      tickets.RJ_TIME.reduce(priceReducer, 0)\n      : 0, [tickets],\n  );\n\n  const totalCount = maxTickets.current.RJ_SEAT +\n    maxTickets.current.RJ_SRO +\n    maxTickets.current.RJ_TIME;\n\n  const fetchedCount = loading || !tickets ? 0 :\n    tickets.RJ_SEAT.length + tickets.RJ_SRO.length + tickets.RJ_TIME.length;\n\n  const fetchTickets = useCallback(async (signal?: GenericAbortSignal, noLimitReset?: boolean) => {\n    try {\n      if (api.defaults.headers.Authorization) {\n        setState(undefined, false);\n        setLoading(true);\n        const [\n          { data: RJ_SEAT, headers: seatHeaders },\n          { data: RJ_SRO, headers: sroHeaders },\n          { data: rjTimeData, headers: timeHeaders },\n        ] = await Promise.all([\n          api.get<SeatTicket[]>(ticketTypeToUrlPath.RJ_SEAT, {\n            headers: {\n              'Accept': 'application/1.2.0+json',\n            },\n            params: noLimitReset && ticketsCount.current.RJ_SEAT ? {\n              ...defaultParams,\n              limit: ticketsCount.current.RJ_SEAT,\n            } : defaultParams,\n            signal,\n          }),\n          api.get<SroTicket[]>(ticketTypeToUrlPath.RJ_SRO, {\n            params: noLimitReset && ticketsCount.current.RJ_SRO ? {\n              ...defaultParams,\n              limit: ticketsCount.current.RJ_SRO,\n            } : defaultParams,\n            signal,\n          }),\n          api.get<{ tickets: TimeTicket[] }>(ticketTypeToUrlPath.RJ_TIME, {\n            params: noLimitReset && ticketsCount.current.RJ_TIME ? {\n              ...defaultParams,\n              limit: ticketsCount.current.RJ_TIME,\n            } : defaultParams,\n            signal,\n          }),\n        ]);\n\n        maxTickets.current = {\n          RJ_SEAT: parseInt(seatHeaders['x-pagination-total']!),\n          RJ_SRO: parseInt(sroHeaders['x-pagination-total']!),\n          RJ_TIME: parseInt(timeHeaders['x-pagination-total']!),\n        };\n        setTickets(polishData(state, { RJ_SEAT, RJ_SRO, RJ_TIME: rjTimeData.tickets }));\n        setLoading(false);\n      } else {\n        maxTickets.current = emptyOffsets;\n        setTickets(emptyTickets);\n      }\n      return true;\n    } catch (e) {\n      setLoading(false);\n      if (axios.isCancel(e)) {\n        return false;\n      }\n      maxTickets.current = emptyOffsets;\n      setTickets(undefined);\n      setState(isAxiosError(e) ?\n        e.response?.data.message || getErrorMessage(e)\n        : FAIL_MESSAGE, false);\n      return false;\n    }\n  }, [state]);\n\n  const fetchMore = useCallback(async (type: FetchableTicketType, signal?: GenericAbortSignal) => {\n    try {\n      if (api.defaults.headers.Authorization && tickets?.[type].length) {\n        setLoadingMore(true);\n        const { data } = await api.get(ticketTypeToUrlPath[type], {\n          params: { ...defaultParams, offset: tickets[type].length },\n          headers: type === 'RJ_SEAT' ? { 'Accept': 'application/1.2.0+json' } : undefined,\n          signal,\n        });\n\n        const fetchedTickets = polishSingleType(state, type, type === 'RJ_TIME' ? data.tickets : data);\n        if (!fetchedTickets.length) {\n          return;\n        }\n\n        setTickets(draft => {\n          draft?.[type].push(...fetchedTickets as any[]);\n        });\n        setLoadingMore(false);\n      } else {\n        maxTickets.current = emptyOffsets;\n        setTickets(undefined);\n      }\n    } catch (e) {\n      setTickets(undefined);\n      setState(isAxiosError(e) ?\n        e.response?.data.message || getErrorMessage(e)\n        : FAIL_MESSAGE, false);\n    }\n  }, [tickets, state]);\n\n  useEffect(() => {\n    if (autoFetch && api.defaults.headers.Authorization && interceptorsMounted) {\n      maxTickets.current = emptyOffsets;\n      setTickets(undefined);\n      fetchTickets();\n    } else if (!api.defaults.headers.Authorization) {\n      maxTickets.current = emptyOffsets;\n      setTickets(undefined);\n    }\n  }, [state, token, interceptorsMounted]);\n\n  return {\n    error,\n    fetchMore,\n    fetchTickets,\n    fetchedCount,\n    loading,\n    loadingMore,\n    shouldFetchMore,\n    tickets,\n    totalCount,\n    totalPrice,\n  };\n};\n\nexport default useUserTickets;\n","import { useEffect, useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { AxiosRequestConfig } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport {\n  DateString,\n  PaymentMethod,\n  PaymentType,\n  TicketState,\n  TicketType,\n} from './types';\nimport { useHeadersActions } from './useHeaders';\nimport { useManualApi } from './useManualApi';\nimport {\n  PassengerFieldsFromApi,\n  PassengerFieldsToSend,\n} from './usePassengersData';\nimport useSetResponseState from './useSetResponseState';\nimport { useUserActions } from './useUser';\nimport { emptyTickets, Tickets } from './useUserTickets';\nimport { basketItemsToTicketTypes, createTxToken, gtmPush } from './utils';\n\nexport interface TicketTypeId {\n  id: number;\n  type: TicketType;\n}\n\nexport interface Payment {\n  paymentMethodCode: PaymentMethod;\n  paymentType: PaymentType | null;\n  rememberCardEnabled: boolean;\n  active: boolean;\n  description: string;\n  deadline: DateString | null;\n  deadlineAt: number | null;\n}\n\nexport interface PaymentForm {\n  fieldName: string;\n  fieldType: PassengerFieldsFromApi;\n}\n\nexport interface PayResponse {\n  payRedirectUrl: string;\n  regiojetRedirectUrl: string;\n}\n\nexport interface AddGiftPayload {\n  certificate: string;\n  email: string;\n}\n\nexport type BuyTicketsType = 'credit' | 'payment';\n\nexport interface BuyTicketsResponse {\n  type: BuyTicketsType;\n  url: string | null;\n}\n\nconst API_CONFIG: AxiosRequestConfig = {\n  headers: { 'Content-Type': 'application/1.2.0+json' },\n  method: 'POST' as const,\n};\n\nconst usePayment = (\n  tickets: Tickets = emptyTickets,\n  credit = false,\n  ticketState: TicketState = 'UNPAID',\n) => {\n  const { authorize } = useHeadersActions();\n  const { setPaymentCode } = useUserActions();\n  const { user, paymentMethodCode } = useContextSelector(\n    StoreContext,\n    (c) => c.state.user,\n  );\n  const setState = useSetResponseState(ResponseStateCategory.payment);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.payment],\n  );\n\n  const ticketIds = basketItemsToTicketTypes(\n    ticketState === 'UNPAID'\n      ? tickets\n      : {\n          RJ_SEAT: tickets.RJ_SEAT.filter((t) => t.unpaid),\n          RJ_SRO: [],\n          RJ_TIME: [],\n        },\n  );\n\n  const [\n    {\n      data: paymentMethods,\n      error: paymentMethodsError,\n      loading: paymentMethodsLoading,\n    },\n    fetchPaymentMethods,\n  ] = useManualApi<Payment[]>({\n    headers: { 'Content-Type': 'application/1.1.0+json' },\n    method: 'POST',\n    url: '/payments/methods',\n  });\n\n  const [\n    { data: paymentForm, error: paymentFormError, loading: paymentFormLoading },\n    fetchPaymentForm,\n  ] = useManualApi<PaymentForm[]>({ method: 'POST', url: '/payments/form' });\n\n  const [{ error: payError, loading: payLoading }, fetchPay] =\n    useManualApi<PayResponse>({\n      url: '/payments/pay',\n      ...API_CONFIG,\n    });\n\n  const [{ error: giftAddError, loading: giftAddLoading }, fetchGiftAdd] =\n    useManualApi({\n      url: '/payments/credit/giftCertificate/add',\n      method: 'POST',\n    });\n\n  const [\n    { error: chargeCreditError, loading: chargeCreditLoading },\n    fetchChargeFromCredit,\n  ] = useManualApi<PaymentForm[]>({\n    url: '/payments/credit/charge',\n    ...API_CONFIG,\n  });\n\n  const getPaymentMethods = async (\n    ticketsTypeIds?: TicketTypeId[],\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetchPaymentMethods({\n        data: { ticketIds: credit ? [] : ticketsTypeIds || ticketIds },\n        signal,\n      });\n    } catch {}\n  };\n\n  const getPaymentForm = async (\n    ticket?: TicketTypeId,\n    manualPaymentMethodCode?: PaymentMethod,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const { data } = await fetchPaymentForm({\n        data: {\n          paymentMethodCode: manualPaymentMethodCode || paymentMethodCode,\n          ...(credit\n            ? { tickets: [] }\n            : { ticketIds: ticket ? [ticket] : ticketIds }),\n        },\n        headers: {\n          ...(!credit ? { 'Content-Type': 'application/1.1.0+json' } : {}),\n        },\n        signal,\n      });\n      return data;\n    } catch {}\n  };\n\n  const buyTickets = async (\n    rememberCard = false,\n    fields: Partial<Record<PassengerFieldsToSend, string>> = {},\n    boughtTickets: TicketTypeId[] | undefined = ticketIds,\n    fromCredit = false,\n    signal?: GenericAbortSignal,\n    useCreditChargeWithFormFields?: boolean\n  ): Promise<BuyTicketsResponse | null> => {\n    try {\n      const headers = { ...API_CONFIG.headers, 'X-TxToken': createTxToken() };\n\n      const { email = user?.email, ...restFields } = fields;\n\n      const formFields = [\n        { fieldType: PassengerFieldsFromApi.email, fieldValue: email },\n        ...Object.entries(restFields)\n          .filter(([, fieldValue]) => fieldValue)\n          .map(([k, fieldValue]) => ({\n            fieldType: PassengerFieldsFromApi[k as PassengerFieldsToSend],\n            fieldValue,\n          })),\n      ];\n\n      const correlationId = `tickets&${boughtTickets\n        .map((t) => `${t.type}=${t.id}`)\n        .join('&')}`;\n\n      if (user && fromCredit) {\n        await fetchChargeFromCredit({\n          data: { tickets: boughtTickets, ...(formFields?.length && useCreditChargeWithFormFields ? {formFields} : {}) },\n          headers,\n          signal,\n        });\n        await authorize(signal);\n\n        return { type: 'credit', url: correlationId };\n      }\n\n      const payload = {\n        correlationId,\n        formFields,\n        paymentMethodCode,\n        rememberCard,\n        tickets: boughtTickets,\n      };\n\n      gtmPush({ event: 'PAY', PAY: payload });\n\n      const { data } = await fetchPay({ data: payload, headers, signal });\n\n      return { type: 'payment', url: data.payRedirectUrl };\n    } catch {}\n\n    return null;\n  };\n\n  const addCreditByGift = async (\n    data: AddGiftPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetchGiftAdd({ data, signal });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const filteredPaymentMethods = useMemo(\n    () => paymentMethods?.filter((m) => m.active && m.paymentType),\n    [paymentMethods],\n  );\n\n  const error =\n    paymentMethodsError ||\n    paymentFormError ||\n    payError ||\n    giftAddError ||\n    chargeCreditError;\n\n  const loading =\n    paymentMethodsLoading ||\n    paymentFormLoading ||\n    payLoading ||\n    giftAddLoading ||\n    chargeCreditLoading;\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [error, loading]);\n\n  useEffect(() => {\n    if (\n      paymentMethodCode &&\n      filteredPaymentMethods?.length &&\n      !filteredPaymentMethods.some(\n        (m) => m.paymentMethodCode === paymentMethodCode,\n      )\n    ) {\n      setPaymentCode(null);\n    }\n  }, [filteredPaymentMethods]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    if (!credit && ticketIds?.length) {\n      fetchPaymentMethods({ data: { ticketIds }, signal });\n    } else if (credit) {\n      fetchPaymentMethods({ data: { ticketIds: [] }, signal });\n    }\n    return () => {\n      abortController.abort();\n    };\n  }, [tickets, credit]);\n\n  return {\n    addCreditByGift,\n    buyTickets,\n    getPaymentForm,\n    getPaymentMethods,\n    paymentForm,\n    paymentFormLoading,\n    paymentMethodsLoading,\n    paymentMethods: filteredPaymentMethods,\n    ticketsAvailable: !!ticketIds?.length,\n    ...categoryState,\n  };\n};\n\nexport default usePayment;\n","import { useEffect } from 'react';\nimport type { AxiosRequestConfig, GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport { BookingProps } from '../store/booking/types';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport {\n  DateString,\n  FlexiType,\n  RouteId,\n  RouteSectionFromTo,\n  SeatClass,\n  SelectedSeat,\n  Tariff,\n} from './types';\nimport { SelectedAddon } from './useAddons';\nimport useBookingActions from './useBooking';\nimport { useHeadersActions } from './useHeaders';\nimport { useManualApi } from './useManualApi';\nimport { Passengers } from './usePassengersData';\nimport usePayment, { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { SroTicket, TicketSection } from './useUserTickets';\nimport { createTxToken, getAffiliateCode, getNewSeats } from './utils';\n\nexport interface CreateSeatTicketData {\n  ticketRequests: SeatTicketRequest[];\n  affiliateCode?: string;\n}\n\nexport interface TimeTicketCreateRequest {\n  lineGroupCode: string;\n  lineNumber: number;\n  station1Id: number;\n  station2Id: number;\n  tariff: Tariff;\n  validFrom: DateString;\n}\n\nexport interface RegisteredTimeTicketCreateRequest\n  extends TimeTicketCreateRequest {\n  seatClass: SeatClass;\n  type: FlexiType;\n}\n\nexport interface UnregisteredTimeTicketCreateRequest\n  extends TimeTicketCreateRequest {\n  email: string;\n  seatClassKey: SeatClass;\n  timeTicketType: FlexiType;\n}\n\nexport interface CreateUnregTimeTicketData {\n  unregisteredTimeTicketCreateRequest: UnregisteredTimeTicketCreateRequest[];\n}\n\nexport interface CreateRegTimeTicketData {\n  timeTicketRequests: RegisteredTimeTicketCreateRequest[];\n}\n\nexport interface PassengerRequest extends PassengerData {\n  tariff: Tariff;\n}\n\nexport interface Passenger {\n  amount: number;\n  dateOfBirth: null;\n  email: string | null;\n  firstName: string | null;\n  id: number;\n  moneyBack: number;\n  phone: string | null;\n  surname: string | null;\n  tariff: Tariff;\n}\n\nexport interface SeatTicketRequest {\n  codeDiscount?: string;\n  passengers: PassengerRequest[];\n  percentualDiscountIds: number[];\n  route: Route;\n  selectedAddons: SelectedAddon[];\n}\n\nexport interface CreateSroTicketData {\n  ticketRequests: SroTicketRequest[];\n}\n\nexport interface SroTicketRequest {\n  passengers: { email: string }[];\n  priceSourceId: string;\n  routeId: string;\n  seatClass: SeatClass;\n  sections: SectionElement[];\n}\n\nexport interface PassengerData {\n  email?: string;\n  firstName?: string;\n  phone?: string;\n  surname?: string;\n  id?: number;\n}\n\nexport interface Route {\n  actionPrice?: ActionPrice;\n  priceSource: string;\n  routeId: RouteId;\n  seatClass: SeatClass;\n  sections: SectionElement[];\n}\n\nexport interface ActionPrice {\n  code: string;\n  description: string;\n  id: number;\n  name: string;\n  showIcon: boolean;\n  url: string;\n}\n\nexport interface SectionElement {\n  section: RouteSectionFromTo;\n  selectedSeats: SelectedSeat[];\n}\n\nexport interface SeatSroTicket {\n  id: string;\n  routeSections: TicketSection[];\n}\n\nexport interface UnregisteredSeatSroTicketData {\n  token: string;\n  tickets: SeatSroTicket[];\n}\n\nexport interface RegisteredSeatTicketData {\n  tickets: SeatSroTicket[];\n}\n\nexport interface UnregisteredTimeTicketData {\n  token: { token: string };\n}\n\nconst fetchSroTickets = (config?: AxiosRequestConfig) =>\n  api.get<SroTicket[]>('/tickets/RJ_SRO', {\n    params: { limit: 1, ticketStates: ['UNPAID'] },\n    ...config,\n  });\n\n/**\n * Reserving tickets and charging credit if there's enough credit in account\n */\nconst useCreateTickets = () => {\n  const isLoggedIn = useContextSelector(\n    StoreContext,\n    (c) => !!c.state.user.user,\n  );\n  const { setToken } = useHeadersActions();\n  const setState = useSetResponseState(ResponseStateCategory.createTickets);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.createTickets],\n  );\n  const { clearBooking } = useBookingActions();\n  const bookingThere = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there,\n  );\n  const bookingBack = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.back,\n  );\n  const connection = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.connection,\n  );\n  const carbonOffset = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.carbonOffset,\n  );\n\n  const {\n    buyTickets,\n    loading: paymentLoading,\n    error: paymentError,\n  } = usePayment();\n\n  const bookingPriceWithoutAddons =\n    (bookingThere?.price ?? 0) + (bookingBack?.price ?? 0);\n\n  const [\n    {\n      loading: unregisteredSeatTicketLoading,\n      error: unregisteredSeatTicketError,\n    },\n    fetchUnregisteredSeatTicket,\n  ] = useManualApi<UnregisteredSeatSroTicketData>({\n    url: '/tickets/create/unregistered',\n    method: 'POST',\n    headers: { 'Content-Type': 'application/1.2.0+json' },\n  });\n\n  const [\n    { loading: registeredSeatTicketLoading, error: registeredSeatTicketError },\n    fetchRegisteredSeatTicket,\n  ] = useManualApi<RegisteredSeatTicketData>({\n    url: '/tickets/create/registered',\n    method: 'POST',\n    headers: { 'Content-Type': 'application/1.2.0+json' },\n  });\n\n  const [\n    {\n      loading: unregisteredTimeTicketLoading,\n      error: unregisteredTimeTicketError,\n    },\n    fetchUnregisteredTimeTicket,\n  ] = useManualApi<UnregisteredTimeTicketData>({\n    url: '/tickets/timetickets/unregistered',\n    method: 'POST',\n  });\n\n  const [\n    { loading: registeredTimeTicketLoading, error: registeredTimeTicketError },\n    fetchRegisteredTimeTicket,\n  ] = useManualApi<number[]>({ url: '/tickets/timeticket', method: 'POST' });\n\n  const [\n    {\n      loading: unregisteredSroTicketLoading,\n      error: unregisteredSroTicketError,\n    },\n    fetchUnregisteredSroTicket,\n  ] = useManualApi<Pick<UnregisteredSeatSroTicketData, 'token'>>({\n    url: '/tickets/RJ_SRO/unregistered',\n    method: 'POST',\n  });\n\n  const [\n    { loading: registeredSroTicketLoading, error: registeredSroTicketError },\n    fetchRegisteredSroTicket,\n  ] = useManualApi<{ message: string; messageFields: string[] }>({\n    url: '/tickets/RJ_SRO/registered',\n    method: 'POST',\n  });\n\n  /**\n   * Tries to reserve tickets on ybus from all finished bookings.\n   * Returns route. If it redirects to checkout, it can also returns SelectedSeats,\n   * if there's new seats selected by ybus to inform user.\n   *\n   * @param passengers Its length has to match booking tariffs length\n   * @param chargeImmediately Set true only when user has enough credit and has fast booking\n   */\n  const createTickets = async (\n    email: string,\n    passengers: Passengers[],\n    phone?: string,\n    chargeImmediately?: boolean,\n    signal?: GenericAbortSignal,\n  ): Promise<{\n    newSeats: SelectedSeat[];\n    redirect: 'tickets' | 'checkout' | 'cart' | '';\n    ticketTypeId?: TicketTypeId[];\n  }> => {\n    try {\n      if (!connection) {\n        throw new Error('no connection');\n      }\n      const allBookings = [bookingThere, bookingBack].filter(\n        Boolean,\n      ) as BookingProps[];\n      const rjSeatBookings = allBookings.filter((b) => b.type === 'RJ_SEAT');\n      const rjSroBookings = allBookings.filter((b) => b.type === 'RJ_SRO');\n      const rjTimeBookings = allBookings.filter((b) =>\n        ['RJ_TIME', 'FLEXI'].includes(b.type!),\n      );\n\n      let newSeats: SelectedSeat[] | null = null;\n      let ticketTypeId: TicketTypeId[] | undefined = undefined;\n\n      const getTicketPassengers = (tariffs: Tariff[]) =>\n        !passengers.length\n          ? tariffs.map((tariff, i) => ({\n            tariff,\n            ...(i ? {} : { phone, email }),\n          }))\n          : passengers.map(({ fields }, i) => ({\n            ...fields,\n            tariff: tariffs[i] || Tariff.Regular,\n            phone: i ? undefined : phone,\n            email: i ? undefined : email,\n          }));\n\n      const rjSeatPayload: CreateSeatTicketData = {\n        ticketRequests: rjSeatBookings.map((b) => ({\n          passengers: getTicketPassengers(b?.tariffs || []),\n          route: {\n            routeId: b?.routeId || '',\n            priceSource: b?.priceSource || '',\n            sections: (b?.sections || []).map(\n              ({ sectionId, fromStationId, toStationId, selectedSeats }) => ({\n                section: { fromStationId, sectionId, toStationId },\n                selectedSeats: (selectedSeats || []).map((selectedSeat) => ({\n                  ...selectedSeat,\n                  sectionId,\n                })),\n              }),\n            ),\n            seatClass: b?.seatClass || SeatClass.No,\n          },\n          selectedAddons: (b?.selectedAddons || []).map(\n            ({ addonCode, ...a }) => a,\n          ),\n          percentualDiscountIds: b.percentualDiscountIds || [],\n          codeDiscount: b.codeDiscount,\n        })),\n        affiliateCode: getAffiliateCode(),\n      };\n\n      const reqSeats = rjSeatPayload.ticketRequests.flatMap((tr) =>\n        tr.route.sections.flatMap((s) => s.selectedSeats),\n      );\n\n      const rjSroPayload: CreateSroTicketData = {\n        ticketRequests: rjSroBookings.map((b) => ({\n          routeId: b.routeId!,\n          seatClass: b.seatClass!,\n          passengers: (b?.tariffs || []).map(() => ({ email })),\n          sections: (b?.sections || []).map(\n            ({ sectionId, fromStationId, toStationId, selectedSeats }) => ({\n              section: { fromStationId, sectionId, toStationId },\n              selectedSeats: (selectedSeats || []).map((selectedSeat) => ({\n                ...selectedSeat,\n                sectionId,\n              })),\n            }),\n          ),\n          priceSourceId: b.priceSource!,\n        })),\n      };\n\n      const rjTimeUnregPayload: CreateUnregTimeTicketData = {\n        unregisteredTimeTicketCreateRequest: rjTimeBookings.map((b) => ({\n          email,\n          lineGroupCode: b.lineGroupCode!,\n          lineNumber: b.lineNumber!,\n          seatClassKey: b.seatClass!,\n          station1Id: b.fromStationId!,\n          station2Id: b.toStationId!,\n          tariff: b.tariffs![0]!,\n          timeTicketType: b.flexiType || 'FLEX',\n          validFrom: connection.departureDate!,\n        })),\n      };\n\n      const rjTimeRegPayload: CreateRegTimeTicketData = {\n        timeTicketRequests: rjTimeBookings.flatMap((b) =>\n          (b.tariffs || []).map((tariff) => ({\n            lineGroupCode: b.lineGroupCode!,\n            lineNumber: b.lineNumber!,\n            seatClass: b.seatClass!,\n            station1Id: b.fromStationId!,\n            station2Id: b.toStationId!,\n            tariff,\n            type: b.flexiType || 'FLEX',\n            validFrom: connection.departureDate!,\n          })),\n        ),\n      };\n\n      if (isLoggedIn) {\n        let regRjSeatData: RegisteredSeatTicketData = { tickets: [] };\n\n        if (rjSeatBookings.length) {\n          const { data } = await fetchRegisteredSeatTicket({\n            data: rjSeatPayload,\n            signal,\n          });\n          regRjSeatData = data;\n\n          ticketTypeId = data.tickets.map(({ id }) => ({\n            type: 'RJ_SEAT',\n            id: parseInt(id, 10),\n          }));\n\n          const respSeats = regRjSeatData.tickets.flatMap((t) =>\n            t.routeSections.flatMap((rs) => rs.selectedSeats),\n          );\n\n          /* Don't buy if price is 0 - bookings are bought automatically */\n          if (\n            rjSeatBookings.reduce(\n              (totalPrice, { price }) => totalPrice + (price || 0),\n              0,\n            ) === 0\n          ) {\n            return {\n              redirect: 'tickets',\n              newSeats: getNewSeats(reqSeats, respSeats),\n              ticketTypeId,\n            };\n          }\n\n          if (chargeImmediately) {\n            const response = await buyTickets(\n              false,\n              // @ts-expect-error Override is allowed\n              { email, phone, ...(passengers?.[0]?.fields || {}) },\n              ticketTypeId,\n              true,\n              signal,\n            );\n\n            clearBooking();\n\n            if (!response) {\n              return {\n                redirect: 'checkout',\n                newSeats: [],\n                ticketTypeId,\n              };\n            }\n\n            return {\n              redirect: 'tickets',\n              newSeats: getNewSeats(reqSeats, respSeats),\n              ticketTypeId,\n            };\n          }\n        }\n\n        if (rjTimeBookings.length) {\n          const { data } = await fetchRegisteredTimeTicket({\n            data: rjTimeRegPayload,\n            headers: {\n              'X-TxToken': createTxToken(),\n              'Content-Type': 'application/1.2.0+json',\n            },\n            signal,\n          });\n          if (chargeImmediately) {\n            ticketTypeId = data.map((id) => ({ type: 'RJ_TIME', id }));\n            await buyTickets(\n              false,\n              passengers[0].fields,\n              ticketTypeId,\n              true,\n              signal,\n            );\n\n            clearBooking();\n            return { redirect: 'tickets', newSeats: [], ticketTypeId };\n          }\n        }\n\n        if (rjSroBookings.length) {\n          await fetchRegisteredSroTicket({\n            data: rjSroPayload,\n            headers: { 'X-TxToken': createTxToken() },\n            signal,\n          });\n\n          if (chargeImmediately) {\n            const { data } = await fetchSroTickets();\n\n            ticketTypeId = data.map((t) => ({\n              type: 'RJ_SRO',\n              id: t.sroTicketId,\n            }));\n\n            await buyTickets(\n              false,\n              passengers[0].fields,\n              ticketTypeId,\n              true,\n              signal,\n            );\n\n            clearBooking();\n            return { redirect: 'tickets', newSeats: [], ticketTypeId };\n          }\n        }\n\n        const respSeats = regRjSeatData.tickets.flatMap((t) =>\n          t.routeSections.flatMap((rs) => rs.selectedSeats),\n        );\n\n        newSeats = getNewSeats(reqSeats, respSeats);\n      } else {\n        let token = null;\n\n        if (rjSeatBookings.length) {\n          const { data } = await fetchUnregisteredSeatTicket({\n            data: { ...rjSeatPayload, agreeWithTerms: true },\n            signal,\n          });\n\n          ticketTypeId = data.tickets.map(({ id }) => ({\n            id: parseInt(id, 10),\n            type: 'RJ_SEAT',\n          }));\n\n          /**\n           * Soft booking can book other seat than selected. We need to inform user about it\n           */\n          const respSeats = data.tickets.flatMap((t) =>\n            t.routeSections.flatMap((rs) => rs.selectedSeats),\n          );\n          newSeats = getNewSeats(reqSeats, respSeats);\n\n          token = data.token;\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        }\n\n        if (rjTimeBookings.length) {\n          if (!token) {\n            const { data } = await fetchUnregisteredTimeTicket({\n              data: rjTimeUnregPayload,\n              headers: {\n                'Content-Type': 'application/1.2.0+json',\n                'X-TxToken': createTxToken(),\n              },\n              signal,\n            });\n            token = data.token.token;\n            api.defaults.headers.Authorization = `Bearer ${data.token.token}`;\n          } else {\n            await fetchRegisteredTimeTicket({\n              data: rjTimeRegPayload,\n              headers: { 'X-TxToken': createTxToken() },\n              signal,\n            });\n          }\n        }\n\n        if (rjSroBookings.length) {\n          if (!token) {\n            const { data } = await fetchUnregisteredSroTicket({\n              data: { ...rjSroPayload, agreeWithTerms: true },\n              headers: { 'X-TxToken': createTxToken() },\n              signal,\n            });\n            token = data.token;\n            api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          } else {\n            await fetchRegisteredSroTicket({\n              data: rjSroPayload,\n              headers: { 'X-TxToken': createTxToken() },\n              signal,\n            });\n          }\n        }\n\n        await setToken(token);\n      }\n\n      clearBooking();\n      return {\n        redirect: bookingPriceWithoutAddons ? 'cart' : 'tickets',\n        newSeats: newSeats || [],\n        ticketTypeId,\n      };\n    } catch {\n      return { redirect: '', newSeats: [] };\n    }\n  };\n\n  const errorData =\n    unregisteredTimeTicketError ||\n    unregisteredSeatTicketError ||\n    unregisteredSroTicketError ||\n    registeredSroTicketError ||\n    registeredTimeTicketError ||\n    registeredSeatTicketError;\n\n  const loading =\n    unregisteredTimeTicketLoading ||\n    unregisteredSeatTicketLoading ||\n    unregisteredSroTicketLoading ||\n    registeredSroTicketLoading ||\n    registeredTimeTicketLoading ||\n    registeredSeatTicketLoading ||\n    paymentLoading;\n\n  useEffect(() => {\n    setState(\n      errorData?.response?.data?.message || paymentError?.message,\n      loading,\n    );\n  }, [errorData, loading]);\n\n  return { createTickets, ...categoryState };\n};\n\nexport default useCreateTickets;\n","import { DateString } from './types';\nimport { LineCode } from './useLineTimetables';\nimport { useApi } from './useManualApi';\n\nexport interface LineDetail {\n  lineGroupCode: LineCode;\n  lineNumber: number;\n  name: string;\n  timeTable: number;\n  validFrom: DateString;\n  validTo: DateString;\n}\n\n/**\n * Hook for handling line detail (timetables, valid from, valid to)\n * @param stationId\n */\nconst useLines = (stationId: number) => {\n  const [{ data = [], loading }] = useApi<LineDetail[]>({\n    url: `/consts/lines/${stationId}`,\n    headers: { 'X-Application-Origin': 'WEB' },\n    method: 'GET',\n  });\n\n  return {\n    data: data.filter(({ lineGroupCode }) =>\n      ['WEB', 'WEB1'].includes(lineGroupCode),\n    ),\n    loading,\n  };\n};\n\nexport default useLines;\n","import { useMemo } from 'react';\nimport Fuse from 'fuse.js';\nimport deburr from 'lodash.deburr';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { langPriorityCountries } from './consts';\nimport { Language } from './types';\nimport useLocations, { ConnectionSearchCity, LocationStation } from './useLocations';\nimport { getPriorityInArray } from './utils';\n\nFuse.config.threshold = 0.2;\n\ntype Result = {\n  refIndex: number;\n  score?: number;\n};\n\nconst MIN_SEARCH_LENGTH = 3;\nconst MAX_SCORE_MATCH = 0.1;\n\nconst extractCountry = (text: string) => deburr(text.split(',')[1].trim());\n\nconst removeDashDeburr = (text: string) => {\n  const [cityName, stationName] = deburr(text.split(',')[0]).split(' - ');\n  if (!stationName) {\n    return [cityName, ...cityName.split(/[ -]/g)];\n  }\n  return [cityName, ...cityName.split(/[ -]/g), stationName];\n};\n\nconst startsWith = (searchString: string) => (name: string) =>\n  removeDashDeburr(name.toLowerCase())\n    .some(part => part.startsWith(searchString));\n\nconst nameOrAliasesStartWith =\n  (location: ConnectionSearchCity | LocationStation, searchString: string) => {\n    const { name, aliases } = location;\n    const startsWithFn = startsWith(searchString);\n    const stations: LocationStation[] | undefined = (location as ConnectionSearchCity).stations;\n    return startsWithFn(name) ||\n      stations?.some(s => startsWithFn(s.name)) ||\n      aliases.some(a => deburr(a.toLowerCase()).startsWith(searchString));\n  };\n\nconst sortStations = (locations: LocationStation[], searchString: string) =>\n  (a: Result, b: Result) => {\n    const locationA = locations[a.refIndex];\n    const locationB = locations[b.refIndex];\n    const startsWithDiff =\n      +nameOrAliasesStartWith(locationB, searchString) -\n      +nameOrAliasesStartWith(locationA, searchString);\n    if (!!startsWithDiff) {\n      return startsWithDiff;\n    }\n    // if the items do not match the search term enough, sort them by matching score\n    if (a.score! > MAX_SCORE_MATCH || b.score! > MAX_SCORE_MATCH) {\n      return a.score! - b.score!;\n    }\n    const significanceDiff = locationB.significance - locationA.significance;\n    // if the significance is equal, sort by score\n    if (!significanceDiff) {\n      return a.score! - b.score!;\n    }\n    // else sort by significance (show Prague first over Olomouc, etc.)\n    return significanceDiff;\n  };\n\nconst sortCities = (searchString: string, language: Language) =>\n  (a: ConnectionSearchCity & Result, b: ConnectionSearchCity & Result) => {\n    const startsWithDiff =\n      +nameOrAliasesStartWith(b, searchString) -\n      +nameOrAliasesStartWith(a, searchString);\n    if (!!startsWithDiff) {\n      return startsWithDiff;\n    }\n    // if the items do not match the search term enough, sort them by matching score\n    if (a.score! > MAX_SCORE_MATCH || b.score! > MAX_SCORE_MATCH) {\n      return a.score! - b.score!;\n    }\n    const significanceDiff = b.significance! - a.significance!;\n    // if the cities significance difference is too high (we want to prioritize Prague over Zilina,\n    // even if we have SK language set)\n    if (!!significanceDiff) {\n      return significanceDiff;\n    }\n    const priorityCountries = langPriorityCountries[language];\n    const priorityDiff = getPriorityInArray(priorityCountries, a.code) -\n      getPriorityInArray(priorityCountries, b.code);\n    // if the country has equal priority and city has equal significance, sort by score\n    if (!priorityDiff && !significanceDiff) {\n      return a.score! - b.score!;\n    }\n    // sort by country priority, based on device language set \n    // (e.g. show AT cities to AT users primarily)\n    return priorityDiff;\n  };\n\nconst useSearchLocations = (searchString: string) => {\n  const language = useContextSelector(StoreContext, c => c.state.user.language);\n  const shouldSearch = searchString.length >= MIN_SEARCH_LENGTH;\n  const { data } = useLocations();\n\n  const fuse = useMemo(\n    () =>\n      data ?\n        new Fuse(\n          data.map((c) => ({\n            country: extractCountry(c.name),\n            aliases: c.aliases.map(deburr),\n            name: removeDashDeburr(c.name),\n            fullName: deburr(c.name),\n            stations: c.stations.map((s) => ({\n              aliases: s.aliases.map(deburr),\n              name: removeDashDeburr(s.name),\n              fullName: deburr(s.name),\n            })),\n          })),\n          {\n            includeScore: true,\n            keys: [\n              { name: 'country', weight: 0.5 },\n              { name: 'fullName', weight: 0.5 },\n              { name: 'name', weight: 0.9 },\n              { name: 'aliases', weight: 0.2 },\n              { name: 'stations.name', weight: 0.8 },\n              { name: 'stations.fullName', weight: 0.4 },\n              { name: 'stations.aliases', weight: 0.2 },\n            ],\n          },\n        ) : undefined,\n    [data],\n  );\n\n  const filtered = useMemo<ConnectionSearchCity[]>(() => {\n    if (!shouldSearch || !fuse || !data?.length) {\n      return [];\n    }\n    const normalizedSearchString = deburr(searchString).trim().toLowerCase();\n    return fuse\n      .search(normalizedSearchString)\n      .map((citySearch) => {\n        const city = data![citySearch.refIndex];\n\n        if (!city.stations.length) {\n          return {\n            ...city,\n            refIndex: citySearch.refIndex,\n            score: citySearch.score,\n            significance: city.significance ?? 0,\n          };\n        }\n\n        const stationsFuse = new Fuse(\n          city.stations.map((s) => ({\n            country: citySearch.item.country,\n            aliases: s.aliases.map(deburr),\n            name: removeDashDeburr(s.name),\n            fullName: deburr(s.name),\n          })),\n          {\n            includeScore: true,\n            keys: ['name', 'aliases', 'fullName', 'country'],\n          },\n        );\n\n        const stations = stationsFuse\n          .search(normalizedSearchString)\n          .sort(sortStations(city.stations, normalizedSearchString))\n          .map((stationSearch) => city.stations[stationSearch.refIndex]);\n\n        return {\n          ...city,\n          refIndex: citySearch.refIndex,\n          score: citySearch.score,\n          significance: Math.max(...stations.map(({ significance }) => significance)),\n          stations,\n        };\n      })\n      .sort(sortCities(normalizedSearchString, language))\n      .slice(0, 6);\n  }, [fuse, shouldSearch && searchString]);\n\n  return {\n    filtered,\n    shouldSearch,\n  };\n};\n\nexport default useSearchLocations;","import type { GenericAbortSignal } from 'axios';\nimport { api } from './consts';\nimport { Currency, DateString, TicketType } from './types';\nimport { useManualApi } from './useManualApi';\n\ntype PaymentType = 'DIRECT' | 'CREDIT';\n\nexport enum Method {\n  ACCOUNT = 'ACCOUNT',\n  BANK_TRANSFER = 'BANK_TRANSFER',\n}\n\nexport interface PaymentData {\n  amount: number;\n  currency: Currency;\n  dateTransaction: DateString;\n  description: string;\n  isInvoiceAvailable: boolean;\n  isReceiptAvailable: boolean;\n  method: Method;\n  paymentId: number;\n  ticketId: number | null;\n  ticketType: TicketType | null;\n}\n\nexport interface PaymentsHistoryQuery {\n  dateFrom: DateString;\n  dateTo: DateString;\n  sortDirection: 'ASC' | 'DESC';\n  type: PaymentType[];\n}\n\nexport type InvoiceType = 'invoice' | 'receipt';\n\nconst LINES_PER_PAGE = 10;\n\nconst usePaymentsHistory = () => {\n  const [{ data, loading, error, response }, fetchPayments] = useManualApi<\n  PaymentData[]\n  >({\n    url: '/payments',\n    method: 'GET',\n    headers: { Accept: 'application/1.1.0+json' },\n  });\n  const pagination = +(response?.headers['x-pagination-total'] || 0);\n\n  const pages = Math.floor(pagination / LINES_PER_PAGE) + 1;\n\n  const fetchPaymentsHistory = async (\n    params: PaymentsHistoryQuery,\n    page = 0,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetchPayments({\n        params: {\n          ...params,\n          limit: LINES_PER_PAGE,\n          offset: page * LINES_PER_PAGE,\n        },\n        signal,\n      });\n    } catch (e) {}\n  };\n\n  const fetchInvoice = async (\n    paymentId: number,\n    routeType?: InvoiceType,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const matchedPayment = data?.find((p) => p.paymentId === paymentId);\n\n      const route =\n        routeType || (matchedPayment?.ticketId ? 'invoice' : 'receipt');\n      const url = `/payments/${paymentId}/print/${route}`;\n\n      const { data: invoiceData } = await api.get(url, { signal });\n      return invoiceData;\n    } catch (e) {}\n  };\n\n  const fetchInvoices = async (\n    paymentIds: number[],\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const { data: invoicesData } = await api.post(\n        '/payments/print/invoice',\n        { invoices: paymentIds },\n        { signal },\n      );\n      return invoicesData;\n    } catch (e) { }\n  };\n\n  return {\n    data,\n    error,\n    fetchInvoice,\n    fetchInvoices,\n    fetchPaymentsHistory,\n    loading,\n    pages,\n  };\n};\n\nexport default usePaymentsHistory;","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport {\n  SeatClass,\n  SeatSectionBasic,\n  SelectedSeat,\n  Tariff,\n  VehicleType,\n  VehicleKey,\n} from './types';\nimport { Service } from './useConnectionRoute';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface PreselectedSeat extends SelectedSeat {\n  vehicleDeckNumber: number;\n}\n\nexport interface SectionCommons {\n  fixedSeatReservation: boolean;\n  selectedSeats: SelectedSeat[];\n  vehicles: Vehicle[];\n}\n\nexport interface SeatSection extends SectionCommons {\n  selectedSeats: PreselectedSeat[];\n  sectionId: number;\n}\n\nexport interface VehicleService {\n  code: string;\n  name: string;\n  imageCode: Service;\n}\n\nexport interface VehicleSeatClass {\n  name: SeatClass;\n  services: VehicleService[];\n}\n\nexport interface Vehicle {\n  id: number;\n  code: string | null;\n  type: VehicleType;\n  number: number;\n  seatClasses: VehicleSeatClass[];\n  standard: VehicleKey;\n  notifications: string[];\n  cateringEnabled: boolean;\n  decks: Deck[];\n}\n\nexport interface Deck {\n  number: number;\n  name: string;\n  layoutURL: string;\n  freeSeats: Seat[];\n  occupiedSeats: Seat[];\n}\n\nexport interface Seat {\n  index: number;\n  seatClass: SeatClass;\n  seatConstraint: null | string;\n  seatNotes: string[];\n}\n\nexport interface SeatsPayload {\n  seatClass: SeatClass;\n  sections: SeatSectionBasic[];\n  tariffs: Tariff[];\n}\n\ntype Options = {\n  ignoreGlobalState?: boolean;\n};\n\nconst useSeats = (options?: Options) => {\n  const [{ data, error, loading }, fetch] = useManualApi<SeatSection[]>({\n    method: 'POST',\n  });\n  const setState = useSetResponseState(ResponseStateCategory.seats);\n  const categoryState = useContextSelector(ResponseStateContext, (c) =>\n    options?.ignoreGlobalState\n      ? undefined\n      : c.state[ResponseStateCategory.seats],\n  );\n\n  const fetchSeats = async (\n    reqData: SeatsPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetch({\n        url: '/routes/freeSeats',\n        data: reqData,\n        headers: { 'Content-Type': 'application/json' },\n        signal,\n      });\n\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (options?.ignoreGlobalState) {\n      return;\n    }\n    setState(error?.response?.data?.message, loading);\n  }, [options?.ignoreGlobalState, error, loading]);\n\n  return {\n    data,\n    fetchSeats,\n    error,\n    loading,\n    ...categoryState,\n  };\n};\n\nexport default useSeats;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport PersistContext from './PersistContext';\nimport { Tariff } from './types';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface TariffResponse {\n  key: Tariff;\n  value: string;\n}\n\nconst useTariffs = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.tariffs,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.tariffs],\n  );\n\n  const { error, loading } = useContextSelector(PersistContext, c => c.tariffsResponse);\n  const data = useContextSelector(PersistContext, c => c.tariffs);\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, !!loading);\n  }, [error, loading]);\n\n  return { data, ...categoryState };\n};\n\nexport default useTariffs;\n","import { useEffect, useState } from 'react';\nimport type { AxiosError, GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { api } from './consts';\nimport { SelectedSeat, Tariff } from './types';\nimport { Passenger } from './useCreateTickets';\nimport { useHeadersActions } from './useHeaders';\nimport { useApi, useManualApi } from './useManualApi';\nimport { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { createTxToken } from './utils';\n\ninterface OrderPlatformParams {\n  email: string;\n  phone: string;\n}\n\nexport type PassengersToStorno = Pick<Passenger, 'id' | 'tariff'>;\n\nconst useTicketActions = ({ id, type }: TicketTypeId, ticketCode?: string) => {\n  const { authorize } = useHeadersActions();\n  const setState = useSetResponseState(ResponseStateCategory.ticketAction);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.ticketAction],\n  );\n  const [customLoading, setCustomLoading] = useState(false);\n  const [customError, setCustomError] = useState<AxiosError<any>>();\n\n  const [{ error: sendMailError, loading: sendMailLoading }, fetchSendMail] =\n    useManualApi({ url: `/tickets/${type}/${id}/sendByEmail`, method: 'POST' });\n\n  const [{ error: getPdfError, loading: getPdfLoading }, getPdf] = useManualApi(\n    { url: `/tickets/${type}/${id}/pdf`, method: 'GET', responseType: 'blob' },\n  );\n\n  const [\n    { error: wheelChairPlatformError, loading: wheelChairPlatformLoading },\n    submitWheelChairPlatformOrder,\n  ] = useManualApi({\n    method: 'PUT',\n    url: `/tickets/${id}/submitWheelChairPlatformOrder`,\n  });\n\n  const [{ error: getQrError, loading: getQrLoading }, getQr] = useManualApi({\n    url: `/tickets${type === 'RJ_TIME' ? '/timeticket' : ''}/${id}/qrcode`,\n    method: 'GET',\n  });\n\n  const [{ data: questionnaireUrls }] = (ticketCode ? useApi : useManualApi)<\n  string[]\n  >({\n    url: `/tickets/${ticketCode}/questionnaireUrls`,\n    method: 'GET',\n  });\n\n  const [\n    { error: cancelSeatError, loading: cancelSeatLoading },\n    fetchCancelSeatTicket,\n  ] = useManualApi({\n    url: `/tickets/${id}/cancel`,\n    method: 'PUT',\n  });\n\n  const [\n    { error: cancelTimeError, loading: cancelTimeLoading },\n    fetchCancelTimeTicket,\n  ] = useManualApi({\n    url: `/tickets/timeticket/${id}`,\n    method: 'DELETE',\n  });\n\n  const [\n    { error: cancelSroError, loading: cancelSroLoading },\n    fetchCancelSroTicket,\n  ] = useManualApi({\n    url: `/tickets/RJ_SRO/${id}`,\n    method: 'DELETE',\n  });\n\n  const [\n    { error: refetchSeatTicketError, loading: refetchSeatTicketLoading },\n    refetchSeatTicket,\n  ] = useManualApi({\n    url: `/tickets/${id}`,\n    method: 'GET',\n    headers: {\n      Accept: 'application/1.2.0+json',\n    },\n  });\n\n  const qrText: string = [2, type, id].join(';');\n\n  const sendByEmail = async (email: string, signal?: GenericAbortSignal) => {\n    try {\n      await fetchSendMail({ data: { email }, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * @param ticketId\n   * @param passengersIds\n   * @param seatsForCancel\n   * [\n   * {sect[0].passenger[0].seats, sect[0].passenger[1].seats },\n   * {sect[1].passenger[0].seats, sect[1].passenger[1].seats }\n   * ]\n   * @param refundToOriginalSource\n   * For the first passenger we assign from seatsForCancel from the first routesection\n   * the first selectedSeat,\n   * from the second routesection we assign again the first selectedSeat.\n   * For the second passenger we assign from the first routesection second selectedSeat,\n   * from the second routesection we assign again the second selectedSeat and so on.\n   */\n  const partialCancel = async (\n    ticketId: number,\n    passengers: PassengersToStorno[],\n    seatsForCancel: SelectedSeat[][],\n    refundToOriginalSource = false,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      setCustomLoading(true);\n      let success = true;\n\n      const sendRequest = async (\n        passenger: PassengersToStorno,\n        index: number,\n      ): Promise<void> => {\n        try {\n          const data = seatsForCancel.map((seat) => seat[index]);\n          const response = await api.delete(\n            `/tickets/${ticketId}/passengers/${passenger.id}`,\n            {\n              data: { refundToOriginalSource, seats: data },\n              signal,\n            },\n          );\n          if (response.status < 200 || response.status >= 300) {\n            success = false;\n          }\n        } catch (e) {\n          success = false;\n        }\n      };\n\n      const disabledPassengers = passengers.filter(\n        (pass) => pass.tariff === Tariff.DisabledAttendance,\n      );\n      const otherPassengers = passengers.filter(\n        (pass) => pass.tariff !== Tariff.DisabledAttendance,\n      );\n      // Send requests for passengers with DisabledAttendance tariff first\n      await Promise.all(\n        disabledPassengers.map((passenger, index) =>\n          sendRequest(passenger, index),\n        ),\n      );\n      // Then send requests for the rest of the passengers\n      await Promise.all(\n        otherPassengers.map((passenger, index) =>\n          sendRequest(passenger, index + disabledPassengers.length),\n        ),\n      );\n      return { status: success };\n    } catch (e) {\n      setCustomError(e as AxiosError<any>);\n      return { status: false };\n    } finally {\n      setCustomLoading(false);\n    }\n  };\n\n  /**\n   * @param controlHash Required for seat reservation\n   * @param refundToOriginalSource should refund to credit or bank account\n   */\n  const cancel = async (\n    controlHash?: string,\n    refundToOriginalSource = false,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const data = { controlHash, refundToOriginalSource };\n      let statusCode = 500;\n\n      switch (type) {\n        case 'RJ_SEAT': {\n          const { data: rjSeatData, status: refetchStatus } = await refetchSeatTicket({ signal });\n          const rjSeatDataToSend = refetchStatus >= 200 && refetchStatus < 300\n            ? {\n              controlHash: rjSeatData.conditions.code,\n              refundToOriginalSource,\n            }\n            : data;\n\n          const { status } = await fetchCancelSeatTicket({\n            data: rjSeatDataToSend,\n            signal,\n          });\n          statusCode = status;\n          break;\n        }\n        case 'RJ_TIME': {\n          const { status } = await fetchCancelTimeTicket({ signal });\n          statusCode = status;\n          break;\n        }\n        case 'RJ_SRO': {\n          const { status } = await fetchCancelSroTicket({\n            data,\n            headers: { 'X-TxToken': createTxToken() },\n            signal,\n          });\n          statusCode = status;\n          break;\n        }\n      }\n      await authorize(signal);\n\n      return { status: statusCode >= 200 && statusCode < 300 };\n    } catch (e) {\n    }\n  };\n\n  const getAppleWalletFile = async (\n    sectionId: number,\n    signal?: GenericAbortSignal,\n  ) => {\n    setCustomLoading(true);\n    try {\n      const { data } = await api.get(\n        `/apple-wallet/${ticketCode}/${sectionId}`,\n        {\n          headers: { Accept: 'application/vnd.apple.pkpass' },\n          responseType: 'blob',\n          signal,\n        },\n      );\n      return data;\n    } catch (e) {\n      setCustomError(e as AxiosError<any>);\n    } finally {\n      setCustomLoading(false);\n    }\n  };\n\n  const orderWheelChairPlatform = async (\n    data: OrderPlatformParams,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      submitWheelChairPlatformOrder({ data, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const error =\n    sendMailError ||\n    getPdfError ||\n    getQrError ||\n    wheelChairPlatformError ||\n    cancelSeatError ||\n    cancelTimeError ||\n    cancelSroError ||\n    customError ||\n    refetchSeatTicketError;\n\n  const loading =\n    sendMailLoading ||\n    getPdfLoading ||\n    getQrLoading ||\n    wheelChairPlatformLoading ||\n    cancelSeatLoading ||\n    cancelTimeLoading ||\n    cancelSroLoading ||\n    customLoading ||\n    refetchSeatTicketLoading;\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [error, loading]);\n\n  return {\n    cancel,\n    getAppleWalletFile,\n    getPdf,\n    getQr,\n    orderWheelChairPlatform,\n    partialCancel,\n    qrText,\n    questionnaireUrls,\n    sendByEmail,\n    ...categoryState,\n  };\n};\n\nexport default useTicketActions;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\nimport { gtmPush } from './utils';\n\nexport interface Review {\n  sectionId: number;\n  fields: QuestionField[];\n}\n\nexport interface QuestionField {\n  questionId: number;\n  type: 'RADIO_BUTTON' | 'TEXT';\n  text: string;\n  options: Option[];\n}\n\nexport interface Option {\n  text: string;\n  answerId: number;\n}\n\nexport interface RatingPayload {\n  forms: Form[];\n}\n\nexport interface Form {\n  sectionId: number;\n  form: FormFields;\n}\n\nexport interface FormFields {\n  fields: AnswerField[];\n}\n\nexport interface AnswerField {\n  questionId: number;\n  text: string;\n  answerId?: number | null;\n}\n\ninterface TicketReviewParams {\n  ticketId: number;\n  luh?: string;\n}\n\nconst useTicketReview = ({ ticketId, luh }: TicketReviewParams) => {\n  const setState = useSetResponseState(ResponseStateCategory.ticketReview);\n  const token = useContextSelector(StoreContext, c => c.state.user.token);\n\n  const [\n    { data: authData, loading: authLoading, error: authError },\n    fetchReviewAuth,\n  ] = useManualApi<{ token: string }>({\n    url: `/tickets/authenticate/${luh}`,\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    data: {},\n  });\n\n  const [{ loading, ...reviewForm }, fetchReviewForm] = useManualApi<Review[]>({\n    url: `tickets/${ticketId}/rating`,\n    method: 'GET',\n  });\n\n  const [{ loading: putLoading, error }, putReviewForm] = useManualApi<\n  Review[]\n  >({\n    url: `tickets/${ticketId}/rating`,\n    method: 'PUT',\n  });\n\n  const sendReview = async (data: RatingPayload, signal?: GenericAbortSignal) => {\n    try {\n      await putReviewForm({\n        data,\n        headers: luh\n          ? { Authorization: `Bearer ${authData?.token}` }\n          : undefined,\n        signal,\n      });\n      gtmPush({ event: 'SENT_REVIEW', SENT_REVIEW: data });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    if (luh && authData?.token) {\n      fetchReviewForm({\n        headers: { Authorization: `Bearer ${authData?.token}` },\n        signal,\n      });\n    } else if (!luh && token) {\n      fetchReviewForm({ signal });\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [authData?.token]);\n\n  useEffect(() => {\n    if (!luh) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchReviewAuth({ signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [luh]);\n\n  useEffect(() => {\n    setState(\n      reviewForm.error?.response?.data?.message ||\n      authError?.response?.data?.message ||\n      error?.response?.data?.message,\n      authLoading || loading || putLoading,\n    );\n  }, [reviewForm.error, authError, error, loading, authLoading, loading]);\n\n  return {\n    reviewForm,\n    loading: authLoading || loading || putLoading,\n    sendReview,\n  };\n};\n\nexport default useTicketReview;\n","import { useState } from 'react';\nimport { Axios, AxiosError, isAxiosError, type GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { FAIL_MESSAGE, api, getErrorMessage } from './consts';\nimport { TicketType } from './types';\nimport { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { Tickets } from './useUserTickets';\nimport { gtmPush } from './utils';\n\nconst typeToUrl = Object.freeze({\n  FLEXI: '/',\n  RJ_SEAT: '/tickets/',\n  RJ_SRO: '/tickets/RJ_SRO/',\n  RJ_TIME: '/tickets/timetickets/',\n});\n\nconst useTickets = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.ticket,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.ticket],\n  );\n  const [tickets, setTickets] = useState<Tickets>();\n\n  const fetchTickets = async (ticketTypes: TicketTypeId[], signal?: GenericAbortSignal) => {\n    setState(undefined, true);\n\n    if (!ticketTypes.length) {\n      setTickets(undefined);\n      setState(undefined, false);\n      return true;\n    }\n\n    const ticketIndices: Record<TicketType, number[]> =\n      { RJ_SEAT: [], RJ_TIME: [], RJ_SRO: [], FLEXI: [] };\n    ticketTypes.forEach((ticketType, i) => ticketIndices[ticketType.type].push(i));\n\n    try {\n      const ticketResponses = await Promise.all(\n        ticketTypes.map(({ id, type }) => api.get(typeToUrl[type] + id, {\n          signal,\n          headers: type === 'RJ_SEAT' ? { 'Accept': 'application/1.3.0+json' } : undefined,\n        })),\n      );\n\n      const responses = ticketResponses.map((response) => response.data);\n\n      const fetchedTickets: Tickets = {\n        RJ_SEAT: responses.filter((_, i) => ticketIndices.RJ_SEAT.includes(i)),\n        RJ_TIME: responses.filter((_, i) => ticketIndices.RJ_TIME.includes(i)),\n        RJ_SRO: responses.filter((_, i) => ticketIndices.RJ_SRO.includes(i)),\n      };\n\n      gtmPush({ event: 'BOUGHT_TICKETS', BOUGHT_TICKETS: fetchedTickets });\n\n      setTickets(fetchedTickets);\n      setState(undefined, false);\n\n      return true;\n    } catch (e) {\n      setState(\n        isAxiosError(e) ?\n          e.response?.data.message || getErrorMessage(e)\n          : FAIL_MESSAGE, false);\n\n      return false;\n    }\n  };\n\n  return { fetchTickets, tickets, ...categoryState };\n};\n\nexport default useTickets;\n","import { useEffect } from 'react';\nimport { DateString } from './types';\nimport { useApi, useManualApi } from './useManualApi';\nimport { TimetablesResponse } from './useTimetables';\n\nexport type LineCode = 'WEB' | 'WEB1';\n\nexport interface Station {\n  stationId: number;\n  departure: string;\n  arrival: string;\n  platform: string;\n}\n\nexport interface TimetableSymbol {\n  mark: string;\n  description: string;\n}\n\nexport interface TimeCodeItem {\n  type: 'INCLUDING' | 'INCLUDING_ALSO' | 'EXCLUDING';\n  from: DateString;\n  to: DateString;\n}\n\nexport interface TimeCode {\n  mark: number;\n  description: string;\n  items: TimeCodeItem[];\n}\n\nconst headers = { 'X-Application-Origin': 'WEB' };\n\nexport interface UseTimetablesParams {\n  code: LineCode;\n  number: number;\n  timeTableId: number\n}\n\nconst useLineTimetables = (\n  { code, number, timeTableId }: UseTimetablesParams,\n  fetchAdditionalInfo?: boolean,\n) => {\n  const [{ error, loading, data = [] }] = useApi<TimetablesResponse[]>({\n    url: `/consts/timetables/${code}/${number}`,\n    method: 'GET',\n    headers,\n  });\n\n  const [{ data: symbols = [] }, fetchSymbols] = useManualApi<\n  TimetableSymbol[]\n  >({\n    url: `/consts/timetables/${timeTableId}/symbols`,\n    method: 'GET',\n    headers,\n  });\n\n  const [{ data: timeCodes = [] }, fetchCodes] = useManualApi<TimeCode[]>({\n    url: `/consts/timetables/${timeTableId}/time-codes`,\n    method: 'GET',\n    headers,\n  });\n\n  useEffect(() => {\n    if (!fetchAdditionalInfo) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchSymbols({ signal });\n    fetchCodes({ signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [fetchAdditionalInfo]);\n\n  return { error, loading, data, symbols, timeCodes };\n};\n\nexport default useLineTimetables;\n","import { ConnectionDirection } from '../store/booking/types';\nimport { DateString } from './types';\nimport useLocations from './useLocations';\nimport { useApi } from './useManualApi';\n\nexport interface TimetablesResponse {\n  connectionCode: string;\n  connectionId: number;\n  direction?: ConnectionDirection;\n  fromCityName: string;\n  stations: Station[];\n  symbols?: string[];\n  timeCodes?: number[];\n  timetableId: number;\n  toCityName: string;\n  validFrom: DateString;\n  validTo: DateString;\n  carrierId: number;\n}\n\nexport interface Station {\n  stationId: number;\n  departure?: string;\n  arrival?: string;\n  platform?: string;\n  symbols?: string[];\n}\n\n/**\n * Hook for handling line detail (all stations, coordinates, images etc.)\n * @param sectionId\n */\nconst useTimetables = (sectionId: number) => {\n  const { getStation } = useLocations();\n  const [{ error, loading, data }] = useApi<TimetablesResponse>({\n    url: `/consts/timetables/${sectionId}`,\n    method: 'GET',\n  });\n\n  const stations = (data?.stations || []).map((station) => ({\n    ...station,\n    ...getStation(station.stationId)!,\n  }));\n\n  return {\n    error,\n    loading,\n    stations,\n    fromCityName: data?.fromCityName,\n    toCityName: data?.toCityName,\n    carrierId: data?.carrierId,\n  };\n};\n\nexport default useTimetables;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport PersistContext from './PersistContext';\nimport { SeatClass } from './types';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface SeatClassData {\n  vehicleClass: '1' | '2' | 'undefined';\n  key: SeatClass;\n  title: string;\n  shortDescription: string;\n  description: string;\n  imageUrl: null | string;\n  galleryUrl: null | string;\n}\n\ntype FormattedSeatClasses = Record<SeatClass, SeatClassData>;\n\nconst useSeatClasses = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.seatClasses,\n  );\n  const categoryState = useContextSelector(ResponseStateContext, c =>\n    c.state[ResponseStateCategory.seatClasses],\n  );\n\n  const { error, loading } = useContextSelector(PersistContext, c =>\n    c.seatClassesResponse,\n  );\n  const data = useContextSelector(PersistContext, c =>\n    c.seatClasses,\n  );\n\n  const formattedData = data?.reduce((\n    acc: FormattedSeatClasses,\n    seatClass: SeatClassData,\n  ) => {\n    acc[seatClass.key] = seatClass;\n\n    return acc;\n  }, {} as FormattedSeatClasses);\n\n  useEffect(() => {\n    setState(error?.response?.data.message, !!loading);\n  }, [setState, error, loading]);\n\n  return { data: formattedData, ...categoryState };\n};\n\nexport default useSeatClasses;\n","import { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { REFRESH_COOLDOWN, REFUSE_UPSELL } from '../store/upsell/types';\nimport { api } from './consts';\nimport { SeatClass, TicketType } from './types';\nimport { PriceClass } from './useConnectionRoute';\nimport { getMoreExpensiveClass, gtmPush } from './utils';\n\nlet acceptedClass: SeatClass;\nlet priceDifference: number;\n\nexport interface UpsellData {\n  priceDiff: number;\n  upsellClass: PriceClass;\n}\n\n/**\n * Call any function only after shouldBeShown is true\n */\nconst useUpsell = () => {\n  const dispatch = useContextSelector(StoreContext, c => c.dispatch.upsellDispatch);\n  const cooldownTs = useContextSelector(StoreContext, c => c.state.upsell.cooldownTs);\n\n  const refuseUpsell = () => dispatch({ type: REFUSE_UPSELL });\n\n  const acceptUpsell = () =>\n    gtmPush({\n      event: 'ACCEPT_UPSELL',\n      ACCEPT_UPSELL: {\n        acceptedClass,\n        priceDiff: priceDifference,\n        currency: api.defaults.headers.common['X-Currency'],\n      },\n    });\n\n  const shouldShowUpsell = (\n    selectedClassKey: SeatClass,\n    priceClasses: PriceClass[],\n    ticketType: TicketType,\n  ): UpsellData | null => {\n    dispatch({ type: REFRESH_COOLDOWN });\n    const upsellClass = getMoreExpensiveClass(selectedClassKey, priceClasses);\n\n    if (\n      !upsellClass ||\n      cooldownTs > new Date().valueOf() ||\n      ticketType !== 'RJ_SEAT'\n    ) {\n      return null;\n    }\n\n    const priceDiff =\n      upsellClass.price -\n      (priceClasses.find((pc) => pc.seatClassKey === selectedClassKey)?.price ||\n        0);\n\n    acceptedClass = upsellClass.seatClassKey;\n    priceDifference = priceDiff;\n\n    return { priceDiff, upsellClass };\n  };\n\n  return { acceptUpsell, refuseUpsell, shouldShowUpsell };\n};\n\nexport default useUpsell;\n","export const REFRESH_COOLDOWN = 'REFRESH_COOLDOWN';\nexport const REFUSE_UPSELL = 'REFUSE_UPSELL';\n\nexport interface RefreshCooldownUpsell {\n  type: typeof REFRESH_COOLDOWN;\n}\n\nexport interface RefuseUpsellAction {\n  type: typeof REFUSE_UPSELL;\n}\n\nexport interface UpsellReducerProps {\n  displayCount: number;\n  cooldownTs: number;\n}\n\nexport type UpsellActions = RefreshCooldownUpsell | RefuseUpsellAction;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport PersistContext from './PersistContext';\nimport { VehicleKey } from './types';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface VehicleStandard {\n  key: VehicleKey;\n  name: string;\n  shortDescription: string;\n  description: string;\n  imageUrl: string;\n  supportImageUrl: string;\n  galleryUrl: null | string;\n}\n\ntype FormattedVehicleStandards = Record<VehicleKey, VehicleStandard>;\n\ninterface UseVehicleStandardsReturnType {\n  data: FormattedVehicleStandards | undefined;\n  error?: { message?: string };\n  loading: boolean;\n}\n\nconst useVehicleStandards = (): UseVehicleStandardsReturnType => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.vehicleStandards,\n  );\n  const categoryState = useContextSelector(ResponseStateContext, (c) =>\n    c.state[ResponseStateCategory.vehicleStandards],\n  );\n  const { error, loading } = useContextSelector(PersistContext, (c) =>\n    c.vehicleStandardsResponse,\n  );\n  const data = useContextSelector(PersistContext, (c) =>\n    c.vehicleStandards,\n  );\n\n  const formattedData = data?.reduce((\n    acc: FormattedVehicleStandards,\n    vehicle: VehicleStandard,\n  ) => {\n    acc[vehicle.key] = vehicle;\n\n    return acc;\n  }, {} as FormattedVehicleStandards);\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, !!loading);\n  }, [setState, error, loading]);\n\n  return { data: formattedData, ...categoryState };\n};\n\nexport default useVehicleStandards;\n"],"names":["Tariff","SeatClass","PaymentType","VehicleKey","PaymentMethod","Env","envUrls","Object","freeze","PROD","QA","DEV","paramsSerializer","serialize","params","qs","stringify","indices","api","axios","create","baseURL","timeout","headers","transitional","clarifyTimeoutError","resInterceptor","onUnauthorized","interceptors","response","use","defaults","common","async","_error$response","isCancel","error","status","Promise","reject","bodyHashEndpoints","getHashedData","data","hash","shaObj","JsSHA","cleanedData","JSON","setHMACKey","update","getHMAC","reqInterceptor","request","req","_req$headers","_req$url","token","Authorization","split","hideTokenHash","url","includes","Referer","TIMEOUT_MESSAGE","FAIL_MESSAGE","NETWORK_MESSAGE","getErrorMessage","code","AxiosError","ERR_CANCELED","ETIMEDOUT","ECONNABORTED","ERR_NETWORK","langPriorityCountries","cs","de","en","hu","pl","sk","uk","unusablePaymentMethods","Cash","Transfer","Giftcertificate","basketItemsToTicketTypes","tickets","entries","reduce","prev","type","ticketList","length","push","map","id","sroTicketId","createTxToken","result","rest","number","Date","valueOf","remainder","Math","floor","characters","i","mapFieldToUser","EMAIL","FIRST_NAME","SURNAME","couchetteClasses","getMoreExpensiveClass","baseClass","priceClasses","actualClassIndex","findIndex","pc","seatClassKey","actualClass","moreExpensiveClass","price","actionPrice","gtmPush","payload","_window$dataLayer","window","dataLayer","event","getAffiliateCode","affiliateCode","localStorage","getItem","parseInt","removeItem","r8Stations","r23Stations","isRegional","fromStationId","toStationId","getNewSeats","reqSeats","respSeats","equal","filter","respSeat","some","reqSeat","getPriorityInArray","arr","item","indexOf","depArrSections","s","sectionId","departureStationId","arrivalStationId","getAddonTranslationKey","addonCode","prependAll","lowerCaseAddon","toLowerCase","unorderedArrayEqual","arr1","arr2","sorted1","sort","sorted2","every","e","calculateDistance","lat1","lon1","lat2","lon2","p","a","cos","asin","sqrt","CLEAR_BOOKING","REPLACE_TARIFFS","SAVE_CONNECTION","SELECT_ADDONS","SELECT_CLASS","SELECT_CODE_DISCOUNT","SELECT_PERC_DISCOUNT","SELECT_ROUTE","SELECT_SEATS","SET_PRICE","UPSELL_ADDONS","_excluded","_excluded2","_excluded3","_excluded4","bookingInitialState","booking","fav","BookingContext","createContext","bookingReducer","draft","action","_action$payload","direction","_extends","currency","_draft$booking","tariffs","connection","isReturn","returnDepartureDate","there","back","ignoreFavorite","fromLocationId","fromLocationType","toLocationId","toLocationType","favoriteIndex","splice","unshift","_action$payload2","_objectWithoutPropertiesLoose","nextBooking","bookingState","seatClass","undefined","sections","priceSource","selectedAddons","passengers","_action$payload3","_draft$booking2","_action$payload4","_draft$booking3","seats","_draft$booking4","_draft$booking5","selectedSeats","seat","_action$payload5","_draft$booking6","_draft$booking7","percentualDiscountIds","discountAmount","_draft$booking8","_draft$booking9","codeDiscount","_draft$booking10","_draft$booking11","_draft$booking12","_action$payload6","_action$payload7","_draft$booking13","BookingProvider","children","persistConfig","persist","state","dispatch","useImmerReducer","bookings","useEffect","setItem","interceptorId","eject","value","useMemo","React","createElement","Provider","ResponseStateCategory","responseStateInitialState","addons","loading","connectionRoute","createTickets","credit","locations","passengersData","payment","ticket","ticketAction","userTickets","useTicketsType","user","ticketReview","vehicleStandards","seatClasses","ResponseStateContext","responseStateReducer","newState","keys","forEach","ResponseStateProvider","responseState","upsellInitialState","cooldownTs","displayCount","upsellReducer","userReducer","language","paymentMethodCode","loginNrs","Array","from","Set","loginNr","slice","StoreContext","upsellDispatch","userDispatch","interceptorsMounted","upsell","StoreProvider","transportHash","lang","generateUserInitialState","setInterceptorsMounted","useState","reqIID","resIID","useApi","makeUseAxios","useManualApi","defaultOptions","manual","PersistContext","useHandleApiResponse","cacheKey","cacheRef","cache","current","useHandleApiError","refetch","interval","setInterval","clearInterval","PersistContextProvider","useContextSelector","c","locationsCacheSetForLang","useRef","tariffsCacheSetForLang","seatClassesCacheSetForLang","vehicleStandardsCacheSetForLang","locationsResponse","refetchLocations","tariffsResponse","refetchTariffs","seatClassesResponse","refetchSeatClasses","vehicleStandardsResponse","refetchVehicleStandards","fetchedForLanguage","abortController","AbortController","signal","all","then","abort","flatMap","cities","city","aliases","name","country","placeType","stations","st","countryCode","fullname","types","stationsTypes","flattenLocations","ShopProvider","_ref","env","verbose","applicationOrigin","console","log","res","_res$request","useSetResponseState","category","message","errorFields","useAddons","setState","categoryState","addonsLoading","addonsError","callAddons","method","verificationLoading","verificationError","callVerifyAddons","putLoading","putError","callPutAddons","_addonsError$response","_verificationError$re","_putError$response","_addonsError$response2","_verificationError$re2","_putError$response2","fetchAddons","_unused","putAddons","ticketId","_unused3","verifyAddons","_unused2","maxCount","b","useBookingDiscount","directionProp","_c$state$booking","bookingItem","_c$state$booking2","verifyDiscount","selectCodeDiscount","_bookingItem$tariffs","_bookingItem$sections","discountData","tariff","route","routeId","section","ticketPrice","discountedTicketPrice","useBookingActions","_c$state$booking3","clearBooking","dir","createBooking","replaceTariffs","selectAddons","selectClass","selectRoute","selectSeats","upsellAddons","useBookingPrice","thereAddons","backAddons","therePrice","backPrice","_c$state$booking4","backCarbonOffsetPrice","_c$state$booking5","carbonOffset","amount","thereCarbonOffsetPrice","_c$state$booking6","addonsPrice","curr","count","bookingPrice","CarbonOffsetPrice","totalPrice","useLocations","priorityCountries","useContext","getStation","useCallback","stationId","station","cityId","cityName","getCity","find","significance","getDestination","destinationId","_getStation","croatiaNotSroStations","additionalStationsMap","routesURL","versionHeaders","Accept","additionalStationsArrivalCountries","useConnection","isCreditPrice","_c$state$user$user","creditPrice","headersRef","callConnectionSearch","additionalData","setAdditionalData","sroLoading","setSroLoading","shouldFindSro","routes","transfersCount","vehicleTypes","correctPriceData","routesMessage","join","textBubbles","bubble","index","self","t","text","departureTime","ar","priceFrom","creditPriceFrom","priceTo","creditPriceTo","fetchConnectionData","move","_getCity","additionalStation","responseHeaders","additionalRes","departureDate","get","fetchBackwardRoutes","fetchConnection","fromLocationName","toLocationName","apiParams","fetchForwardRoutes","fetchSroRoutes","firstRoute","secondRoute","currentRoute","pricesCount","min","numberOfPassengers","max","freeSeatsCount","PassengerFieldsFromApi","PassengerFieldsToSend","mapPassengerData","CUSTOMER_ADDRESS","customerAddress","CUSTOMER_NAME","customerName","email","firstName","PHONE","phone","surname","BIRTHDAY","dateOfBirth","typesToIgnore","usePassengersData","_error$response2","bookingThere","bookingBack","thereData","thereLoading","thereError","fetchThere","backData","backLoading","backError","fetchBack","_tariffs$length","contactData","personalData","to","morePreciseData","otherPassengersData","firstPassengerData","pd","_","_ref2","fields","passData","_bookingBack$tariffs","numberOfPassenger","_ref3","_bookingThere$tariffs","_ref4","useCredit","unpaidTickets","fetchAddCredit","addCredit","rememberCard","chargeTickets","ticketsCorrelation","parseFloat","toFixed","correlationId","formFields","fieldType","fieldValue","Boolean","ADD_CREDIT","payRedirectUrl","useDepartures","limit","fetchDepartures","useCityPairs","cityPairs","fetchFromCityPairs","fromCityId","emptyArr","useConnectionRoute","ignoreErrors","fetchRjSeat","sroLoading1","sroError1","sroData1","callSro1","sroLoading2","sroError2","sroData2","callSro2","rjSroLoading","rjSroError","dataWithPrice","fetchRoute","sro","routeLoading","routeError","_routeError$response","_routeError$response2","rjSroClasses","_sroData1$priceClasse","_sroData2$priceClasse","sroCl","fill","Regular","useFlexiTickets","fetchClasses","FlexiType","flexiTypes","Week","Month","Quarter","useTimeTickets","flexiClassesWeek","loadingWeek","errorWeek","fetchWeek","flexiClassesMonth","loadingMonth","errorMonth","fetchMonth","flexiClassesQuarter","loadingQuarter","errorQuarter","fetchQuarter","isFlexiLoaded","flexiClasses","lineNumber","lineGroupCode","flexiType","SET_LOGIN_NR","SET_USER","fetchAuthorize","config","useHeadersActions","isLoggedIn","setCurrency","authorize","accountCode","setCaptcha","setLanguage","setToken","useHeaders","useUserActions","signupError","signupLoading","callRegistration","loginError","loginLoading","callLogin","forgottenPasswordError","forgottenPasswordLoading","callForgottenPassword","loginTicketError","loginTicketLoading","callLoginTicket","logoutError","logoutLoading","callLogout","changeInfoError","changeInfoLoading","callChangeInfo","changePassError","changePassLoading","callChangePassword","resetPassError","resetPassLoading","callResetPassword","resetPassVerifyError","resetPassVerifyLoading","callResetPasswordVerify","qrError","qrLoading","qrData","getAccountQr","percDiscountsError","percDiscountsLoading","percDiscountsData","getPercDiscounts","registerOpenError","registerOpenLoading","callRegisterOpen","addLoginNumber","changeUserInfo","changeInfoPayload","companyInformation","company","defaultTariffKey","notifications","phoneNumber","changeUserPassword","login","loginTicket","logout","registerOpenTicket","requestPasswordReset","register","resetPassword","newPassword","crpvStatus","crpStatus","setPaymentCode","accountQr","percDiscounts","useUser","userObj","loginNumbers","emptyTickets","RJ_SEAT","RJ_SRO","RJ_TIME","emptyOffsets","CANCELED","UNPAID","sortDirection","USED","VALID","ticketTypeToUrlPath","priceReducer","acc","unpaid","filterExpired","expirationDate","conditions","expireAt","expiration","useUserTickets","autoFetch","options","setTickets","useImmer","setLoading","loadingMore","setLoadingMore","maxTickets","ticketsCount","defaultParams","ticketStates","shouldFetchMore","totalCount","fetchedCount","fetchTickets","noLimitReset","seatHeaders","sroHeaders","rjTimeData","timeHeaders","polishData","addStateToTicket","_e$response","isAxiosError","fetchMore","offset","fetchedTickets","polishSingleType","_e$response2","API_CONFIG","usePayment","ticketState","ticketIds","paymentMethods","paymentMethodsError","paymentMethodsLoading","fetchPaymentMethods","paymentForm","paymentFormError","paymentFormLoading","fetchPaymentForm","payError","payLoading","fetchPay","giftAddError","giftAddLoading","fetchGiftAdd","chargeCreditError","chargeCreditLoading","fetchChargeFromCredit","filteredPaymentMethods","m","active","paymentType","addCreditByGift","_unused4","buyTickets","boughtTickets","fromCredit","useCreditChargeWithFormFields","restFields","k","PAY","getPaymentForm","manualPaymentMethodCode","getPaymentMethods","ticketsTypeIds","ticketsAvailable","useCreateTickets","_bookingThere$price","_bookingBack$price","paymentLoading","paymentError","bookingPriceWithoutAddons","unregisteredSeatTicketLoading","unregisteredSeatTicketError","fetchUnregisteredSeatTicket","registeredSeatTicketLoading","registeredSeatTicketError","fetchRegisteredSeatTicket","unregisteredTimeTicketLoading","unregisteredTimeTicketError","fetchUnregisteredTimeTicket","registeredTimeTicketLoading","registeredTimeTicketError","fetchRegisteredTimeTicket","unregisteredSroTicketLoading","unregisteredSroTicketError","fetchUnregisteredSroTicket","registeredSroTicketLoading","registeredSroTicketError","fetchRegisteredSroTicket","errorData","_errorData$response","chargeImmediately","Error","allBookings","rjSeatBookings","rjSroBookings","rjTimeBookings","ticketTypeId","newSeats","getTicketPassengers","rjSeatPayload","ticketRequests","selectedSeat","No","tr","rjSroPayload","priceSourceId","rjTimeUnregPayload","unregisteredTimeTicketCreateRequest","station1Id","station2Id","timeTicketType","validFrom","rjTimeRegPayload","timeTicketRequests","regRjSeatData","routeSections","rs","redirect","_passengers$","agreeWithTerms","useLines","Fuse","threshold","MAX_SCORE_MATCH","removeDashDeburr","stationName","deburr","nameOrAliasesStartWith","location","searchString","startsWithFn","part","startsWith","useSearchLocations","shouldSearch","fuse","trim","fullName","includeScore","weight","filtered","normalizedSearchString","search","citySearch","refIndex","_city$significance","score","sortStations","locationA","locationB","significanceDiff","stationSearch","sortCities","startsWithDiff","priorityDiff","Method","usePaymentsHistory","fetchPayments","pages","fetchInvoice","paymentId","routeType","matchedPayment","invoiceData","fetchInvoices","paymentIds","invoicesData","post","invoices","fetchPaymentsHistory","page","useSeats","fetch","ignoreGlobalState","fetchSeats","reqData","useTariffs","useTicketActions","ticketCode","customLoading","setCustomLoading","customError","setCustomError","sendMailError","sendMailLoading","fetchSendMail","getPdfError","getPdfLoading","getPdf","responseType","wheelChairPlatformError","wheelChairPlatformLoading","submitWheelChairPlatformOrder","getQrError","getQrLoading","getQr","questionnaireUrls","cancelSeatError","cancelSeatLoading","fetchCancelSeatTicket","cancelTimeError","cancelTimeLoading","fetchCancelTimeTicket","cancelSroError","cancelSroLoading","fetchCancelSroTicket","refetchSeatTicketError","refetchSeatTicketLoading","refetchSeatTicket","qrText","cancel","controlHash","refundToOriginalSource","statusCode","rjSeatData","refetchStatus","rjSeatDataToSend","getAppleWalletFile","orderWheelChairPlatform","partialCancel","seatsForCancel","success","sendRequest","passenger","delete","disabledPassengers","pass","DisabledAttendance","otherPassengers","sendByEmail","useTicketReview","luh","authData","authLoading","authError","fetchReviewAuth","fetchReviewForm","reviewForm","putReviewForm","_reviewForm$error","_authError$response","sendReview","SENT_REVIEW","typeToUrl","FLEXI","useTickets","ticketTypes","ticketIndices","ticketType","responses","BOUGHT_TICKETS","useLineTimetables","timeTableId","fetchAdditionalInfo","symbols","fetchSymbols","timeCodes","fetchCodes","useTimetables","fromCityName","toCityName","carrierId","useSeatClasses","formattedData","key","acceptedClass","priceDifference","useUpsell","acceptUpsell","ACCEPT_UPSELL","priceDiff","refuseUpsell","shouldShowUpsell","selectedClassKey","_priceClasses$find","upsellClass","useVehicleStandards","vehicle"],"mappings":"+1BAwCYA,EAgDAC,EAkBAC,EASAC,EAkBAC,GA7FZ,SAAYJ,GACVA,EAAA,QAAA,UACAA,EAAA,mBAAA,wBACAA,EAAA,mBAAA,wBACAA,EAAA,KAAA,OACAA,EAAA,cAAA,iBACAA,EAAA,SAAA,WACAA,EAAA,mBAAA,sBACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,UAAA,aACAA,EAAA,eAAA,mBACAA,EAAA,UAAA,aACAA,EAAA,aAAA,gBACD,CAdD,CAAYA,IAAAA,EAcX,CAAA,IAkCD,SAAYC,GACVA,EAAA,GAAA,KACAA,EAAA,GAAA,KACAA,EAAA,GAAA,KACAA,EAAA,GAAA,KACAA,EAAA,cAAA,kBACAA,EAAA,cAAA,kBACAA,EAAA,wBAAA,6BACAA,EAAA,uBAAA,2BACAA,EAAA,oBAAA,wBACAA,EAAA,4BAAA,kCACAA,EAAA,uBAAA,2BACAA,EAAA,aAAA,iBACAA,EAAA,kBAAA,sBACAA,EAAA,YAAA,eACAA,EAAA,SAAA,WACD,CAhBD,CAAYA,IAAAA,EAgBX,CAAA,IAED,SAAYC,GACVA,EAAA,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,SAAA,YACAA,EAAA,SAAA,UACD,CAPD,CAAYA,IAAAA,EAOX,CAAA,IAED,SAAYC,GACVA,EAAA,OAAA,SACAA,EAAA,UAAA,YACAA,EAAA,QAAA,UACAA,EAAA,UAAA,YACAA,EAAA,uBAAA,yBACAA,EAAA,qBAAA,uBACAA,EAAA,cAAA,gBACAA,EAAA,iBAAA,mBACAA,EAAA,IAAA,MACAA,EAAA,UAAA,YACAA,EAAA,QAAA,UACAA,EAAA,IAAA,MACAA,EAAA,mBAAA,qBACAA,EAAA,eAAA,iBACAA,EAAA,aAAA,cACD,CAhBD,CAAYA,IAAAA,EAgBX,CAAA,IAED,SAAYC,GACVA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,gBAAA,mBACAA,EAAA,cAAA,iBACAA,EAAA,cAAA,iBACAA,EAAA,iBAAA,qBACAA,EAAA,SAAA,YACAA,EAAA,YAAA,gBACAA,EAAA,aAAA,iBACAA,EAAA,cAAA,kBACAA,EAAA,aAAA,iBACAA,EAAA,iBAAA,qBACAA,EAAA,SAAA,YACAA,EAAA,QAAA,WACAA,EAAA,QAAA,WACAA,EAAA,gBAAA,qBACAA,EAAA,YAAA,eACAA,EAAA,cAAA,kBACAA,EAAA,cAAA,kBACAA,EAAA,OAAA,UACAA,EAAA,iBAAA,qBACAA,EAAA,eAAA,mBACAA,EAAA,eAAA,kBACAA,EAAA,SAAA,YACAA,EAAA,WAAA,cACAA,EAAA,aAAA,iBACAA,EAAA,cAAA,iBACAA,EAAA,SAAA,UACD,CA7BD,CAAYA,IAAAA,EA6BX,CAAA,QC7JWC,4JAAZ,SAAYA,GACVA,EAAA,KAAA,OACAA,EAAA,GAAA,KACAA,EAAA,IAAA,KACD,CAJD,CAAYA,IAAAA,EAIX,WAEYC,EAAUC,OAAOC,OAAO,CACnC,CAACH,EAAII,MAAO,wCACZ,CAACJ,EAAIK,IAAK,2CACV,CAACL,EAAIM,KAAM,8CAGAC,EAA4C,CACvDC,UAAYC,GAAWC,EAAGC,UAAUF,EAAQ,CAAEG,SAAS,KAK5CC,EAAMC,EAAMC,OAAO,CAC9BC,QAASf,EAAQD,EAAIK,IACrBY,QAJc,IAKdC,QAAS,CAAE,gBAAiB,YAC5BX,mBACAY,aAAc,CACZC,qBAAqB,KAIZC,EAAkBC,GAC7BT,EAAIU,aAAaC,SAASC,IACvBD,WACQX,EAAIa,SAASR,QAAQS,OAAO,qBAC5BH,GAETI,UAAgB,IAAAC,EACd,IAAIf,EAAMgB,SAASC,GAOnB,OAJgC,OAAvB,MAALA,UAAKF,EAALE,EAAOP,iBAAPK,EAAiBG,SACnBV,IAGKW,QAAQC,OAAOH,EAAK,GAI3BI,EAAoB,CACxB,+BACA,iCACA,mCACA,qBACA,kCACA,iCACA,qCAGWC,EAAgBA,CAACC,EAAeC,KAC3C,MAAMC,EAAS,IAAIC,EAAM,WAAY,QAC/BC,EAA8B,iBAATJ,EAAoBA,EAAOK,KAAK/B,UAAU0B,GAGrE,OAFAE,EAAOI,WAAWL,EAAM,QACxBC,EAAOK,OAAOH,GACPF,EAAOM,QAAQ,MAAK,EAGhBC,EAAkBR,GAC7BzB,EAAIU,aAAawB,QAAQtB,IAAKuB,IAAO,IAAAC,EAAAC,EACnC,MAAMC,EAAoB,OAAfF,EAAID,EAAI9B,iBAAO+B,EAAXA,EAAaG,sBAAbH,EAAmDI,MAChE,KACA,GAIIC,EAAgBN,EAAIM,cAoB1B,OAlBKN,EAAI9B,UACP8B,EAAI9B,QAAU,CACf,GAEW,OAARgC,EAACF,EAAIO,MAAJL,EAASM,SAAS,UAAaF,IAC9BH,IAAUhB,EAAkBqB,SAASR,EAAIO,KAAO,IAClDP,EAAI9B,QAAQ,gBAAkBkB,EAAce,EAAOb,GAC1CU,EAAIX,OACbW,EAAI9B,QAAQ,eAAiBkB,EAAcY,EAAIX,KAAMC,KAIrDgB,UAEKN,EAAIM,cAGbN,EAAI9B,QAAQuC,QAAU,eACfT,IAGEU,EAAkB,eAClBC,EAAe,aACfC,EAAkB,gBAElBC,EAAmB9B,IAC9B,GAAKA,EAAL,CAGA,OAAQA,EAAM+B,MAEZ,KAAKC,EAAWC,aACd,OACF,KAAKD,EAAWE,UAChB,KAAKF,EAAWG,aACd,OAAOR,EACT,KAAKK,EAAWI,YAChB,IAAK,YACH,OAAOP,EAEX,OAAOD,CAZN,CAYMA,EAGIS,EAAwBlE,OAAOC,OAE1C,CACAkE,GAAI,CAAC,KAAM,MACXC,GAAI,CAAC,KAAM,KAAM,MACjB,QAAS,CAAC,KAAM,KAAM,MACtBC,GAAI,CAAC,KAAM,KAAM,KAAM,KAAM,MAC7BC,GAAI,CAAC,KAAM,KAAM,MACjBC,GAAI,CAAC,KAAM,KAAM,KAAM,MACvBC,GAAI,CAAC,KAAM,KAAM,MACjBC,GAAI,CAAC,KAAM,KAAM,KAAM,KAAM,QAGlBC,EAAyB,CACpC7E,EAAc8E,KACd9E,EAAc+E,SACd/E,EAAcgF,uQCnIT,MAAMC,EAA4BC,GACvC/E,OAAOgF,QAAQD,GAASE,OAAO,CAACC,GAAOC,EAAMC,KACtCA,EAAWC,QAGhBH,EAAKI,QACAF,EAAWG,IACZ,EAAGC,KAAIC,kBACyD,CAG5DD,GAAIA,GAAMC,EACVN,WAIDD,GAbEA,EAcR,IAEQQ,EAAgBA,KAC3B,IAAIC,EAAS,GACTC,EAAO,GACPC,GAAS,IAAIC,MAAOC,UAIxB,KAAOF,EAAS,GAAG,CACjB,MAAMG,EAAYC,KAAKC,MAAML,EAASM,IACtCN,GAAUM,GACVR,GALA,6DAKqBK,EACtB,CAED,IAAK,IAAII,EAAIT,EAAON,OAAQe,EAAI,EAAGA,IACjCR,GAAQ,IAEV,OAAOA,EAAOD,GAGHU,EAAiBrG,OAAOC,OAAO,CAC1CqG,MAAO,QACPC,WAAY,YACZC,QAAS,YAGEC,EAAqC,CAChD,6BACA,4BAGWC,EAAwBA,CACnCC,EACAC,KAEA,MAAMC,EAAmBD,EAAaE,UACnCC,GAAOA,EAAGC,eAAiBL,GAGxBM,EAAcL,EAAaC,GAC3BK,EAAqBN,EAAaC,EAAmB,GAE3D,OACGI,IACAC,GACoB,YAArBD,EAAY9B,MACgB,YAA5B+B,EAAmB/B,MACnB8B,EAAYE,OAASD,EAAmBC,OACxCD,EAAmBC,MAAQF,EAAYE,MAAQ,KAC/CF,EAAYD,eAAiBE,EAAmBF,cAChDC,EAAYG,aACZF,EAAmBE,aACnBX,EAAiBnD,SAAS4D,EAAmBF,cAG9C,KAEME,GAKIG,EAAWC,IAGb,IAAAC,EAEW,oBAAXC,QAES,OAFaD,EAE7BC,OAAOC,YAAPF,EAAkBjC,MATkC,uBAUhCgC,EAAQI,OAG5BF,OAAOC,UAAUnC,KAAKgC,EACvB,EAGUK,EAAmBA,KAC9B,MAAMC,EACoB,oBAAjBC,aACHA,aAAaC,QAAQ,iBACrB,GAEN,GAAKF,EASL,OALqBG,SACnBF,aAAaC,QAAQ,4BAA8B,GACnD,KAGiB,IAAIhC,MAAOC,WAC5B8B,aAAaG,WAAW,sBACxBH,aAAaG,WAAW,4BAInBJ,GAYIK,EAAa,CACxB,UAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,UAAW,WAAY,WAAY,UAAW,UAAW,WAAY,YAG1DC,EAAc,CACzB,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,YAGDC,EAAaA,CAACC,EAAuBC,IAC/CJ,EAAW3E,SAAS8E,IAAkBH,EAAW3E,SAAS+E,IAC1DH,EAAY5E,SAAS8E,IAAkBF,EAAY5E,SAAS+E,GAKlDC,GAAcA,CACzBC,EACAC,IAEAC,EAAMF,EAAUC,GACZ,GACAA,EAAUE,OACTC,IAAcJ,EAASK,KAAMC,GAAYJ,EAAMI,EAASF,KA8DlDG,GAAqBA,CAAOC,EAAaC,IACpDD,EAAIzF,SAAS0F,GAAQD,EAAIE,QAAQD,GAAQD,EAAI1D,oLAhG7C6D,GAEAA,EAAe3D,IAAK4D,IAAO,CACzBC,UAAWD,EAAE3D,GACb4C,cAAee,EAAEE,mBACjBhB,YAAac,EAAEG,kGA+BmBC,CAACC,EAAmBC,KACxD,MAAMC,EAAiBF,EAAUG,cACjC,OAAID,EAAepG,SAAS,QACnB,aAELoG,EAAepG,SAAS,QACnB,YAELoG,EAAepG,SAAS,aACnB,gBAELoG,EAAepG,SAAS,aACnB,gBAELoG,EAAepG,SAAS,cACnB,mBAELoG,EAAepG,SAAS,WACnB,gBAELoG,EAAepG,SAAS,WACnB,gBAGLmG,EACK,SAAWD,EAGbA,uBAG0BI,CAACC,EAAgBC,KAClD,IAAKD,IAASC,EACZ,OACD,EACD,MAAMC,EAAUF,EAAKG,OACfC,EAAUH,EAAKE,OAErB,OAAOD,EAAQG,MAAM,CAACC,EAAG/D,IAAM6D,EAAQ7D,KAAO+D,EAAC,oBAGhBC,CAC/BC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAI,oBACJC,EACJ,GACAzE,KAAK0E,KAAKJ,EAAOF,GAAQI,GAAK,EAC7BxE,KAAK0E,IAAIN,EAAOI,GACfxE,KAAK0E,IAAIJ,EAAOE,IACf,EAAIxE,KAAK0E,KAAKH,EAAOF,GAAQG,IAChC,EAEF,OAAY,MAAGxE,KAAK2E,KAAK3E,KAAK4E,KAAKH,GAAE,yBCnM1B,MAAAI,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAgB,gBAChBC,GAAe,eACfC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAe,eACfC,GAAe,eACfC,GAAY,YACZC,GAAgB,gBClC7BC,GAAA,CAAA,aAAAC,GAAA,CAAA,aAAAC,GAAA,CAAA,aAAAC,GAAA,CAAA,aAyBMC,GAA2C,CAC/CC,QAAS,KACTC,IAAK,IAeMC,GAAiBC,EAAc,IAEtCC,GAAiBA,CAACC,EAAmCC,SAEtBC,EAUnC,OAVsB,oBAAX7E,QACTH,EAAQ,CACNK,MAAO0E,EAAOjH,aAASiH,UAAMC,EAAND,EAAQ9E,gBAAR+E,EAAyCC,YAAa,IAC7E,CAACF,EAAOjH,MAAIoH,KACPH,EAAO9E,QACVkF,CAAAA,SAAU7L,EAAIa,SAASR,QAAQS,OAAO,kBAKpC2K,EAAOjH,MACb,KAAK4F,GAAiB,IAAA0B,EACXA,MAALN,GAAc,OAATM,EAALN,EAAOL,UAAmC,OAA5BW,EAAdA,EAAiBL,EAAO9E,QAAQgF,aAAhCG,EAA4CC,UAC9CP,EAAML,QAAQM,EAAO9E,QAAQgF,WAAYI,QACvCN,EAAO9E,QAAQoF,SAEnB,MAEF,KAAK1B,GAQH,GAPAmB,EAAML,QAAU,CACda,WAAYP,EAAO9E,QACnBsF,WAAYR,EAAO9E,QAAQuF,oBAC3BC,MAAO,KACPC,KAAM,OAILX,EAAO9E,QAAQ0F,gBAChBZ,EAAO9E,QAAQ2F,gBACfb,EAAO9E,QAAQ4F,kBACfd,EAAO9E,QAAQ6F,cACff,EAAO9E,QAAQ8F,eACf,CACA,MAAMC,EAAgBlB,EAAMJ,IAAIjF,UAC7BV,GACCA,EAAE6G,iBAAmBb,EAAO9E,QAAQ2F,gBACpC7G,EAAE+G,eAAiBf,EAAO9E,QAAQ6F,eAEf,IAAnBE,GACFlB,EAAMJ,IAAIuB,OAAOD,EAAe,GAGlClB,EAAMJ,IAAIwB,QAAQ,CAChBN,eAAgBb,EAAO9E,QAAQ2F,eAC/BC,iBAAkBd,EAAO9E,QAAQ4F,iBACjCC,aAAcf,EAAO9E,QAAQ6F,aAC7BC,eAAgBhB,EAAO9E,QAAQ8F,gBAElC,CAED,MAEF,KAAK/B,GAAc,CACjB,MAAAmC,EAA+BpB,EAAO9E,SAAhCgF,UAAEA,GAAoBkB,EAAN5H,EAAI6H,EAAAD,EAAA/B,IAE1B,GAAIU,EAAML,QAAS,CACjB,MAAM4B,EAAWnB,EAAA,GACZ3G,EACH+H,CAAAA,aAAc,iBACdC,eAAWC,EACXC,cAAUD,EACV1G,WAAO0G,EACPE,iBAAaF,EACbG,oBAAgBH,EAChBI,gBAAYJ,IAETpF,EAAMiF,EAAavB,EAAML,QAAQQ,MACpCH,EAAML,QAAQQ,GAAaoB,EAE9B,CAED,KACD,CACD,KAAKlC,GAAe,CAClB,MAAA0C,EAA+B9B,EAAO9E,SAAhCgF,UAAEA,GAAoB4B,EAANtI,EAAI6H,EAAAS,EAAAxC,IAE1B,GAAIS,EAAML,QAAS,CAAAqC,IAAAA,EACjB,MAAMT,EAAWnB,KACZ4B,OADYA,EACZhC,EAAML,cAANqC,EAAAA,EAAgB7B,GAChB1G,EAAI,CACP+H,aAAcxB,EAAML,QAAQQ,GAAYqB,eAErClF,EAAMiF,EAAavB,EAAML,QAAQQ,MACpCH,EAAML,QAAQQ,GAAaoB,EAE9B,CAED,KACD,CACD,KAAKxC,GAAc,CACjB,MAAAkD,EAA+BhC,EAAO9E,SAAhCgF,UAAEA,GAAoB8B,EAANxI,EAAI6H,EAAAW,EAAAzC,IAC1B,GAAIQ,EAAML,QAAS,KAAAuC,EACjB,MAAMX,EAAWnB,EAAA,IACX8B,OAAAA,EAAAlC,EAAML,cAANuC,EAAAA,EAAgB/B,KAAc,CAAA,EAC/B1G,EAAI,CACP+H,aAAc,iBACdM,gBAAYJ,IAETpF,EAAMiF,EAAavB,EAAML,QAAQQ,MACpCH,EAAML,QAAQQ,GAAaoB,EAE9B,CAED,KACD,CACD,KAAKpC,GAAc,CACjB,MAAMgB,UAAEA,EAASgC,MAAEA,GAAUlC,EAAO9E,QACpC,GAAI6E,EAAML,QAAS,CAAAyC,IAAAA,EAAAC,EACjB,MAAMd,EAAWnB,EAAA,GACE,OADFgC,EACXpC,EAAML,cAAO,EAAbyC,EAAgBjC,GAAU,CAC9BwB,SAAuBU,OAAfA,EAAErC,EAAML,UAAoB,OAAb0C,EAAbA,EAAgBlC,YAAUkC,EAA1BA,EAA4BV,iBAA5BU,EAAsCjJ,IAAK4D,GAACoD,EAAA,CAAA,EACjDpD,EAAC,CACJsF,cAAeH,EAAM5F,OAClBgG,GAASA,EAAKtF,YAAcD,EAAEC,cAGnCuE,aAAc,kBAEXlF,EAAMiF,EAAavB,EAAML,QAAQQ,MACpCH,EAAML,QAAQQ,GAAaoB,EAE9B,CAED,KACD,CACD,KAAKzC,GAAe,CAClB,MAAA0D,EAA+BvC,EAAO9E,SAAhCgF,UAAEA,GAAoBqC,EAAN/I,EAAI6H,EAAAkB,EAAA/C,IAE1B,GAAIO,EAAML,QAAS,KAAA8C,EACjB,MAAMlB,EAAWnB,YAAAqC,EACZzC,EAAML,gBAAN8C,EAAgBtC,GAChB1G,EAAI,CACP+H,aAAc,oBAEXlF,EAAMiF,EAAavB,EAAML,QAAQQ,MACpCH,EAAML,QAAQQ,GAAaoB,EAE9B,CAED,KACD,CACD,KAAKtC,GAAsB,CAAA,IAAAyD,EACzB,MAAMvC,UAAEA,EAASwC,sBAAEA,EAAqBC,eAAEA,GACxC3C,EAAO9E,QACT,GAAiBuH,OAAjBA,EAAI1C,EAAML,iBAAO+C,EAAbA,EAAgBvC,KAAhBuC,EAA4BlB,aAAc,CAAA,IAAAqB,EAC5C,MAAMtB,EAAWnB,EAAA,GACC,OADDyC,EACZ7C,EAAML,cAAO,EAAbkD,EAAgB1C,GAAU,CAC7BwC,wBACAC,iBACApB,aAAcxB,EAAML,QAAQQ,GAAYqB,eAErClF,EAAMiF,EAAavB,EAAML,QAAQQ,MACpCH,EAAML,QAAQQ,GAAaoB,EAE9B,CACD,KACD,CACD,KAAKvC,GAAsB,CAAA,IAAA8D,EACzB,MAAM3C,UAAEA,EAAS4C,aAAEA,EAAYH,eAAEA,GAAmB3C,EAAO9E,QACb,IAAA6H,EAA7BF,OAAjBA,EAAI9C,EAAML,iBAAOmD,EAAbA,EAAgB3C,KAAhB2C,EAA4BtB,eAC9BxB,EAAML,QAAQQ,GAAUC,EAAA,CAAA,UAClB4C,EAAAhD,EAAML,gBAANqD,EAAgB7C,KAAc,GAAE,CACpC4C,eACAH,iBACApB,aAAcxB,EAAML,QAAQQ,GAAYqB,gBAG5C,KACD,CACD,KAAKpC,GAAW,CAAA,IAAA6D,EACd,MAAM9C,UAAEA,EAASnF,MAAEA,GAAUiF,EAAO9E,QACpC,GAAiB,OAAjB8H,EAAIjD,EAAML,UAANsD,EAAgB9C,GAAY,KAAA+C,EAC9B,MAAM3B,EAAWnB,EAAA,CAAA,GACX8C,OAAAA,EAAAlD,EAAML,cAANuD,EAAAA,EAAgB/C,KAAc,GAClCnF,CAAAA,QACAwG,aAAcxB,EAAML,QAAQQ,GAAYqB,eAErClF,EAAMiF,EAAavB,EAAML,QAAQQ,MACpCH,EAAML,QAAQQ,GAAaoB,EAE9B,CACD,KACD,CACD,KAAK5C,GAAe,IAAAwE,EAAAC,EAElB,GAAWD,MAANlD,GAAAkD,OAAMA,EAANlD,EAAQ9E,UAARgI,EAAiBhD,YAAaH,EAAML,SAIlC,GAAUyD,MAANnD,GAAAmD,OAAMA,EAANnD,EAAQ9E,UAARiI,EAAiBjD,WAAaH,EAAML,QAAS,CAAA,IAAA0D,EACrB,UAA7BpD,EAAO9E,QAAQgF,YACjBH,EAAML,QAAQgB,MAAQX,EAAML,QAAQiB,MAGpB,OAAdyC,EAACrD,EAAML,UAAN0D,EAAe1C,OAETX,EAAML,QAAQiB,MAAQZ,EAAML,QAAQc,YAC7CT,EAAML,QAAQiB,KAAO,KACrBZ,EAAML,QAAQc,UAAW,GAHzBT,EAAML,QAAU,IAKnB,OAdCK,EAAML,QAAU,KAiBrB,EAGG2D,GAA2CA,EAC/CC,WACAC,gBACAC,cAEA,MAAOC,EAAOC,GAAYC,EACxB7D,GACC0D,UAAWD,SAAAA,EAAe7H,UAAUkI,WAAanE,IAGpDoE,EAAU,KACHL,IAGQ,MAAbD,GAAAA,EAAeO,QAAQ,CAAEF,SAAUH,IACrC,EAAG,CAACA,IAEJI,EAAU,KACR,MAAME,EAAgBhP,EAAe,KACnC2O,EAAS,CAAE3K,KAAM,gBAAiBmC,QAAS,CAAA,GAC7C,GAEA,MAAO,KACL3G,EAAIU,aAAaC,SAAS8O,MAAMD,EAAa,CAC/C,EACC,IAEH,MAAME,EAAQC,EAAQ,KAAA,CAASR,WAAUD,UAAU,CAACC,EAAUD,IAE9D,OAAOU,EAAAC,cAACxE,GAAeyE,SAAQ,CAACJ,MAAOA,GAAQX,EAAQ,ECvR7C,IAAAgB,IAAZ,SAAYA,GACVA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,iBAAA,IAAA,kBACD,CAnBD,CAAYA,KAAAA,GAmBX,CAAA,ICTD,MAAMC,GAAuD,CAC3D,CAACD,GAAsBE,QAAS,CAAEC,SAAS,GAC3C,CAACH,GAAsB/D,YAAa,CAAEkE,SAAS,GAC/C,CAACH,GAAsBI,iBAAkB,CAAED,SAAS,GACpD,CAACH,GAAsBK,eAAgB,CAAEF,SAAS,GAClD,CAACH,GAAsBM,QAAS,CAAEH,SAAS,GAC3C,CAACH,GAAsBO,WAAY,CAAEJ,SAAS,GAC9C,CAACH,GAAsBQ,gBAAiB,CAAEL,SAAS,GACnD,CAACH,GAAsBS,SAAU,CAAEN,SAAS,GAC5C,CAACH,GAAsBpC,OAAQ,CAAEuC,SAAS,GAC1C,CAACH,GAAsBU,QAAS,CAAEP,SAAS,GAC3C,CAACH,GAAsBhE,SAAU,CAAEmE,SAAS,GAC5C,CAACH,GAAsBW,cAAe,CAAER,SAAS,GACjD,CAACH,GAAsBY,aAAc,CAAET,SAAS,GAChD,CAACH,GAAsBa,gBAAiB,CAAEV,SAAS,GACnD,CAACH,GAAsBc,MAAO,CAAEX,SAAS,GACzC,CAACH,GAAsBe,cAAe,CAAEZ,SAAS,GACjD,CAACH,GAAsBgB,kBAAmB,CAAEb,SAAS,GACrD,CAACH,GAAsBiB,aAAc,CAAEd,SAAS,IAcrCe,GAAuB3F,EAAc,IAE5C4F,GACJA,CAAC1F,EAAyCC,KACxC,OAAQA,EAAOjH,MACb,IAAK,qBAAsB,CACzB,MAAMtD,MAAEA,EAAKgP,QAAEA,EAAO1L,KAAEA,GAASiH,EAAO9E,QAExC,QAAauG,IAAT1I,EAAoB,CACtB,MAAM2M,EAAW,CAAEjQ,QAAOgP,WACrBpI,EAAM0D,EAAMhH,GAAO2M,KACtB3F,EAAMhH,GAAQ2M,EAEjB,MACC9R,OAAO+R,KAAK5F,GAAO6F,QAAS7I,IAC1B,MAAM2I,EAAW,CAAEjQ,QAAOgP,WACrBpI,EAAM0D,GAAOhD,GAA6B2I,KAC7C3F,GAAOhD,GAA8B2I,EACtC,GAGL,KACD,EACF,EAGCG,GACJA,EAAGvC,WAAUC,gBAAeC,cAC1B,MAAOC,EAAOC,GAAYC,EACxB8B,GACCjC,IAAWD,MAAAA,OAAAA,EAAAA,EAAe7H,UAAUoK,gBAAkBvB,IAGzDV,EAAU,KACHL,IAGLD,MAAAA,GAAAA,EAAeO,QAAQ,CAAEgC,cAAerC,IAAO,EAC9C,CAACA,IAEJ,MAAMQ,EAAQC,EAAQ,KAAO,CAAER,WAAUD,UAAU,CAACC,EAAUD,IAE9D,OAAOU,EAAAC,cAACoB,GAAqBnB,SAAQ,CAACJ,MAAOA,GAAQX,EAAQ,ECjFpDyC,GAAyC,CACpDC,WAAY,EACZC,aAAc,GAGVC,GAAgBA,CAACnG,EAAkCC,KACvD,OAAQA,EAAOjH,MACb,IAAK,gBACHgH,EAAMkG,eACqB,IAAvBlG,EAAMkG,eACRlG,EAAMiG,YAAa,IAAItM,MAAOC,UAZV,SActB,MAEF,IAAK,mBACCoG,EAAMiG,aAAc,IAAItM,MAAOC,UAAYoG,EAAMiG,aACnDjG,EAAMiG,WAAa,EACnBjG,EAAMkG,aAAe,GAI1B,ECAGE,GAAcA,CAACpG,EAAgCC,KACnD,OAAQA,EAAOjH,MACb,IAAK,aACHgH,EAAMqF,KAAO,KACbrF,EAAMlJ,MAAQ,KACd,MACF,IAAK,WACCmJ,EAAO9E,QAAQkL,WACjBrG,EAAMqG,SAAWpG,EAAO9E,QAAQkL,UAElC,MACF,IAAK,YACHrG,EAAMlJ,MAAQmJ,EAAO9E,QAAQrE,MAC7B,MACF,IAAK,WACHkJ,EAAMqF,KAAOpF,EAAO9E,QAAQkK,KAC5B,MACF,IAAK,eACH7Q,EAAIa,SAASR,QAAQS,OAAO,cAAgB2K,EAAO9E,QAAQkF,SAC3DL,EAAMK,SAAWJ,EAAO9E,QAAQkF,SAChC,MACF,IAAK,mBACHL,EAAMsG,kBAAoBrG,EAAO9E,QAAQmL,kBACzC,MACF,IAAK,eACHtG,EAAMuG,SAAWC,MAAMC,KACrB,IAAIC,IAAI,CAACzG,EAAO9E,QAAQwL,WAAa3G,EAAMuG,UAAY,MACvDK,MAAM,EAAG,GAEd,ECHUC,GAAe/G,EAZxB,CACF6D,SAAU,CACRmD,eAAgBA,OAChBC,aAAcA,QAEhBC,qBAAqB,EACrBtD,MAAO,CACLuD,OAAQjB,GACRX,KD3C8C,CAChDkB,SAAU,GACVlB,KAAM,KACNvO,MAAO,KACPuJ,SAAU,MACVgG,SAAU,KACVC,kBAAmB,SCoDfY,GAAgBA,EACpB3D,WACAlD,WACA8G,gBACAC,KAAAA,EAAO,KACP5D,gBACAC,cAEA,MAAOwD,EAAQH,GAAkBlD,EAC/BuC,IACa,MAAb3C,OAAa,EAAbA,EAAe7H,UAAUsL,SAAUjB,KAE9BX,EAAM0B,GAAgBnD,EAC3BwC,IACA5C,MAAAA,OAAAA,EAAAA,EAAe7H,UAAU0J,OD/DWgC,EACtChH,EACAgG,EAAqB,QAAI,CAEzBE,SAAU,GACVlB,KAAM,KACNvO,MAAO,KACPuJ,WACAgG,WACAC,kBAAmB,OCsDgBe,CAAyBhH,EAAU+G,KAE/DJ,EAAqBM,GAA0BC,GAAS,GAyC/D,OAvCAzD,EAAU,KACRN,MAAAA,GAAAA,EAAeO,QAAQ,CAAEkD,UAAQ,EAChC,CAACA,IAEJnD,EAAU,KACK,MAAbN,GAAAA,EAAeO,QAAQ,CAAEsB,QAC3B,EAAG,CAACA,IAEJvB,EAAU,KACJuB,EAAKvO,MACPtC,EAAIa,SAASR,QAAQkC,cAAgB,UAAUsO,EAAKvO,eAE7CtC,EAAIa,SAASR,QAAQkC,aAC7B,EACA,CAACsO,EAAKvO,QAETgN,EAAU,KACJuB,EAAKhF,WACP7L,EAAIa,SAASR,QAAQS,OAAO,cAAgB+P,EAAKhF,SAClD,EACA,CAACgF,EAAKhF,WAETyD,EAAU,KACR,MAAM0D,EAASL,EAAgB1Q,EAAe0Q,QAAiBzF,EACzD+F,EAASzS,EAAe,KAC5B+R,EAAa,CAAE/N,KAAM,iBAMvB,OAFAsO,GAAuB,GAEhB,KACDE,GACFhT,EAAIU,aAAawB,QAAQuN,MAAMuD,GAEjChT,EAAIU,aAAaC,SAAS8O,MAAMwD,EAAM,CACxC,EACC,IAGDrD,EAACC,cAAAwC,GAAavC,SAAQ,CACpBJ,MAAO,CACLP,SAAU,CACRmD,iBACAC,gBAEFC,sBACAtD,MAAO,CAAEuD,SAAQ5B,UAGnBjB,EAACC,cAAAyB,GACC,CAAAtC,cAAeA,EACfC,QAAgB,MAAPA,OAAO,EAAPA,EAASsC,eAClB3B,EAAAC,cAACf,GACC,CAAAE,cAAeA,EACfC,QAASA,MAAAA,OAAAA,EAAAA,EAAS9D,SACjB4D,IAEmB,ECxIjBmE,GAASC,EAAa,OAAElT,IAExBmT,GAAeD,EAAa,CAAAlT,MACvCA,EACAoT,eAAgB,CAAEC,QAAQ,KC4BtBC,GAAiBjI,EAA4B,CAAkB,GA4B/DkI,GAAuBA,CAC3B7S,EACA8S,EACAC,EACAC,EACA9B,KAEA,MAAMrQ,EAAOb,EAASa,aAAQmS,SAAAA,EAAOxM,UAAUsM,IAS/C,OAPAnE,EAAU,KACJqE,GAASD,EAASE,UAAY/B,GAAYrQ,IAC5CmS,EAAMpE,QAAQ,CAAEkE,CAACA,GAAWjS,IAC5BkS,EAASE,QAAU/B,EACpB,EACA,CAACrQ,EAAMqQ,EAAU8B,IAEbnS,GAGHqS,GAAoBA,CACxBlT,EACAmT,KAEAxE,EAAU,KACR,IAAK3O,EAASO,MACZ,OAGF,MAAM6S,EAAWC,YAAYF,EAAS,KACtC,MAAO,IAAMG,cAAcF,EAAQ,EAClC,CAACpT,EAASO,MAAO4S,GAAQ,EAGjBI,GAA0CA,EACrDP,QACA5E,eAEA,MAAM8C,SAAEA,EAAQhG,SAAEA,GAAasI,EAC7B9B,GACC+B,GAAMA,EAAElF,MAAM2B,MAGXwD,EAA2BC,IAC3BC,EAAyBD,IACzBE,EAA6BF,IAC7BG,EAAkCH,IAExChF,EAAU,KACRtP,EAAIa,SAASR,QAAQS,OAAO,UACb,UAAb+Q,EAAuB,KAAOA,EAChC7R,EAAIa,SAASR,QAAQS,OAAO,cAAgB+K,CAC9C,EAAG,CAACgG,EAAUhG,IAEd,MAAO6I,EAAmBC,GACxBzB,GAA0B,sBACrB0B,EAAiBC,GACtB3B,GAAyB,oBACpB4B,EAAqBC,GAAsB7B,GAChD,wBAEK8B,EAA0BC,GAA2B/B,GAC1D,4BAGIgC,EAAqBZ,EAAOzC,GAElCvC,EAAU,KACR,GAAI4F,EAAmBtB,UAAY/B,EACjC,OAEF,MAAMsD,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAS/B,OARAjU,QAAQkU,IAAI,CACVX,EAAiB,CAAEU,WACnBR,EAAe,CAAEQ,WACjBN,EAAmB,CAAEM,WACrBJ,EAAwB,CAAEI,aACzBE,KAAK,KACNL,EAAmBtB,QAAU/B,CAC/B,GACO,KACLsD,EAAgBK,QAClB,EACC,CACD3D,EACA8C,EACAI,EACAF,EACAI,IAGF,MAAM3E,EAAYX,EAAQ,IACpB+E,EAAkBlT,KAhHxB8O,IAEAA,EAAUmF,QAASrB,GACjBA,EAAEsB,OAAO9Q,IAAK+Q,IAAI,CAChBC,QAASD,EAAKC,QACd3S,KAAMmR,EAAEnR,KACR4B,GAAI8Q,EAAK9Q,GACTgR,KAAM,GAAGF,EAAKE,SAASzB,EAAE0B,UACzBC,UAAW,OACXC,SAAUL,EAAKK,SAASpR,IAAKqR,GAAmBrK,EAAA,CAAA,EAC3CqK,EACHL,CAAAA,QAAS,IAAIK,EAAGL,WAAYD,EAAKC,SACjCM,YAAa9B,EAAEnR,KACf4S,KAAMI,EAAGE,SACTJ,UAAW,UACXK,MAAOH,EAAGI,qBAkGLC,CAAiB5B,EAAkBlT,YAErCmS,SAAAA,EAAOxM,UAAUmJ,UACvB,CAACoE,EAAkBlT,KAAMmS,IAE5BrE,EAAU,KACJqE,GAASU,EAAyBT,UAAY/B,GAAYvB,IAC5DqD,EAAMpE,QAAQ,CAAEe,cAChB+D,EAAyBT,QAAU/B,EACpC,EACA,CAACvB,EAAWuB,EAAU8B,IAEzB,MAAM5H,EAAUyH,GACdoB,EACA,UACAL,EACAZ,EACA9B,GAEIb,EAAcwC,GAClBsB,EACA,cACAN,EACAb,EACA9B,GAEId,EAAmByC,GACvBwB,EACA,mBACAP,EACAd,EACA9B,GAQF,OALAgC,GAAkBa,EAAmBC,GACrCd,GAAkBe,EAAiBC,GACnChB,GAAkBiB,EAAqBC,GACvClB,GAAkBmB,EAA0BC,GAG1CrF,EAACC,cAAA0D,GAAezD,SAAQ,CACtBJ,MAAO,CACLY,YACAoE,oBACA3I,UACA6I,kBACAE,sBACA9D,cACAD,mBACAiE,6BAGDjG,EAAQ,EChNfjE,GAAA,CAAA,WAAA,MAAA,UAAA,QAAA,qBAkBMyL,GAA4CC,IAO7C,IAP8CzH,SACjDA,EAAQ0H,IACRA,EAAMtX,EAAIK,GAAEkX,QACZA,EAAO/C,MACPA,EAAKgD,kBACLA,EAAoB,OAErBH,EADIvR,EAAI6H,EAAA0J,EAAA1L,IAgCP,OA9BA9K,EAAIa,SAASV,QAAUf,EAAQqX,GAC/BzW,EAAIa,SAASR,QAAQ,wBAA0BsW,EAE/CrH,EAAU,KACR,GAAIoH,EAAS,CACX,MAAMzU,EAAiBjC,EAAIU,aAAawB,QAAQtB,IAAKuB,IACnD,MAAMhC,QAAEA,EAAOqB,KAAEA,EAAInB,QAAEA,EAAOT,OAAEA,EAAM8C,IAAEA,GAAQP,EAGhD,OADAyU,QAAQC,IAAI,QAAS,CAAE1W,UAASqB,OAAMnB,UAAST,SAAQ8C,QAChDP,IAEH3B,EAAiBR,EAAIU,aAAaC,SAASC,IAAKkW,IAAOC,IAAAA,EAC3D,MAAM5W,QAAEA,EAAOP,OAAEA,EAAM8C,IAAEA,UAAKqU,EAAGD,EAAI5U,SAAO6U,EAAI,CAAE,GAC5C5V,OAAEA,EAAMK,KAAEA,EAAInB,QAAEA,GAAYyW,EAGlC,OADAF,QAAQC,IAAI,QAAS,CAAE1W,UAASqB,OAAMnB,UAAST,SAAQuB,SAAQuB,QACxDoU,GACLtN,IAGF,MADAoN,QAAQC,IAAI,cAAerN,EAAG3H,KAAK/B,UAAU0J,EAAG,KAAM,IAChDA,IAGR,MAAO,KACLxJ,EAAIU,aAAawB,QAAQuN,MAAMxN,GAC/BjC,EAAIU,aAAaC,SAAS8O,MAAMjP,EAClC,CACD,GACA,CAACkW,IAGF9G,EAAAC,cAAC6C,GAAa9G,EAAA,CAAA,EAAK3G,GACjB2K,EAACC,cAAAqE,GAAuB,CAAAP,MAAOA,GAAQ5E,GAAkC,EClDzEiI,GAAuBC,IAC3B,MAAM9H,EAAWgF,EAAmBlD,GAAsBmD,GAAKA,EAAEjF,UAEjE,MAAO,CACL+H,EACAhH,EACAiH,OAAyCjK,KAEzCiC,EAAS,CACP3K,KRjB4B,qBQkB5BmC,QAAS,CAAEnC,KAAMyS,EAAU/V,MAAO,CAAEgW,UAASC,eAAejH,YAC7D,CACH,ECoDIkH,GAAYA,KAChB,MAAMC,EAAWL,GACfjH,GAAsBE,QAElBqH,EAAgBnD,EACpBlD,GACAmD,GAAKA,EAAElF,MAAMa,GAAsBE,WAG5BC,QAASqH,EAAerW,MAAOsW,EAAWhW,KAAEA,GAAQiW,GAC3DrE,GAAsB,CAAE1Q,IAAK,UAAWgV,OAAQ,WAG9CxH,QAASyH,EAAqBzW,MAAO0W,GACvCC,GACEzE,GAAa,CAAE1Q,IAAK,iBAAkBgV,OAAQ,WAEzCxH,QAAS4H,EAAY5W,MAAO6W,GAAYC,GAC/C5E,GAAa,CAAE1Q,IAAK,UAAWgV,OAAQ,QAqDzC,OAnBApI,EAAU,KAAK,IAAA2I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACbjB,GACaY,MAAXT,GAAqBS,OAAVA,EAAXT,EAAa7W,WAAbsX,OAAqBA,EAArBA,EAAuBzW,WAAvByW,EAAAA,EAA6Bf,WACZ,MAAjBU,GAA2B,OAAVM,EAAjBN,EAAmBjX,WAAnBuX,OAA2BA,EAA3BA,EAA6B1W,WAA7B0W,EAAAA,EAAmChB,WAC3BiB,MAARJ,GAAkBI,OAAVA,EAARJ,EAAUpX,WAAc,OAANwX,EAAlBA,EAAoB3W,WAAI,EAAxB2W,EAA0BjB,SAC1BK,GAAiBI,GAAuBG,GAC7B,MAAXN,GAAqB,OAAVY,EAAXZ,EAAa7W,WAAc,OAANyX,EAArBA,EAAuB5W,WAAI,EAA3B4W,EAA6BjB,eACZkB,MAAjBT,GAA2BS,OAAVA,EAAjBT,EAAmBjX,WAAc,OAAN0X,EAA3BA,EAA6B7W,WAAI,EAAjC6W,EAAmClB,eAC3B,MAARY,GAAkB,OAAVO,EAARP,EAAUpX,WAAV2X,OAAkBA,EAAlBA,EAAoB9W,WAApB8W,EAAAA,EAA0BnB,aAE9B,EAAG,CACDK,EACAD,EACAK,EACAD,EACAI,EACAD,IAGFlM,EAAA,CACE2M,YApDkBxX,MAAO4F,EAAkC0O,KAC3D,IAGE,aAFMoC,EAAW,CAAEjW,KAAMmF,EAAS0O,YAE3B,CACR,CAAC,MAAAmD,GACA,OACD,CAAA,GA8CDC,UAlCgB1X,MAChB2X,EACArL,EACAgI,KAEA,IAEE,aADM2C,EAAc,CAAExW,KAAM,CAAE6L,kBAAkBzN,OAAQ,CAAE8Y,YAAYrD,aAEvE,CAAC,MAAAsD,GACA,OACD,CAAA,GAyBDC,aA5CmB7X,MAAO4F,EAA8B0O,KACxD,IAEE,aADMwC,EAAiB,CAAErW,KAAMmF,EAAS0O,YACjC,CACR,CAAC,MAAAwD,GACA,OAAO,CACR,GAuCDrX,KAAMA,MAAAA,OAAAA,EAAAA,EAAMuG,OAAQgC,GAAMA,EAAE+O,UAAUzP,KAAK,CAACU,EAAGgP,IAAMA,EAAEvS,MAAQuD,EAAEvD,QAC9D8Q,EAAa,ECnJpBxM,GAAA,CAAA,iBA6BakO,GAAqBA,CAACC,EAAqC,WACtE,MAAMhN,EAAWkI,EAAmB9I,GAAgB+I,IAAC8E,IAAAA,SAAIA,OAAJA,EAAI9E,EAAElF,MAAM/D,cAAR+N,EAAAA,EAAiBjN,WACpEN,EAA8B,SAAlBsN,GAA4BhN,EAAW,OAAS,QAC5DkN,EAAchF,EAAmB9I,GAAgB+I,IAACgF,IAAAA,EAAAA,OAAIA,OAAJA,EAAIhF,EAAElF,MAAM/D,cAARiO,EAAAA,EAAkBzN,EAAS,GACjFwD,EAAWgF,EAAmB9I,GAAgB+I,GAAKA,EAAEjF,YAEpDjO,MAAEA,EAAKM,KAAEA,GAAQ6X,GACtBjG,GAA+B,CAC7BsE,OAAQ,SAyDZ,MAAO,CACLlW,OACAN,QACAoY,mBA1DyBvY,MACzBwN,EACA8G,SACEkE,EAAAC,EACF,IAAKL,EACH,OAEF,MAAQ3X,KAAMiY,SAAuBJ,EAAe,CAClD3W,IAC0B,iBAAjB6L,EACH,yBAAyBA,WACzB,mBAAmBA,WACzB/M,KAAM,CACJiF,YAAa,KACb6G,WAAYiM,OAAFA,EAAEJ,EAAYpN,cAAZwN,EAAAA,EAAqB3U,IAAK8U,IAAY,CAChDA,YAEFC,MAAO,CACLvM,YAAa+L,EAAY/L,YACzBwM,QAAST,EAAYS,QACrB3M,UAAWkM,EAAYlM,UACvBE,SAA8B,OAAtBqM,EAAEL,EAAYhM,eAAQ,EAApBqM,EAAsB5U,IAC9B4R,IAAC,IAAA1I,cAAEA,GAA2B0I,EAAF,MAAQ,CAAEqD,QAAV/M,EAAA0J,EAAA1L,IAAmBgD,gBAAe,IAGlEgM,YAAaX,EAAY3S,OAE3B6O,WAGIjH,EACJ+K,EAAY3S,MAASiT,EAAaM,sBAEpC5K,EAAS,CACP3K,KAAMoG,GACNjE,QAAS,CAAEgF,YAAWnF,MAAOiT,EAAaM,yBAI1C5K,EAD0B,iBAAjBZ,EACA,CACP/J,KAAMiG,GACN9D,QAAS,CACPwH,sBAAuB,CAACI,GACxBH,iBACAzC,cAIK,CACPnH,KAAMgG,GACN7D,QAAS,CAAE4H,eAAcH,iBAAgBzC,cAE5C,IAUCqO,GAAoBA,CAACf,EAAqC,WAC9D,MAAMhN,EAAWkI,EAAmB9I,GAAgB+I,IAAC6F,IAAAA,SAAIA,OAAJA,EAAI7F,EAAElF,MAAM/D,cAAR8O,EAAAA,EAAiBhO,WACpEN,EAA8B,SAAlBsN,GAA4BhN,EAAW,OAAS,QAC5DkD,EAAWgF,EAAmB9I,GAAgB+I,GAAKA,EAAEjF,UAyC3D,MAAO,CACL+K,aAJoBC,GACpBhL,EAAS,CAAE3K,KAAM2F,GAAexD,QAAS,CAAEgF,UAAWwO,KAItDC,cAzCqBzT,GACrBwI,EAAS,CAAE3K,KAAM6F,GAAiB1D,YAyClC0T,eAvCsBtO,GACtBoD,EAAS,CACP3K,KAAM4F,GACNzD,QAAS,CAAEgF,YAAWI,aAqCxBuO,aAnBoBjN,GACpB8B,EAAS,CACP3K,KAAM8F,GACN3D,QAAS,CAAE0G,iBAAgB1B,eAiB7B4O,YA7BmB5T,GACnBwI,EAAS,CACP3K,KAAM+F,GACN5D,QAAOiF,EAAA,GAAOjF,EAASgF,CAAAA,gBA2BzB6O,YApCmB7T,GACnBwI,EAAS,CACP3K,KAAMkG,GACN/D,QAAOiF,EAAOjF,CAAAA,EAAAA,EAASgF,CAAAA,gBAkCzB8O,YAzBmB9M,GACnBwB,EAAS,CAAE3K,KAAMmG,GAAchE,QAAS,CAAEgH,QAAOhC,eAyBjD+O,aAjBoBrN,GACpB8B,EAAS,CACP3K,KAAMqG,GACNlE,QAAS,CAAE0G,iBAAgB1B,iBCxI3BgP,GAAkBA,KACtB,MAAMC,EAAczG,EAClB9I,GACC+I,IAAC,IAAA8E,EAAA,OAAoBA,OAApBA,EAAK9E,EAAElF,MAAM/D,UAAc,OAAP+N,EAAfA,EAAiB/M,YAAK,EAAtB+M,EAAwB7L,iBAE3BwN,EAAa1G,EACjB9I,GACC+I,QAACgF,EAAA,OAAoB,OAApBA,EAAKhF,EAAElF,MAAM/D,iBAAOiO,EAAfA,EAAiBhN,aAAjBgN,EAAuB/L,iBAE1ByN,EAAa3G,EACjB9I,GACC+I,IAAC6F,IAAAA,gBAAAA,EAAK7F,EAAElF,MAAM/D,UAAR8O,OAAeA,EAAfA,EAAiB9N,YAAjB8N,EAAAA,EAAwBzT,QAE3BuU,EAAY5G,EAChB9I,GACC+I,IAAC,IAAA4G,EAAAA,OAAoBA,OAApBA,EAAK5G,EAAElF,MAAM/D,UAAR6P,OAAeA,EAAfA,EAAiB5O,WAAjB4O,EAAAA,EAAuBxU,QAE1ByU,EAAwB9G,EAC5B9I,GACC+I,QAAC8G,EAAA,OAAoB,OAApBA,EAAK9G,EAAElF,MAAM/D,UAAc,OAAP+P,EAAfA,EAAiB/O,eAAK+O,EAAtBA,EAAwBC,qBAAxBD,EAAsCE,SAEzCC,EAAyBlH,EAC7B9I,GACC+I,IAACkH,IAAAA,gBAAAA,EAAKlH,EAAElF,MAAM/D,UAAcmQ,OAAPA,EAAfA,EAAiBnP,QAAjBmP,OAAsBA,EAAtBA,EAAwBH,mBAAxBG,EAAAA,EAAsCF,SAG/CxE,QAAQC,IAAI,gDAAiDoE,GAE7DrE,QAAQC,IAAI,iDAAkDwE,GAC9D,MAAME,EAAc5L,EAClB,IACE,IAAKiL,GAAe,MAASC,GAAc,IAAKvW,OAC9C,CAACC,EAAMiX,IAASjX,EAAQiX,EAAKhV,MAAQgV,EAAKC,MAC1C,GAEJ,CAACb,EAAaC,IAGVa,GAA0B,MAAVZ,EAAAA,EAAc,YAAQC,EAAAA,EAAa,KAEnDY,GAAqBV,MAAAA,EAAAA,EAAyB,IAAMI,MAAAA,EAAAA,EAA0B,GAIpF,MAAO,CAAEE,cAAaR,YAAWW,eAAcZ,aAAYc,WAFxCF,EAAeH,EAAcI,EAEuBA,sBCQnEE,GAAgBxS,IACpB,MAAMwI,EAAWsC,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAM2B,KAAKgB,UAC9DiK,EAAoBvY,EAAsBsO,GAC1CwF,EAAWL,GACfjH,GAAsBO,WAElBgH,EAAgBnD,EACpBlD,GACAmD,GAAKA,EAAElF,MAAMa,GAAsBO,aAInCoE,mBAAmBxT,MAAEA,EAAKgP,QAAEA,GAASI,UACrCA,GACEyL,EAAWxI,IAETyI,EAAaC,EAChBC,IACC,GAAK5L,EAGL,IAAK,MAAMqF,KAAQrF,EACjB,IAAK,MAAM6L,KAAWxG,EAAKK,SACzB,GAAImG,EAAQtX,KAAOqX,EACjB,OAAAtQ,EACKuQ,CAAAA,EAAAA,EACHC,CAAAA,OAAQzG,EAAK9Q,GACbwX,SAAU1G,EAAKE,MAItB,EAEH,CAACvF,IAGGgM,EAAUL,EAAaG,GAClB,MAAT9L,OAAS,EAATA,EAAWiM,KAAKnI,GAAKA,EAAEvP,KAAOuX,GAAS,CAAC9L,IAMpC9O,EAAOmO,EAAQ,IACZtG,EACI,MAATiH,OAAS,EAATA,EACIjH,KAAK,CAACU,EAA6BgP,IACnC5Q,GAAmB2T,EAAmB/R,EAAE9G,MACxCkF,GAAmB2T,EAAmB/C,EAAE9V,OAEzC2B,IAAIwP,GAACxI,KACDwI,EAAC,CACJ4B,SAAU5B,EAAE4B,SAAS3M,KAAK,CAACU,EAAGgP,IAAMA,EAAEyD,aAAezS,EAAEyS,iBAE3DlM,EACD,CAACA,IASJ,OAPAhB,EAAU,SAAKtO,EACbqW,GACO,MAALnW,UAAKF,EAALE,EAAOP,kBAAQK,EAAfA,EAAiBQ,aAAjBR,EAAuBkW,UAAWlU,EAAgB9B,KAChDgP,EAEN,EAAG,CAAChP,EAAOgP,IAEXtE,EAASpK,CAAAA,OAAM8a,UAASG,eAxBAC,QAAqBC,EAAA,OAClB,OADkBA,EAC3CX,EAAWU,IAAcC,EAAIL,EAAQI,EAAa,EAuBZV,cAAe1E,EAAa,ECxHtExM,GAAA,CAAA,sBAAA,mBAAA,iBAAA,iBAWa8R,GAAwB,CACnC,WAAY,WAAY,WAAY,YAGhCC,GAAwBxd,OAAOC,OAA+B,CAClE,SAAU,aAGNwd,GAAY,wBACZC,GAAiB,CAAEC,OAAQ,0BAE3BC,GAAqE,CACzE,MA6CIC,GAAgBA,KACpB,MAAMC,EAAgBhJ,EACpB9B,GACC+B,IAACgJ,IAAAA,EAAAA,OAAsB,OAAtBA,EAAKhJ,EAAElF,MAAM2B,KAAKA,WAAI,EAAjBuM,EAAmBC,cAGtBrR,EAAasI,IACbgJ,EAAahJ,EAA2C,CAAE,KAEzD9S,KAAEA,EAAI0O,QAAEA,GAAWqN,GAAwBnK,GAAyB,CACzE1Q,IAAKoa,GACLpF,OAAQ,MACRrX,QAAS0c,MAEJS,EAAgBC,GAAqB1K,KACtCuJ,QAAEA,EAAON,WAAEA,GAAeH,MAEzB6B,EAAYC,GAAiB5K,GAAS,GAEvC6K,EAAgBjO,EACpB,YACInO,IAAAA,EAAMqc,OAAO5V,KACb,EACE6V,iBACAC,eACApV,mBACAD,yBAECoV,GACDC,EAAapb,SAAS,YAEpBia,GAAsBja,SAASgG,IAC/BiU,GAAsBja,SAAS+F,MAGvC,CAAClH,IAGGwc,EAA2Cxc,GAAQ,CACvDyc,cACgB,MAAdT,GAAAA,EAAgBS,eAChBzc,EAAKyc,gBACLT,MAAAA,OAAAA,EAAAA,EAAgBS,iBAAkBzc,EAAKyc,cACnC,CAACzc,EAAKyc,cAA6B,MAAdT,OAAc,EAAdA,EAAgBS,eAAeC,KAAK,MACzD1c,EAAKyc,gBAA+B,MAAdT,OAAc,EAAdA,EAAgBS,gBAAiB,KAC7DE,YAAaX,MAAAA,GAAAA,EAAgBW,YAAYzZ,OACrC,IAAIlD,EAAK2c,eAAgBX,EAAeW,aAAapW,OACrD,CAACqW,EAAQC,EAAOC,IACdD,IACEC,EAAKnY,UAAWoY,GAAMA,EAAE1Z,KAAOuZ,EAAOvZ,IAAM0Z,EAAEC,OAASJ,EAAOI,OAElEhd,EAAK2c,YACTN,QAASL,EACL,IAAIhc,EAAKqc,UAAWL,EAAeK,QACnCrc,EAAKqc,QAENxU,KACC,CAACU,EAAGgP,IACF,IAAI5T,KAAK4E,EAAE0U,eAAerZ,UAC1B,IAAID,KAAK4T,EAAE0F,eAAerZ,WAE7BR,IAAK8Z,GAAE9S,EACH8S,CAAAA,EAAAA,EACHC,CAAAA,UAAWxB,EAAgBuB,EAAGE,gBAAkBF,EAAGC,UACnDE,QAAS1B,EAAgBuB,EAAGI,cAAgBJ,EAAGG,YAI/CE,EAAsBhe,MAC1BnB,EACAS,EACA2e,EACA3J,KAEA,IAAI,IAAA4J,EAAAtC,EACEa,GACFC,OAAkBvQ,GAGpB,MAAMgS,IACFrC,GAAsBjd,EAAO0M,iBAC/B2Q,GAAmCta,SACP,SAA1B/C,EAAO6M,eACyB,OADAwS,EAC5B3C,EAAQ1c,EAAO4M,oBAAa,EAA5ByS,EAA8Bhc,KACC,OADG0Z,EAClCX,EAAWpc,EAAO4M,oBAAa,EAA/BmQ,EAAiCzG,eAGhC7V,QAAS8e,GAAmBC,SAAuBhe,QAAQkU,IAAI,CACtEiI,EAAqB,CACnBld,QAAOuL,EAAOvL,GAAAA,EAAY0c,IAC1Bnd,OAAMgM,EACDhM,CAAAA,EAAAA,EACHyf,CAAAA,cAAezf,EAAOyf,cAAcjN,MAAM,EAAG,KACzC4M,GAAQ,CAAEA,SAEhB3J,WAEF6J,GACElf,EAAIsf,IAAgBxC,GAAW,CAC7Bzc,UACAgV,SACAzV,OAAMgM,EAAA,CAAA,EACDhM,EACH0M,CAAAA,eAAgBuQ,GAAsBjd,EAAO0M,gBAC7CC,iBAAkB,UAClB8S,cAAezf,EAAOyf,cAAcjN,MAAM,EAAG,KACzC4M,GAAQ,CAAEA,aAetB,OAVII,GACF3B,EAAkB2B,EAAc5d,MAGlC8b,EAAW1J,QAAU,CACnB,+BACEuL,EAAgB,gCAClB,6BACEA,EAAgB,gCAEb,CACR,CAAC,MAAO3V,GACP,OAAO,CACR,GAmHH,MAAO,CACLhI,KAAMwc,EACNuB,oBAtE0Bxe,MAC1BV,EACAgV,KAEA,IACE,aAAa0J,EACX/S,EAAW4H,QAA4BhI,EAElC0R,CAAAA,EAAAA,EAAW1J,QACXvT,GAEL,WACAgV,EAEH,CAAC,MAAO7L,GACP,OAAO,CACR,GAuDDgW,gBAnHsBze,MAAAyV,EAQtBnB,KAPA,IAAAnJ,oBACEA,EAAmBuT,iBACnBA,EAAgBC,eAChBA,EAAcL,cACdA,GAEkB7I,EADf5W,EAAMkN,EAAA0J,EAAA1L,IAIX,IACEkB,EAAW4H,QAAOhI,EAAA,CAAA,EAAQhM,EAAM,CAAEyf,kBAClC,MAAMM,EAAS/T,EAAA,CAAA,EACVhM,EAAM,CACTyf,gBACAnT,sBACAuT,mBACAC,mBAEF,aAAaX,EAAoBY,EAAW,CAAA,OAAIzS,EAAWmI,EAC5D,CAAC,MAAO7L,GACP,QACD,GA8FDoW,mBA3FyB7e,MACzBV,EACAgV,KAEA,IACE,aAAa0J,EACX/S,EAAW4H,QAA4BhI,KAElC0R,EAAW1J,QACXvT,GAEL,UACAgV,EAEH,CAAC,MAAO7L,GACP,OAAO,CACR,GA4EDqW,eAtDqB9e,MACrB4F,EACA0O,KAEAsI,GAAc,GACd,MAAOmC,EAAYC,SAAqB3e,QAAQkU,IAC9C,CAAC,EAAG,GAAG1Q,IAAKqI,GACVjN,EAAIsf,IAAuB,wBAAyB,CAClD1f,OAAMgM,EAAOjF,GAAAA,EAASsG,CAAAA,cACtBoI,aAMN,OAFAsI,GAAc,GAEPmC,EAAWte,KAAKoD,IAAI,CAAC+U,EAAOlU,KACjC,MAAMua,EAAeD,EAAYve,KAAKiE,GACtC,OAWAmG,KACK+N,EAZAqG,EAYK,CAERC,YAAatG,EAAMsG,YAAcD,EAAaC,YAC9CrB,gBACEtZ,KAAK4a,IAAIvG,EAAMiF,gBAAiBoB,EAAapB,iBAC7CjY,EAAQwZ,mBACVrB,cACExZ,KAAK8a,IAAIzG,EAAMmF,cAAekB,EAAalB,eAC3CnY,EAAQwZ,mBACVxB,UACErZ,KAAK4a,IAAIvG,EAAMgF,UAAWqB,EAAarB,WACvChY,EAAQwZ,mBACVtB,QACEvZ,KAAK8a,IAAIzG,EAAMkF,QAASmB,EAAanB,SACrClY,EAAQwZ,mBACVE,eAAgB1G,EAAM0G,eAAiBL,EAAaK,gBAzB1C,CAGRzB,gBAAiBjF,EAAMiF,gBAAkBjY,EAAQwZ,mBACjDrB,cAAenF,EAAMmF,cAAgBnY,EAAQwZ,mBAC7CxB,UAAWhF,EAAMgF,UAAYhY,EAAQwZ,mBACrCtB,QAASlF,EAAMkF,QAAUlY,EAAQwZ,oBAqBvC,EAAC,EASDjQ,QAASA,GAAWwN,EACpBE,kBC1TJ9S,GAAA,CAAA,iBAAAC,GAAA,CAAA,iBAQA,IAAYuV,GAUAC,IAVZ,SAAYD,GACVA,EAAA,MAAA,QACAA,EAAA,UAAA,aACAA,EAAA,QAAA,UACAA,EAAA,MAAA,QACAA,EAAA,aAAA,gBACAA,EAAA,gBAAA,mBACAA,EAAA,YAAA,UACD,CARD,CAAYA,KAAAA,GAQX,KAED,SAAYC,GACVA,EAAA,MAAA,QACAA,EAAA,UAAA,YACAA,EAAA,MAAA,QACAA,EAAA,QAAA,UACAA,EAAA,aAAA,eACAA,EAAA,gBAAA,kBACAA,EAAA,YAAA,aACD,CARD,CAAYA,KAAAA,GAQX,KAEY,MAAAC,GAET,CACFC,iBAAkBF,GAAsBG,gBACxCC,cAAeJ,GAAsBK,aACrCjb,MAAO4a,GAAsBM,MAC7Bjb,WAAY2a,GAAsBO,UAClCC,MAAOR,GAAsBS,MAC7Bnb,QAAS0a,GAAsBU,QAC/BC,SAAUX,GAAsBY,aAwC5BC,GAA8B,CAAC,UAAW,SAE1CC,GAAoBA,KAAKC,IAAAA,EAC7B,MAAMtV,EAAamI,EAAmB9I,GAAgB+I,IAAC8E,IAAAA,EAAAA,OAAmB,OAAnBA,EAAI9E,EAAElF,MAAM/D,cAAO,EAAf+N,EAAiBlN,aACtEuV,EAAepN,EAAmB9I,GAAgB+I,IAACgF,IAAAA,EAAAA,OAAmB,OAAnBA,EAAIhF,EAAElF,MAAM/D,cAAO,EAAfiO,EAAiBjN,QACxEqV,EAAcrN,EAAmB9I,GAAgB+I,QAAC6F,EAAA,OAAIA,OAAJA,EAAI7F,EAAElF,MAAM/D,cAAR8O,EAAAA,EAAiB7N,OACvEiL,EAAWL,GACfjH,GAAsBQ,kBAGpB/O,KAAMigB,EAAWvR,QAASwR,EAAcxgB,MAAOygB,GACjDC,GACExO,GAAgC,CAAE,KAElC5R,KAAMqgB,EAAU3R,QAAS4R,EAAa5gB,MAAO6gB,GAC/CC,GACE5O,GAAgC,CAAA,GAE9BlD,EAAUwR,GAAgBI,EAC1B5gB,EAAQygB,GAAcI,EAEtBvgB,EAAOmO,EAAQ,KAAK,IAAAsS,EAAAzL,EACxB,IAAKiL,SAAcD,GAAAA,EAAa5H,UAAYiI,IAAc7V,EACxD,MAAO,CACLkW,YAAa,CAAErB,OAAO,GACtBsB,aAAc,CACZlQ,WAAMjG,SAAAA,EAAYyT,iBAClBnS,WAAY,GACZ8U,GAAIpW,MAAAA,OAAAA,EAAAA,EAAY0T,iBAItB,MAAM2C,GAAmBR,GACvBJ,EAAUa,oBAAoB5d,OAASmd,EAASS,oBAAoB5d,OACpE+c,EACAI,EA2BF,MAAO,CAAEK,YAzBwB,CAC/BrB,OAAO,EACPG,MAAOqB,EAAgBE,mBAAmBta,KAAMua,GAC9CA,EAAG7f,SAAS2d,GAAuBU,SAsBjBmB,aAlBa,CACjClQ,KAAMjG,EAAWyT,iBACjB2C,GAAIpW,EAAW0T,eACfpS,WAAY0E,MAAMC,KAAK,CAAEvN,OAAsDud,OAAhDA,SAAAzL,EAAG+K,GAAgBC,IAAjBhL,OAA4BA,EAA5BA,EAA+BzK,cAA/ByK,EAAAA,EAAwC9R,QAAMud,EAAI,IAChFrd,IAAI,CAAC6d,EAAGhd,SAACid,EAAA,MAAM,CACdC,QAASld,EACL4c,EAAgBC,oBAChBD,EAAgBE,mBAAmBxa,OAClC+B,IAAO,CAAC,QAAS,SAASnH,SAASmH,KAEtClF,IAAKge,KACL/M,KAAM2K,GAAiBoC,GACvBlT,MAAO,MAETgK,OAAoCgJ,OAA9BA,EAAGnB,GAAgBC,IAAqB,OAAVkB,EAA5BA,EAA+B3W,cAAO,EAAtC2W,EAAyCjd,GAClD,MAIJ,CAACgc,EAAWI,IAyFf,OAvFAvS,EAAU,KAAK,IAAAtO,EACbqW,EAAc,MAALnW,GAAeF,OAAVA,EAALE,EAAOP,WAAc,OAANK,EAAfA,EAAiBQ,WAAI,EAArBR,EAAuBkW,QAAShH,EAC3C,EAAG,CAACA,EAAShP,IAEboO,EAAU,KACR,GAAgB,MAAXkS,IAAAA,EAAa5H,UAAY4H,EAAYhd,MAAQ4c,GAAcze,SAAS6e,EAAYhd,MACnF,OAEF,MAAM2Q,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAEK,IAAAwN,EA6BpC,OA5BEb,EADwB,YAAtBR,MAAAA,OAAAA,EAAAA,EAAahd,MACL,CACR5E,OAAQ,CACNyf,cAAe,IAAIla,KACnBsC,cAA0B,MAAX+Z,OAAW,EAAXA,EAAa/Z,cAC5Bqb,kBAA8BD,MAAXrB,GAAoB,OAATqB,EAAXrB,EAAazV,cAAO,EAApB8W,EAAsBne,OACzCkV,QAAS4H,MAAAA,OAAAA,EAAAA,EAAa5H,QACtB3M,UAAW,EACXvF,YAAa8Z,MAAAA,OAAAA,EAAAA,EAAa9Z,aAE5B2N,SACA3S,IAAK,WAAsB,MAAX8e,OAAW,EAAXA,EAAa5H,iCAGrB,CACRpY,KAAM,CACJ4L,kBAAaoU,SAAAA,EAAapU,YAC1BH,UAAWuU,MAAAA,OAAAA,EAAAA,EAAavU,UACxBE,WAAsB,MAAXqU,OAAW,EAAXA,EAAarU,WAAY,IAAIvI,IACtCme,GAA4BjW,EAAAiW,EAAAjY,KAE9BiB,QAASyV,MAAAA,OAAAA,EAAAA,EAAazV,SAExB2L,OAAQ,OACRrC,SACA3S,IAAK,WAAW8e,MAAAA,OAAAA,EAAAA,EAAa5H,2BAI1B,KACLzE,EAAgBK,OAClB,CAAA,EACC,CAAY,MAAXgM,OAAW,EAAXA,EAAa5H,UAEjBtK,EAAU,KACR,GAAiB,MAAZiS,IAAAA,EAAc3H,UAAY2H,EAAa/c,MAAQ4c,GAAcze,SAAS4e,EAAa/c,MACtF,OAGF,MAAM2Q,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAEM,IAAA2N,EA6BrC,OA5BEpB,EADyB,YAAX,MAAZL,OAAY,EAAZA,EAAc/c,MACL,CACT5E,OAAQ,CACNyf,cAAe,IAAIla,KACnBsC,cAAe8Z,MAAAA,OAAAA,EAAAA,EAAc9Z,cAC7Bqb,kBAA+B,MAAZvB,GAAAyB,OAAYA,EAAZzB,EAAcxV,cAAdiX,EAAAA,EAAuBte,OAC1CkV,cAAS2H,SAAAA,EAAc3H,QACvB3M,UAAW,EACXvF,YAAyB,MAAZ6Z,OAAY,EAAZA,EAAc7Z,aAE7B2N,SACA3S,IAAK,WAAW6e,MAAAA,OAAAA,EAAAA,EAAc3H,iCAGrB,CACTpY,KAAM,CACJ4L,YAAyB,MAAZmU,OAAY,EAAZA,EAAcnU,YAC3BH,UAAWsU,MAAAA,OAAAA,EAAAA,EAActU,UACzBE,WAAuB,MAAZoU,OAAY,EAAZA,EAAcpU,WAAY,IAAIvI,IACvCqe,GAA4BnW,EAAAmW,EAAAlY,KAE9BgB,QAASwV,MAAAA,OAAAA,EAAAA,EAAcxV,SAEzB2L,OAAQ,OACRrC,SACA3S,IAAK,WAAW6e,MAAAA,OAAAA,EAAAA,EAAc3H,2BAI3B,KACLzE,EAAgBK,QAClB,EACC,CAAC+L,MAAAA,OAAAA,EAAAA,EAAc3H,UAEX,CACLpY,OACAN,MAAYogB,MAALpgB,GAAAogB,OAAKA,EAALpgB,EAAOP,eAAP2gB,EAAAA,EAAiB9f,KAAK0V,QAC7BhH,YCrNEgT,GACJC,IAEA,MAAMtS,EAAOsD,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAM2B,MACrDhF,EAAWsI,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAM2B,KAAKhF,UAC9DwL,EAAWL,GACfjH,GAAsBM,QAElBiH,EAAgBnD,EACpBlD,GACAmD,GAAKA,EAAElF,MAAMa,GAAsBM,WAG9BnP,MAAEA,EAAKgP,QAAEA,GAAWkT,GAAkBhQ,GAE1C,CACD1Q,IAAK,uBACLgV,OAAQ,SA6DV,OAJApI,EAAU,KAAK,IAAAtO,EACbqW,EAAcrW,MAALE,GAAeF,OAAVA,EAALE,EAAOP,kBAAQK,EAAfA,EAAiBQ,aAAjBR,EAAuBkW,QAAShH,EAC3C,EAAG,CAAChP,EAAOgP,IAEXtE,EAAA,CAASyX,UA1DStiB,MAChBqa,EACAkI,EACAC,GAAgB,EAChBnf,OAAsC8I,EACtCyV,EAAyD,GACzDtN,KAEA,GAAIxE,EAAKA,KAAM,CACb,MAAM2S,EAAqBD,GACtBnf,GAAoBD,EAAyBgf,IAC7Cve,IAAK2Z,GAAM,GAAGA,EAAE/Z,QAAQ+Z,EAAE1Z,MAC1BqZ,KAAK,KACN,KAEJ,IACE,MAAMvX,EAAU,CACdyU,OAAqB,QAAbvP,EAAqB4X,WAAWrI,EAAOsI,QAAQ,IAAMtI,EAC7DvP,WACAiG,kBAAmBjB,EAAKiB,kBACxB6R,cAAe,UAASH,EAAqB,IAAIA,IAAuB,IAExEI,WAAY,CACV,CACEC,UAAWvD,GAAuBO,MAClCiD,YAAYnB,MAAAA,OAAAA,EAAAA,EAAQ9B,QAAShQ,EAAKA,KAAKgQ,OAEzC8B,EAAO7B,WAAa,CAClB+C,UAAWvD,GAAuBQ,UAClCgD,WAAYnB,EAAO7B,WAErB6B,EAAO1B,SAAW,CAChB4C,UAAWvD,GAAuBW,QAClC6C,WAAYnB,EAAO1B,SAClB0B,EAAO/B,cAAgB,CACxBiD,UAAWvD,GAAuBM,aAClCkD,WAAYnB,EAAO/B,cAClB+B,EAAOjC,iBAAmB,CAC3BmD,UAAWvD,GAAuBI,gBAClCoD,WAAYnB,EAAOjC,kBAErB3Y,OAAOgc,SACTT,gBAGF5c,EAAQ,CAAEK,MAAO,aAAcid,WAAYrd,IAE3C,MAAMnF,KAAEA,SAAe4hB,EAAe,CAAE5hB,KAAMmF,EAAS0O,WAEvD,OAAO7T,EAAKyiB,cACb,CAAC,MAAOza,GACV,CAAA,IAOoB8N,EAAa,ECtEhC4M,GAAgBA,CAAChI,EAAmBiI,EAAQ,MAChD,MAAMtS,EAAWsC,EACf9B,GACC+B,GAAMA,EAAElF,MAAM2B,KAAKgB,YAEf3B,QAAEA,EAAOhP,MAAEA,EAAKM,KAAEA,GAAQ4iB,GAAmBlR,GAAoB,CACtE7S,QAAS,CAAE2c,OAAQ,0BACnBtF,OAAQ,MACRhV,IAAK,WAAWwZ,sBAA8BiI,MAchD,OAXA7U,EAAU,KACRtP,EAAIa,SAASR,QAAQS,OAAO,UACb,UAAb+Q,EAAuB,KAAOA,EAChC,MAAMsD,EAAkB,IAAIC,gBAG5B,OADAgP,EAAgB,CAAE/O,OADHF,EAAgBE,SAExB,KACLF,EAAgBK,OAClB,CAAA,EACC,CAAC3D,IAEG,CAAErQ,OAAMN,QAAOkjB,kBAAiBlU,UAAO,ECpC1CmU,GAAgBjI,IACpB,OAAS5a,KAAM8iB,EAAY,GAAEpU,QAAEA,GAAWqU,GAAsBnR,GAE9D,CAAEsE,OAAQ,MAAOhV,IAAK,sBAcxB,OAZA4M,EAAU,KACR,IAAK8M,EACH,OAEF,MAAMjH,EAAkB,IAAIC,gBAG5B,OADAmP,EAAmB,CAAE3kB,OAAQ,CAAE4kB,WAAYpI,GAAU/G,OADtCF,EAAgBE,SAExB,KACLF,EAAgBK,OAAK,CACvB,EACC,CAAC4G,IAEG,CAAEkI,YAAWpU,YC9BtBpF,GAAA,CAAA,WAoNM2Z,GAAkB,GAElBpF,GAAgB,aAEhBqF,GAAqBA,CAACC,GAAe,KACzC,MAAMtN,EAAWL,GAAoBjH,GAAsBI,iBACrDgN,EAAgBhJ,EACpB9B,GACC+B,IAAC,IAAAgJ,EAAA,OAAKA,OAALA,EAAKhJ,EAAElF,MAAM2B,KAAKA,WAAbuM,EAAAA,EAAmBC,gBAErB7b,KAAEA,EAAIN,MAAEA,EAAKgP,QAAEA,GAAW0U,GAAexR,GAA0B,MAEjElD,QAAS2U,EAAa3jB,MAAO4jB,EAAWtjB,KAAMujB,GAAYC,GACjE5R,GAA+B,MAExBlD,QAAS+U,EAAa/jB,MAAOgkB,EAAW1jB,KAAM2jB,GAAYC,GACjEhS,GAA+B,CAAA,GAC3BiS,EAAeR,GAAeI,EAC9BK,EAAaR,GAAaI,EAE1BK,EAAyC5V,EAC7C,IACEnO,GAAIoK,KACCpK,EAAI,CACPmd,UAAWxB,EAAgB3b,EAAKod,gBAAkBpd,EAAKmd,UACvD1Y,aAAczE,EAAKyE,aAAarB,IAAKwB,GAAEwF,EAAA,CAAA,EAClCxF,EACHI,CAAAA,MAAO2W,EAAgB/W,EAAGiX,YAAcjX,EAAGI,MAC3ChC,KAAM,eAGZ,CAAChD,EAAM2b,IAGHqI,EAAavJ,EACjBlb,MAAOnB,EAAsByV,KAC3B,IAcE,aANuBuP,EAAY,CACjCliB,IAAK,WAAW9C,EAAOga,iBACvBha,SACAyV,YAGc7T,IACjB,CAAC,MAAAgX,GACA,MACD,GAEH,CAACoM,IAGG/E,EAAiB5D,EACrBlb,MAAAyV,EAEEnB,KADA,IAAAuE,QAAEA,GAAmCpD,EAAvB7P,EAAOmG,EAAA0J,EAAA1L,IAOrB,MAAMlL,EAAMgM,EAAA,CAAA,EACPjF,EAAO,CACVwZ,mBAAoBxZ,EAAQoF,QAAQrH,SAEhChC,EAAM,WAAWkX,WACvB,IAqBE,aApB8BxY,QAAQkU,IAAI,CACxC8P,EAAS,CACPxlB,OAAMgM,EAAA,GACDhM,EACHyf,CAAAA,iBACApS,UAAW,IAEboI,SACA3S,QAEFsiB,EAAS,CACPplB,OAAMgM,KACDhM,EAAM,CACTyf,iBACApS,UAAW,IAEboI,SACA3S,WAGmB+S,QAASgQ,GAAQA,EAAIjkB,KAAKyE,aAClD,CAAC,MAAA4S,GACA,MACD,GAEH,CAACmM,EAAUI,IAGPM,EAAexV,GAAWmV,EAC1BM,EAAazkB,GAASokB,EA8B5B,OA5BAhW,EAAU,SACWsW,EAAAC,EAAdlB,GACHtN,GACY,MAAVsO,UAAUC,EAAVD,EAAYhlB,kBAAQilB,EAApBA,EAAsBpkB,aAAtBokB,EAA4B1O,UAAWlU,EAAgB2iB,GACvDD,EACUG,MAAVF,GAAoBE,OAAVA,EAAVF,EAAYhlB,WAAc,OAANklB,EAApBA,EAAsBrkB,WAAI,EAA1BqkB,EAA4B1O,YAE/B,EACA,CAACuO,EAAcC,IAoBX,CACLnkB,KAAM+jB,EACNC,aACA3F,iBACAiG,aAtBmBnW,EACnB,KAAA,IAAAoW,EAAAC,EACE,OAAAjB,MAAAA,GAAAA,EAAU9e,aAAavB,QAAUygB,MAAAA,GAAAA,EAAUlf,aAAavB,OACpD,IAC0B,OAA1BqhB,QAAIhB,SAAAA,EAAU9e,cAAY8f,EAAI,MACJ,OAA1BC,EAAIb,MAAAA,OAAAA,EAAAA,EAAUlf,cAAY+f,EAAI,IAC9BphB,IAA8BqhB,GAAKra,EAChCqa,CAAAA,EAAAA,GACHla,QAAS,IAAIiG,MAAciU,EAAM9F,oBAAoB+F,KACnDpnB,EAAOqnB,SAET3f,MAAOyf,EAAMzf,MAAQyf,EAAM9F,mBAC3B3b,KAAM,YAELigB,IACP,CAACM,EAAUI,IAQXQ,aACAD,iBCxVEU,GAAkBA,KACtB,OAAO5kB,KAAEA,EAAI0O,QAAEA,GAAWmW,GAAgBjT,GAA8B,CAAA,GAElEoS,EACJzkB,MAAOnB,EAAsByf,EAAuBhK,KAClD,IACE,MAAMuE,QAAEA,EAAOnS,cAAEA,EAAaC,YAAEA,EAAWqE,QAAEA,GAAYnM,EAEzD,OAAK4H,EAAWC,EAAeC,IACV,IAAnBqE,EAAQrH,eAGJ2hB,EAAa,CACjBhR,SACA3S,IAAK,0BAA0BkX,KAAWnS,KAAiBC,UAAoB2X,KAAiBtT,EAAQ,QAEnG,EACR,CAAC,MAAOvC,GACP,OAAO,CACR,GAGL,OAAOmG,EAAQ,KAAO,CACpBnO,OACAgkB,aACAtV,YACE,CAACA,EAAS1O,GAAK,ECzBrB,IAAK8kB,IAAL,SAAKA,GACHA,EAAA,KAAA,OACAA,EAAA,MAAA,QACAA,EAAA,QAAA,SACD,CAJD,CAAKA,KAAAA,GAIJ,CAAA,IACD,MAAMC,GAAa,CAACD,GAAUE,KAAMF,GAAUG,MAAOH,GAAUI,SAEzDC,GAAiBA,KACrB,MAAMtH,EAAgBlL,EACpB9I,GACA+I,IAAC8E,IAAAA,EAAAA,OAAmB,OAAnBA,EAAI9E,EAAElF,MAAM/D,cAAO,EAAf+N,EAAiBlN,WAAWqT,kBAG/B7d,KAAMolB,EAAkB1W,QAAS2W,EAAa3lB,MAAO4lB,GACvDC,GACE3T,GAA8B,MAE9B5R,KAAMwlB,EAAmB9W,QAAS+W,EAAc/lB,MAAOgmB,GACzDC,GACE/T,GAA8B,CAAE,KAEhC5R,KAAM4lB,EAAqBlX,QAASmX,EAAgBnmB,MAAOomB,GAC7DC,GACEnU,GAA8B,CAAA,GAE5BlD,EAAU2W,GAAeI,GAAgBI,EACzCnmB,EAAQ4lB,GAAaI,GAAcI,EAEnCE,KACY,MAAhBZ,GAAAA,EAAkBliB,QACD,MAAjBsiB,GAAAA,EAAmBtiB,QACnB0iB,MAAAA,GAAAA,EAAqB1iB,QA0CvB,MAAO,CAAElD,KAdImO,EAAQ,KAClB6X,EAAgB,CAACZ,EAAkBI,EAAmBI,GAAuB,IAC3E3R,QACC,CAACgS,EAAchiB,IAAMgiB,EAAa7iB,IAChC,EAAG4B,QAAOH,eAAcqhB,aAAYC,oBAAqB,CACvDC,UAAWrB,GAAW9gB,GACtBkiB,gBACAD,aACAlhB,QACAH,eACA7B,KAAM,YAET,CAACgjB,IAEOtmB,QAAOskB,WAvCHzkB,OAEf0G,gBACAC,cACAqE,UACA6N,WAEFvE,WAEMjU,QAAQkU,IACZ,CAACyR,EAAU,CACT1R,SACA3S,IAAK,0BAA0BkX,KAAWnS,KAAiBC,KAAe4e,GAAUE,QAAQnH,KAAiBtT,EAAQ,OAEvHob,EAAW,CACT9R,SACA3S,IAAK,0BAA0BkX,KAAWnS,KAAiBC,KAAe4e,GAAUG,SAASpH,KAAiBtT,EAAQ,OAExHwb,EAAa,CACXlS,SACA3S,IAAK,0BAA0BkX,KAAWnS,KAAiBC,KAAe4e,GAAUI,WAAWrH,KAAiBtT,EAAQ,UAmB5FmE,UAAO,ECrE9B2X,GAAe,eAGfC,GAAW,WCClBC,GAAkBC,GAAgChoB,EAAIsf,IAA0B,sBAAuB0I,GAEhGC,GAAoBA,KAC/B,MAAM9Y,EAAWgF,EAAmB9B,GAAc+B,GAAKA,EAAEjF,SAASoD,cAC5D2V,EAAa/T,EAAmB9B,GAAc+B,KAAOA,EAAElF,MAAM2B,KAAKA,MAElEsX,EAAetc,IACfA,IAAa7L,EAAIa,SAASR,QAAQS,OAAO,eAC3CqO,EAAS,CAAE3K,KDfW,eCeSmC,QAAS,CAAEkF,aAC3C,EAGGuc,EAAYrnB,UAChB,IAAIJ,EACJ,IACEA,QAAiBonB,GAAe,CAAE1S,UACnC,CAAC,MAAAmD,GAEA7X,QAAiBonB,GAAe,CAAEtlB,eAAe,EAAM4S,UACxD,CACD,MAAM7T,EAAOb,EAASa,KACtB,GAAKA,EAWL,OARA2N,EAAS,CAAE3K,KAAMsjB,GAAUnhB,QAAS,CAAEkK,KAAMrP,KACxCA,EAAK6b,aACPlO,EAAS,CACP3K,KAAMqjB,GACNlhB,QAAS,CAAEwL,QAAS3Q,EAAK6mB,eAG7BF,EAAY3mB,EAAKqK,UACVrK,GA2BT,MAAO,CACL4mB,YACAE,WA1BkB7mB,IACbymB,IACHloB,EAAIa,SAASR,QAAQS,OAAO,qBAAuBW,EACpD,EAwBD0mB,cACAI,YAtBmB1W,IACfA,IAAa7R,EAAIa,SAASR,QAAQS,OAAO,WAC3CqO,EAAS,CAAE3K,KDhDO,WCgDSmC,QAAS,CAAEkL,aACvC,EAoBD2W,SAjBeznB,UACf,GAAIuB,EAIF,OAHAtC,EAAIa,SAASR,QAAQkC,cAAgB,UAAUD,IAC/C6M,EAAS,CAAE3K,KDpDQ,YCoDSmC,QAAS,CAAErE,iBAE1B8lB,WAENpoB,EAAIa,SAASR,QAAQkC,cAC5B4M,EAAS,CAAE3K,KDvDS,cCwDrB,IAYCikB,GAAaA,KACjB,MAAM5c,SAAEA,EAAQgG,SAAEA,EAAQvP,MAAEA,GAAU6R,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAM2B,MAEpF,MAAO,CACLhF,WACAgG,SAAUA,GAAY,KACtBvP,UC6BSomB,GAAiBA,KAC5B,MAAMrR,EAAWL,GAAoBjH,GAAsBc,MACrDyG,EAAgBnD,EACpBlD,GACCmD,GAAMA,EAAElF,MAAMa,GAAsBc,OAEjC1B,EAAWgF,EACf9B,GACC+B,GAAMA,EAAEjF,SAASoD,cAEd1B,EAAOsD,EAAmB9B,GAAe+B,GAAMA,EAAElF,MAAM2B,KAAKA,OAC5D2X,SAAEA,GAAaP,MACf/N,aAAEA,GAAiBF,OAEhB9Y,MAAOynB,EAAazY,QAAS0Y,GAAiBC,GACrDzV,GAAyB,CACvB1Q,IAAK,kCACLgV,OAAQ,WAGHxW,MAAO4nB,EAAY5Y,QAAS6Y,GAAgBC,GACnD5V,GAAyB,CACvB1Q,IAAK,iCACLgV,OAAQ,WAGRxW,MAAO+nB,EAAwB/Y,QAASgZ,GAC1CC,GACE/V,GAAoC,CACtC1Q,IAAK,2BACLgV,OAAQ,WAINxW,MAAOkoB,EAAkBlZ,QAASmZ,GACpCC,GACElW,GAAyB,CAC3B1Q,IAAK,mCACLgV,OAAQ,WAGDxW,MAAOqoB,EAAarZ,QAASsZ,GAAiBC,GACrDrW,GACE,CACE1Q,IAAK,gBACLgV,OAAQ,OACRlW,KAAM,CAAA,GAER,CAAE8R,QAAQ,MAIVpS,MAAOwoB,EAAiBxZ,QAASyZ,GACnCC,GACExW,GAAa,CACf1Q,IAAK,wCACLgV,OAAQ,UAINxW,MAAO2oB,EAAiB3Z,QAAS4Z,GACnCC,GACE3W,GAAa,CACf1Q,IAAK,iCACLgV,OAAQ,UAINxW,MAAO8oB,EAAgB9Z,QAAS+Z,GAClCC,GACE9W,GAAa,CACf1Q,IAAK,uBACLgV,OAAQ,WAINxW,MAAOipB,EAAsBja,QAASka,GACxCC,GACEjX,GAAa,CACf1Q,IAAK,8BACLgV,OAAQ,UAGDxW,MAAOopB,EAASpa,QAASqa,EAAW/oB,KAAMgpB,GAAUC,GAC3DrX,GAAa,CAAE1Q,IAAK,0BAA2BgV,OAAQ,UAIrDxW,MAAOwpB,EACPxa,QAASya,EACTnpB,KAAMopB,GAERC,GACEzX,GAAmC,CACrC1Q,IAAK,wBACLgV,OAAQ,MACRrX,QAAS,CAAE2c,OAAQ,8BAIjB9b,MAAO4pB,EAAmB5a,QAAS6a,GACrCC,GACE5X,GAAgC,CAClC1Q,IAAK,yCACLgV,OAAQ,SA0KJxH,EACJyZ,GACAG,GACAZ,GACAH,GACAM,GACAG,GACAmB,GACAJ,GACAQ,GACAd,GACAG,GACAxB,EAEI1nB,EACJwoB,GACAG,GACAZ,GACAH,GACAM,GACAG,GACAmB,GACAJ,GACAQ,GACAd,GACAG,GACAxB,EAUF,OARArZ,EAAU,KAAK,IAAAtO,EAAAsgB,EACbjK,GACO,MAALnW,GAAeF,OAAVA,EAALE,EAAOP,WAAc,OAANK,EAAfA,EAAiBQ,WAAI,EAArBR,EAAuBkW,UAAWlU,EAAgB9B,GAClDgP,EACKoR,MAALpgB,GAAeogB,OAAVA,EAALpgB,EAAOP,WAAc,OAAN2gB,EAAfA,EAAiB9f,WAAI,EAArB8f,EAAuBnK,YAE3B,EAAG,CAACjW,EAAOgP,IAEXtE,EAAA,CACEqf,eA5MqBlqB,SACrBoO,EAAS,CAAE3K,KAAMqjB,GAAclhB,QAAS,CAAEwL,aA4M1C+Y,eAvIqBnqB,MACrBoqB,EACA9V,KAEA,IACE,GAAIxE,EAAM,CACR,MAAMua,mBACJA,EAAkBC,QAClBA,EAAOC,iBACPA,EAAgBC,cAChBA,EAAaC,YACbA,GACE3a,EA0BJ,aAxBM+Y,EAAe,CACnBpoB,KAAIoK,EACFwf,CAAAA,qBACAC,UACAC,mBACAC,gBACAC,eACGL,GAEL9V,WAGFlG,EAAS,CACP3K,KAAMsjB,GACNnhB,QAAS,CACPkK,KAAMA,GAAIjF,EACLiF,CAAAA,EAAAA,EACAsa,GACHE,QAASF,EAAkBE,QACvBF,EAAkBE,QAClBA,QAIH,CACR,CACF,CAAC,MAAO7hB,GACP,OAAO,CACR,GA8FDiiB,mBA3FyB1qB,MACzBoqB,EACA9V,KAEA,IAEE,aADM0U,EAAmB,CAAEvoB,KAAM2pB,EAAmB9V,YAErD,CAAA,CAAC,MAAO7L,GACP,OAAO,CACR,GAmFDkiB,MAzLY3qB,MAAO4F,EAAuB0O,KAC1C,IACE,MAAM1U,QAAiBqoB,EAAU,CAAExnB,KAAMmF,EAAS0O,WAElD,MAAO,CAAE1U,WAAUkQ,WADI2X,EAAS7nB,EAASa,KAAKc,OAE/C,CAAC,MAAOkH,GAAG,GAqLZmiB,YAjLkB5qB,MAClBsnB,EACAhT,KAEA,IACE,MAAM1U,QAAiB2oB,EAAgB,CAAE9nB,KAAM,CAAE6mB,eAAehT,WAEhE,MAAO,CAAE1U,WAAUkQ,WADI2X,EAAS7nB,EAASa,KAAKc,OAE/C,CAAC,MAAOkH,GAEX,GAwKEoiB,OAtKa7qB,UACb,IAIE,aAHM0oB,EAAW,CAAEpU,iBACbmT,EAAS,MACftO,KAED,CAAA,CAAC,MAAA1B,GACA,OAAO,CACR,GA+JDqT,mBA5JyB9qB,MACzBS,EACA6T,KAEA,IACE,MAAM1U,QAAiBqqB,EAAiB,CAAExpB,OAAM6T,WAKhD,OAJI1U,EAASa,KAAKc,aACVkmB,EAAS7nB,EAASa,KAAKc,QAIhC,CAAA,CAAC,MAAAuW,GACA,QACD,GAgJDiT,qBApF2B/qB,MAC3BS,EACA6T,KAEA,IAEE,aADM8T,EAAsB,CAAE3nB,OAAM6T,YAC7B,CACR,CAAC,MAAO7L,GACP,OACD,CAAA,GA4EDuiB,SAjNehrB,MACf4F,EACA0O,KAEA,IACE,MAAM7T,KAAEA,EAAIL,OAAEA,SAAiB0nB,EAAiB,CAC9CrnB,KAAMmF,EACN0O,WAEF,OAAe,MAAXlU,UAGEqnB,EAAShnB,EAAKc,UAErB,CAAC,MAAOkH,GACP,OAAO,CACR,GAkMDwiB,cA1EoBjrB,MACpBkrB,EACA3pB,EACA+S,KAEA,IACE,MAAMhV,EAAU,CAAEkC,cAAe,UAAUD,MAEnCnB,OAAQ+qB,SAAqB7B,EAAwB,CAC3DhqB,UACAgV,YAEMlU,OAAQgrB,SAAoBjC,EAAkB,CACpD1oB,KAAM,CAAEyqB,eACR5rB,UACAgV,WAEF,OAAsB,MAAf6W,GAAoC,MAAdC,CAC9B,CAAC,MAAO3iB,GACP,QACD,GAuDD4iB,eApDsBta,KACpBA,IACC/N,EAAuBpB,SAASmP,KACnC3C,EAAS,CAAE3K,KF1XiB,mBE0XOmC,QAAS,CAAEmL,uBAkD9Cua,UAAW,CAAE5B,eAAcD,UAC3B8B,cAAe,CAAEzB,mBAAkBD,sBAChCtT,EAAa,EAIdiV,GAAUA,KACd,MAAMC,EAAUrY,EAAmB9B,GAAe+B,GAAMA,EAAElF,MAAM2B,OAE1DA,KAAEA,GAAS2b,EAKjB,MAAO,CACLrP,sBAJsBtM,IAAAA,EAAMwM,aAK5B6K,aANmBrX,EAOnB4b,aALmBD,EAAQza,SAM3BlB,KAAM2b,IC7SGE,GAAwB,CACnCC,QAAS,GACTC,OAAQ,GACRC,QAAS,IAGEC,GAAoDztB,OAAOC,OAAO,CAC7EqtB,QAAS,EACTC,OAAQ,EACRC,QAAS,IAGExZ,GAA0DhU,OAAOC,OAAO,CACnFytB,SAAU,CAAE5I,MAAO,IACnB6I,OAAQ,CAAE7I,MAAO,GAAI8I,cAAe,OACpCC,KAAM,CAAE/I,MAAO,GACfgJ,MAAO,CAAEhJ,MAAO,GAAI8I,cAAe,SAG/BG,GAAsB,CAC1BT,QAAS,WACTC,OAAQ,kBACRC,QAAS,oBAGLQ,GACJA,CAACC,GAAeC,YACdA,EAASD,EAEPE,GAAiBjP,IACpB,IAAIpZ,KAAKoZ,EAAEkP,gBAAkBlP,EAAEmP,WAAWC,UAAYpP,EAAEmP,WAAWE,YAAc,KACjF,IAAIzoB,MAAOC,UA0BRyoB,GAAiBA,CACrB3e,EACA4e,GAAY,EACZC,KAEA,MAAMzrB,EAAQ6R,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAM2B,KAAKvO,OAC3DkQ,EAAsB2B,EAAmB9B,GAAc+B,GAAKA,EAAE5B,qBAC9D6E,EAAWL,GACfjH,GAAsBY,aAElBzP,EAAQiT,EACZlD,GACAmD,GAAKA,EAAElF,MAAMa,GAAsBY,aAAazP,QAG3CkD,EAAS4pB,GAAcC,OAA8B/gB,IACrDgD,EAASge,GAAcnb,GAAS,IAChCob,EAAaC,GAAkBrb,GAAS,GACzCsb,EACJ/Z,EAA4CwY,IACxCwB,EAAeha,EAAM1I,EAAMkhB,CAAAA,EAAAA,KAE7B1oB,IACFkqB,EAAa1a,QAAQ+Y,QAAUvoB,EAAQuoB,QAAQjoB,OAC/C4pB,EAAa1a,QAAQgZ,OAASxoB,EAAQwoB,OAAOloB,OAC7C4pB,EAAa1a,QAAQiZ,QAAUzoB,EAAQyoB,QAAQnoB,QAGjD,MAAM6pB,EAAgB5e,EAAQ,IAAA/D,EAAA,CAAA,EACzByH,GAAenE,GACf6e,GACHS,aAAc,CAACtf,KACb,CAACA,IAECuf,EAAkBrqB,EAAU,CAChCuoB,QAASvoB,EAAQuoB,QAAQjoB,OAAS2pB,EAAWza,QAAQ+Y,QACrDC,OAAQxoB,EAAQwoB,OAAOloB,OAAS2pB,EAAWza,QAAQgZ,OACnDC,QAASzoB,EAAQyoB,QAAQnoB,OAAS2pB,EAAWza,QAAQiZ,SACnD,GAEEjR,EAAajM,EAAQ,IACzBvL,EACEA,EAAQuoB,QAAQroB,OAAO+oB,GAAc,GACrCjpB,EAAQwoB,OAAOtoB,OAAO+oB,GAAc,GACpCjpB,EAAQyoB,QAAQvoB,OAAO+oB,GAAc,GACnC,EAAG,CAACjpB,IAGJsqB,EAAaL,EAAWza,QAAQ+Y,QACpC0B,EAAWza,QAAQgZ,OACnByB,EAAWza,QAAQiZ,QAEf8B,EAAeze,IAAY9L,EAAU,EACzCA,EAAQuoB,QAAQjoB,OAASN,EAAQwoB,OAAOloB,OAASN,EAAQyoB,QAAQnoB,OAE7DkqB,EAAe3S,EAAYlb,MAAOsU,EAA6BwZ,KACnE,IACE,GAAI7uB,EAAIa,SAASR,QAAQkC,cAAe,CACtC8U,OAASnK,GAAW,GACpBghB,GAAW,GACX,OACI1sB,KAAMmrB,EAAStsB,QAASyuB,IACxBttB,KAAMorB,EAAQvsB,QAAS0uB,IACvBvtB,KAAMwtB,EAAY3uB,QAAS4uB,UACrB7tB,QAAQkU,IAAI,CACpBtV,EAAIsf,IAAkB8N,GAAoBT,QAAS,CACjDtsB,QAAS,CACP2c,OAAU,0BAEZpd,OAAQivB,GAAgBP,EAAa1a,QAAQ+Y,QAAO/gB,EAC/C2iB,CAAAA,EAAAA,GACHpK,MAAOmK,EAAa1a,QAAQ+Y,UAC1B4B,EACJlZ,WAEFrV,EAAIsf,IAAiB8N,GAAoBR,OAAQ,CAC/ChtB,OAAQivB,GAAgBP,EAAa1a,QAAQgZ,OAAMhhB,EAAA,CAAA,EAC9C2iB,EACHpK,CAAAA,MAAOmK,EAAa1a,QAAQgZ,SAC1B2B,EACJlZ,WAEFrV,EAAIsf,IAA+B8N,GAAoBP,QAAS,CAC9DjtB,OAAQivB,GAAgBP,EAAa1a,QAAQiZ,QAAOjhB,EAC/C2iB,GAAAA,GACHpK,MAAOmK,EAAa1a,QAAQiZ,UAC1B0B,EACJlZ,aAIJgZ,EAAWza,QAAU,CACnB+Y,QAASvlB,SAAS0nB,EAAY,uBAC9BlC,OAAQxlB,SAAS2nB,EAAW,uBAC5BlC,QAASzlB,SAAS6nB,EAAY,wBAEhCjB,EAxHWkB,EAAChgB,GAAsByd,UAASC,SAAQC,cACzD,MAAMsC,EAAoB5Q,GAAM3S,KAAW2S,EAAC,CAAErP,UAC9C,MAAc,WAAVA,EACK,CACLyd,QAASA,EAAQ/nB,IAAIuqB,GACrBvC,OAAQA,EAAOhoB,IAAIuqB,GACnBtC,QAASA,EAAQjoB,IAAIuqB,IAGlB,CACLxC,QAASA,EAAQ/nB,IAAIuqB,GAAkBpnB,OAAOylB,IAC9CZ,OAAQA,EAAOhoB,IAAIuqB,GAAkBpnB,OAAOylB,IAC5CX,QAASA,EAAQjoB,IAAIuqB,GAAkBpnB,OAAOylB,MA4G/B0B,CAAWhgB,EAAO,CAAEyd,UAASC,SAAQC,QAASmC,EAAW5qB,WACpE8pB,GAAW,EACZ,MACCG,EAAWza,QAAUkZ,GACrBkB,EAAWtB,IAEb,OACD,CAAA,CAAC,MAAOljB,GAAG4lB,IAAAA,EAEV,OADAlB,GAAW,GACPjuB,EAAMgB,SAASuI,KAGnB6kB,EAAWza,QAAUkZ,GACrBkB,OAAW9gB,GACXmK,EAASgY,EAAa7lB,IACpB4lB,OAAAA,EAAA5lB,EAAE7I,eAAFyuB,EAAAA,EAAY5tB,KAAK0V,UAAWlU,EAAgBwG,GAC1C1G,GAAc,KANT,CAQV,GACA,CAACoM,IAEEogB,EAAYrT,EAAYlb,MAAOyD,EAA2B6Q,KAC9D,IACE,GAAIrV,EAAIa,SAASR,QAAQkC,eAAwB,MAAP6B,GAAAA,EAAUI,GAAME,OAAQ,CAChE0pB,GAAe,GACf,MAAM5sB,KAAEA,SAAexB,EAAIsf,IAAI8N,GAAoB5oB,GAAO,CACxD5E,OAAMgM,KAAO2iB,EAAa,CAAEgB,OAAQnrB,EAAQI,GAAME,SAClDrE,QAAkB,YAATmE,EAAqB,CAAEwY,OAAU,+BAA6B9P,EACvEmI,WAGIma,EAvIWC,EAACvgB,EAAoB1K,EAA2BJ,KACvE,MAAM+qB,EAAoB5Q,GAAM3S,EAAA,CAAA,EAAW2S,EAAC,CAAErP,UAC9C,MAAc,WAAVA,EACK9K,EAAQQ,IAAIuqB,GAEd/qB,EAAQ2D,OAAOylB,IAAe5oB,IAAIuqB,EAAgB,EAkI5BM,CAAiBvgB,EAAO1K,EAAe,YAATA,EAAqBhD,EAAK4C,QAAU5C,GACzF,IAAKguB,EAAe9qB,OAClB,OAGFspB,EAAWxiB,IACTA,MAAAA,GAAAA,EAAQhH,GAAMG,QAAQ6qB,EAAuB,GAE/CpB,GAAe,EAChB,MACCC,EAAWza,QAAUkZ,GACrBkB,OAAW9gB,EAEd,CAAC,MAAO1D,GAAG,IAAAkmB,EACV1B,OAAW9gB,GACXmK,EAASgY,EAAa7lB,IACpBkmB,OAAAA,EAAAlmB,EAAE7I,eAAF+uB,EAAAA,EAAYluB,KAAK0V,UAAWlU,EAAgBwG,GAC1C1G,GAAc,EACnB,GACA,CAACsB,EAAS8K,IAab,OAXAI,EAAU,KACJwe,GAAa9tB,EAAIa,SAASR,QAAQkC,eAAiBiQ,GACrD6b,EAAWza,QAAUkZ,GACrBkB,OAAW9gB,GACX0hB,KACU5uB,EAAIa,SAASR,QAAQkC,gBAC/B8rB,EAAWza,QAAUkZ,GACrBkB,OAAW9gB,GACZ,EACA,CAACgC,EAAO5M,EAAOkQ,IAEX,CACLtR,QACAouB,YACAV,eACAD,eACAze,UACAie,cACAM,kBACArqB,UACAsqB,aACA9S,eC/XJ9Q,GAAA,CAAA,SA8DM6kB,GAAiC,CACrCtvB,QAAS,CAAE,eAAgB,0BAC3BqX,OAAQ,QAGJkY,GAAaA,CACjBxrB,EAAmBsoB,GACnBrc,GAAS,EACTwf,EAA2B,YAE3B,MAAMzH,UAAEA,GAAcH,MAChBmE,eAAEA,GAAmB1D,MACrB7X,KAAEA,EAAIiB,kBAAEA,GAAsBqC,EAClC9B,GACC+B,GAAMA,EAAElF,MAAM2B,MAEXwG,EAAWL,GAAoBjH,GAAsBS,SACrD8G,EAAgBnD,EACpBlD,GACCmD,GAAMA,EAAElF,MAAMa,GAAsBS,UAGjCsf,EAAY3rB,EACA,WAAhB0rB,EACIzrB,EACA,CACEuoB,QAASvoB,EAAQuoB,QAAQ5kB,OAAQwW,GAAMA,EAAEgP,QACzCX,OAAQ,GACRC,QAAS,OAMbrrB,KAAMuuB,EACN7uB,MAAO8uB,EACP9f,QAAS+f,GAEXC,GACE9c,GAAwB,CAC1B/S,QAAS,CAAE,eAAgB,0BAC3BqX,OAAQ,OACRhV,IAAK,wBAIHlB,KAAM2uB,EAAajvB,MAAOkvB,EAAkBlgB,QAASmgB,GACvDC,GACEld,GAA4B,CAAEsE,OAAQ,OAAQhV,IAAK,qBAE9CxB,MAAOqvB,EAAUrgB,QAASsgB,GAAcC,GAC/Crd,GAAYxH,EACVlJ,CAAAA,IAAK,iBACFitB,OAGEzuB,MAAOwvB,EAAcxgB,QAASygB,GAAkBC,GACvDxd,GAAa,CACX1Q,IAAK,uCACLgV,OAAQ,WAIRxW,MAAO2vB,EAAmB3gB,QAAS4gB,GACrCC,GACE3d,GAAYxH,EAAA,CACdlJ,IAAK,2BACFitB,KAyGCqB,EAAyBrhB,EAC7B,IAAMogB,MAAAA,OAAAA,EAAAA,EAAgBhoB,OAAQkpB,GAAMA,EAAEC,QAAUD,EAAEE,aAClD,CAACpB,IAGG7uB,EACJ8uB,GACAI,GACAG,GACAG,GACAG,EAEI3gB,EACJ+f,GACAI,GACAG,GACAG,GACAG,EA+BF,OA7BAxhB,EAAU,KAAK,IAAAtO,EACbqW,EAAc,MAALnW,GAAe,OAAVF,EAALE,EAAOP,WAAc,OAANK,EAAfA,EAAiBQ,WAAI,EAArBR,EAAuBkW,QAAShH,EAAO,EAC/C,CAAChP,EAAOgP,IAEXZ,EAAU,KAENwC,GACsB,MAAtBkf,GAAAA,EAAwBtsB,SACvBssB,EAAuB/oB,KACrBgpB,GAAMA,EAAEnf,oBAAsBA,IAGjCsa,EAAe,KAChB,EACA,CAAC4E,IAEJ1hB,EAAU,KACR,MAAM6F,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAM/B,OALKhF,GAAUyf,MAAAA,GAAAA,EAAWprB,OACxBwrB,EAAoB,CAAE1uB,KAAM,CAAEsuB,aAAaza,WAClChF,GACT6f,EAAoB,CAAE1uB,KAAM,CAAEsuB,UAAW,IAAMza,WAE1C,KACLF,EAAgBK,OAClB,CAAA,EACC,CAACpR,EAASiM,IAEbzE,GACEwlB,gBA7DsBrwB,MACtBS,EACA6T,KAEA,IAEE,aADMub,EAAa,CAAEpvB,OAAM6T,YACpB,CACR,CAAC,MAAAgc,GACA,OACD,CAAA,GAqDDC,WAtHiBvwB,MACjBuiB,GAAe,EACfX,EAAyD,CAAE,EAC3D4O,EAA4CzB,EAC5C0B,GAAa,EACbnc,EACAoc,KAEA,IACE,MAAMpxB,EAAOuL,EAAQ+jB,CAAAA,EAAAA,GAAWtvB,QAAO,CAAE,YAAa0E,OAEhD8b,MAAEA,GAAQhQ,MAAAA,OAAAA,EAAAA,EAAMgQ,QAAyB8B,EAAf+O,EAAU5kB,EAAK6V,EAAM7X,IAE/C8Y,EAAa,CACjB,CAAEC,UAAWvD,GAAuBO,MAAOiD,WAAYjD,MACpDxhB,OAAOgF,QAAQqtB,GACf3pB,OAAO,EAAI+b,CAAAA,KAAgBA,GAC3Blf,IAAI,EAAE+sB,EAAG7N,MAAW,CACnBD,UAAWvD,GAAuBqR,GAClC7N,iBAIAH,EAAgB,WAAW4N,EAC9B3sB,IAAK2Z,GAAM,GAAGA,EAAE/Z,QAAQ+Z,EAAE1Z,MAC1BqZ,KAAK,OAER,GAAIrN,GAAQ2gB,EAQV,aAPMT,EAAsB,CAC1BvvB,KAAIoK,EAAA,CAAIxH,QAASmtB,GAAmB3N,MAAAA,GAAAA,EAAYlf,QAAU+sB,EAAgC,CAAC7N,cAAc,CAAE,GAC3GvjB,UACAgV,iBAEI+S,EAAU/S,GAET,CAAE7Q,KAAM,SAAU9B,IAAKihB,GAGhC,MAAMhd,EAAU,CACdgd,gBACAC,aACA9R,oBACAwR,eACAlf,QAASmtB,GAGX7qB,EAAQ,CAAEK,MAAO,MAAO6qB,IAAKjrB,IAE7B,MAAMnF,KAAEA,SAAeivB,EAAS,CAAEjvB,KAAMmF,EAAStG,UAASgV,WAE1D,MAAO,CAAE7Q,KAAM,UAAW9B,IAAKlB,EAAKyiB,eACrC,CAAC,MAAAtL,GAAM,CAER,OAAO,MAkEPkZ,eA7IqB9wB,MACrB0P,EACAqhB,EACAzc,KAEA,IACE,MAAM7T,KAAEA,SAAe8uB,EAAiB,CACtC9uB,KAAIoK,EAAA,CACFkG,kBAAmBggB,GAA2BhgB,GAC1CzB,EACA,CAAEjM,QAAS,IACX,CAAE0rB,UAAWrf,EAAS,CAACA,GAAUqf,IAEvCzvB,QAAOuL,EACD,CAAA,EAACyE,EAAwD,CAAE,EAAjD,CAAE,eAAgB,2BAElCgF,WAEF,OAAO7T,CACR,CAAC,MAAAqX,GAAM,GA2HRkZ,kBA1JwBhxB,MACxBixB,EACA3c,KAEA,UACQ6a,EAAoB,CACxB1uB,KAAM,CAAEsuB,UAAWzf,EAAS,GAAK2hB,GAAkBlC,GACnDza,UAEH,CAAC,MAAAmD,GAAM,GAkJR2X,cACAE,qBACAJ,wBACAF,eAAgBiB,EAChBiB,mBAAoBnC,MAAAA,IAAAA,EAAWprB,SAC5B4S,EAAa,ECpSpBxM,GAAA,CAAA,aA4JMonB,GAAmBA,KAAKC,IAAAA,EAAAC,EAC5B,MAAMlK,EAAa/T,EACjB9B,GACC+B,KAAQA,EAAElF,MAAM2B,KAAKA,OAElB2X,SAAEA,GAAaP,KACf5Q,EAAWL,GAAoBjH,GAAsBK,eACrDkH,EAAgBnD,EACpBlD,GACCmD,GAAMA,EAAElF,MAAMa,GAAsBK,iBAEjC8J,aAAEA,GAAiBF,KACnBuH,EAAepN,EACnB9I,GACC+I,IAAC,IAAA8E,EAAA,OAAoB,OAApBA,EAAK9E,EAAElF,MAAM/D,cAAO,EAAf+N,EAAiB/M,QAEpBqV,EAAcrN,EAClB9I,GACC+I,QAACgF,EAAA,OAAoB,OAApBA,EAAKhF,EAAElF,MAAM/D,cAAO,EAAfiO,EAAiBhN,OAEpBJ,EAAamI,EACjB9I,GACC+I,IAAC6F,IAAAA,EAAAA,OAAoB,OAApBA,EAAK7F,EAAElF,MAAM/D,cAAO,EAAf8O,EAAiBjO,aAELmI,EACnB9I,GACC+I,IAAC4G,IAAAA,EAAAA,OAAoBA,OAApBA,EAAK5G,EAAElF,MAAM/D,iBAAO6P,EAAfA,EAAiB7O,cAAjB6O,EAAwBG,eAGjC,MAAMmW,WACJA,EACAphB,QAASmiB,EACTnxB,MAAOoxB,GACL1C,KAEE2C,GACgB,OAApBJ,EAAC5Q,MAAAA,OAAAA,EAAAA,EAAc/a,OAAK2rB,EAAI,IAAwB,OAAvBC,EAAgB,MAAX5Q,OAAW,EAAXA,EAAahb,OAAK4rB,EAAI,KAIlDliB,QAASsiB,EACTtxB,MAAOuxB,GAETC,GACEtf,GAA4C,CAC9C1Q,IAAK,+BACLgV,OAAQ,OACRrX,QAAS,CAAE,eAAgB,8BAIzB6P,QAASyiB,EAA6BzxB,MAAO0xB,GAC/CC,GACEzf,GAAuC,CACzC1Q,IAAK,6BACLgV,OAAQ,OACRrX,QAAS,CAAE,eAAgB,8BAKzB6P,QAAS4iB,EACT5xB,MAAO6xB,GAETC,GACE5f,GAAyC,CAC3C1Q,IAAK,oCACLgV,OAAQ,WAINxH,QAAS+iB,EAA6B/xB,MAAOgyB,GAC/CC,GACE/f,GAAuB,CAAE1Q,IAAK,sBAAuBgV,OAAQ,WAI7DxH,QAASkjB,EACTlyB,MAAOmyB,GAETC,GACElgB,GAA2D,CAC7D1Q,IAAK,+BACLgV,OAAQ,WAINxH,QAASqjB,EAA4BryB,MAAOsyB,GAC9CC,GACErgB,GAA2D,CAC7D1Q,IAAK,6BACLgV,OAAQ,SAqUJgc,EACJX,GACAN,GACAY,GACAG,GACAN,GACAN,EAEI1iB,EACJ4iB,GACAN,GACAY,GACAG,GACAN,GACAN,GACAN,EASF,OAPA/iB,EAAU,KAAKqkB,IAAAA,EACbtc,GACW,MAATqc,GAAmB,OAAVC,EAATD,EAAW/yB,WAAXgzB,OAAmBA,EAAnBA,EAAqBnyB,WAArBmyB,EAAAA,EAA2Bzc,WAAWob,MAAAA,OAAAA,EAAAA,EAAcpb,SACpDhH,IAED,CAACwjB,EAAWxjB,IAEftE,EAASwE,CAAAA,cAlVarP,MACpB8f,EACAvT,EACA0T,EACA4S,EACAve,KAMA,IACE,IAAKrJ,EACH,MAAU,IAAA6nB,MAAM,iBAElB,MAAMC,EAAc,CAACvS,EAAcC,GAAazZ,OAC9Cgc,SAEIgQ,EAAiBD,EAAY/rB,OAAQgR,GAAiB,YAAXA,EAAEvU,MAC7CwvB,EAAgBF,EAAY/rB,OAAQgR,GAAiB,WAAXA,EAAEvU,MAC5CyvB,EAAiBH,EAAY/rB,OAAQgR,GACzC,CAAC,UAAW,SAASpW,SAASoW,EAAEvU,OAGlC,IACI0vB,EADAC,EAAkC,KAGtC,MAAMC,EAAuBroB,GAC1BuB,EAAW5I,OAKR4I,EAAW1I,IAAI,EAAG+d,UAAUld,IAACmG,EAC1B+W,CAAAA,EAAAA,EACHjJ,CAAAA,OAAQ3N,EAAQtG,IAAM3G,EAAOqnB,QAC7BnF,MAAOvb,OAAIyH,EAAY8T,EACvBH,MAAOpb,OAAIyH,EAAY2T,KARvB9U,EAAQnH,IAAI,CAAC8U,EAAQjU,IAACmG,EAAA,CACtB8N,UACIjU,EAAI,CAAA,EAAK,CAAEub,QAAOH,WAStBwT,EAAsC,CAC1CC,eAAgBP,EAAenvB,IAAKmU,IAAC,CACnCzL,WAAY8mB,GAAqB,MAADrb,OAAC,EAADA,EAAGhN,UAAW,IAC9C4N,MAAO,CACLC,SAAU,MAADb,OAAC,EAADA,EAAGa,UAAW,GACvBxM,aAAa2L,MAAAA,OAAAA,EAAAA,EAAG3L,cAAe,GAC/BD,WAAW4L,MAAAA,OAAAA,EAAAA,EAAG5L,WAAY,IAAIvI,IAC5B,EAAG6D,YAAWhB,gBAAeC,cAAaoG,oBAAe,CACvD+L,QAAS,CAAEpS,gBAAegB,YAAWf,eACrCoG,eAAgBA,GAAiB,IAAIlJ,IAAK2vB,GAAY3oB,EAAA,CAAA,EACjD2oB,EAAY,CACf9rB,kBAINwE,WAAY,MAAD8L,OAAC,EAADA,EAAG9L,YAAalO,EAAUy1B,IAEvCnnB,iBAAkB,MAAD0L,OAAC,EAADA,EAAG1L,iBAAkB,IAAIzI,IACxC4R,GAAkB1J,EAAA0J,EAAA1L,KAEpBqD,sBAAuB4K,EAAE5K,uBAAyB,GAClDI,aAAcwK,EAAExK,gBAElBtH,cAAeD,KAGXY,EAAWysB,EAAcC,eAAe7e,QAASgf,GACrDA,EAAG9a,MAAMxM,SAASsI,QAASjN,GAAMA,EAAEsF,gBAG/B4mB,EAAoC,CACxCJ,eAAgBN,EAAcpvB,IAAKmU,IAAO,CACxCa,QAASb,EAAEa,QACX3M,UAAW8L,EAAE9L,UACbK,aAAc,MAADyL,OAAC,EAADA,EAAGhN,UAAW,IAAInH,IAAI,MAASic,WAC5C1T,iBAAW4L,SAAAA,EAAG5L,WAAY,IAAIvI,IAC5B,EAAG6D,YAAWhB,gBAAeC,cAAaoG,oBAAqB,CAC7D+L,QAAS,CAAEpS,gBAAegB,YAAWf,eACrCoG,eAAgBA,GAAiB,IAAIlJ,IAAK2vB,GAAY3oB,EAAA,CAAA,EACjD2oB,EAAY,CACf9rB,kBAINksB,cAAe5b,EAAE3L,gBAIfwnB,EAAgD,CACpDC,oCAAqCZ,EAAervB,IAAKmU,IAAO,CAC9D8H,QACA8G,cAAe5O,EAAE4O,cACjBD,WAAY3O,EAAE2O,WACdrhB,aAAc0S,EAAE9L,UAChB6nB,WAAY/b,EAAEtR,cACdstB,WAAYhc,EAAErR,YACdgS,OAAQX,EAAEhN,QAAS,GACnBipB,eAAgBjc,EAAE6O,WAAa,OAC/BqN,UAAWjpB,EAAWqT,kBAIpB6V,EAA4C,CAChDC,mBAAoBlB,EAAexe,QAASsD,IACzCA,EAAEhN,SAAW,IAAInH,IAAK8U,IAAM,CAC3BiO,cAAe5O,EAAE4O,cACjBD,WAAY3O,EAAE2O,WACdza,UAAW8L,EAAE9L,UACb6nB,WAAY/b,EAAEtR,cACdstB,WAAYhc,EAAErR,YACdgS,SACAlV,KAAMuU,EAAE6O,WAAa,OACrBqN,UAAWjpB,EAAWqT,mBAK5B,GAAI6I,EAAY,CACd,IAAIkN,EAA0C,CAAEhxB,QAAS,IAEzD,GAAI2vB,EAAervB,OAAQ,CACzB,MAAMlD,KAAEA,SAAeqxB,EAA0B,CAC/CrxB,KAAM6yB,EACNhf,WAEF+f,EAAgB5zB,EAEhB0yB,EAAe1yB,EAAK4C,QAAQQ,IAAI,EAAGC,UACjCL,KAAM,UACNK,GAAIuC,SAASvC,EAAI,OAGnB,MAAMgD,EAAYutB,EAAchxB,QAAQqR,QAAS8I,GAC/CA,EAAE8W,cAAc5f,QAAS6f,GAAOA,EAAGxnB,gBAIrC,GAIQ,IAHNimB,EAAezvB,OACb,CAACsX,GAAcpV,WAAYoV,GAAcpV,GAAS,GAClD,GAGF,MAAO,CACL+uB,SAAU,UACVpB,SAAUxsB,GAAYC,EAAUC,GAChCqsB,gBAIJ,GAAIN,EAAmB,CAAA4B,IAAAA,EACrB,MAAM70B,QAAiB2wB,GACrB,EAAK1lB,EAAA,CAEHiV,QAAOG,UAAqBwU,MAAVloB,GAAe,OAALkoB,EAAVloB,EAAa,SAAE,EAAfkoB,EAAiB7S,SAAU,CAAE,GACjDuR,GACA,EACA7e,GAKF,OAFA6E,IAEKvZ,EAQE,CACL40B,SAAU,UACVpB,SAAUxsB,GAAYC,EAAUC,GAChCqsB,gBAVO,CACLqB,SAAU,WACVpB,SAAU,GACVD,eASL,CACF,CAED,GAAID,EAAevvB,OAAQ,CACzB,MAAMlD,KAAEA,SAAe2xB,EAA0B,CAC/C3xB,KAAM0zB,EACN70B,QAAS,CACP,YAAa0E,IACb,eAAgB,0BAElBsQ,WAEF,GAAIue,EAWF,OAVAM,EAAe1yB,EAAKoD,IAAKC,IAAE,CAAQL,KAAM,UAAWK,cAC9CysB,GACJ,EACAhkB,EAAW,GAAGqV,OACduR,GACA,EACA7e,GAGF6E,IACO,CAAEqb,SAAU,UAAWpB,SAAU,GAAID,eAE/C,CAED,GAAIF,EAActvB,eACV+uB,EAAyB,CAC7BjyB,KAAMkzB,EACNr0B,QAAS,CAAE,YAAa0E,KACxBsQ,WAGEue,GAAmB,CACrB,MAAMpyB,KAAEA,SAhUlBxB,EAAIsf,IAAiB,kBAAiB1T,EACpChM,CAAAA,OAAQ,CAAEukB,MAAO,EAAGqK,aAAc,CAAC,iBAFdxG,IAiVb,OAdAkM,EAAe1yB,EAAKoD,IAAK2Z,IAAO,CAC9B/Z,KAAM,SACNK,GAAI0Z,EAAEzZ,qBAGFwsB,GACJ,EACAhkB,EAAW,GAAGqV,OACduR,GACA,EACA7e,GAGF6E,IACO,CAAEqb,SAAU,UAAWpB,SAAU,GAAID,eAC7C,CAGH,MAAMrsB,EAAYutB,EAAchxB,QAAQqR,QAAS8I,GAC/CA,EAAE8W,cAAc5f,QAAS6f,GAAOA,EAAGxnB,gBAGrCqmB,EAAWxsB,GAAYC,EAAUC,EAClC,KAAM,CACL,IAAIvF,EAAQ,KAEZ,GAAIyxB,EAAervB,OAAQ,CACzB,MAAMlD,KAAEA,SAAekxB,EAA4B,CACjDlxB,KAAIoK,EAAA,GAAOyoB,EAAa,CAAEoB,gBAAgB,IAC1CpgB,WAGF6e,EAAe1yB,EAAK4C,QAAQQ,IAAI,EAAGC,SAAI,CACrCA,GAAIuC,SAASvC,EAAI,IACjBL,KAAM,aAMR,MAAMqD,EAAYrG,EAAK4C,QAAQqR,QAAS8I,GACtCA,EAAE8W,cAAc5f,QAAS6f,GAAOA,EAAGxnB,gBAErCqmB,EAAWxsB,GAAYC,EAAUC,GAEjCvF,EAAQd,EAAKc,MACbtC,EAAIa,SAASR,QAAQkC,cAAgB,UAAUf,EAAKc,OACrD,CAED,GAAI2xB,EAAevvB,OACjB,GAAKpC,QAYG6wB,EAA0B,CAC9B3xB,KAAM0zB,EACN70B,QAAS,CAAE,YAAa0E,KACxBsQ,eAfQ,CACV,MAAM7T,KAAEA,SAAewxB,EAA4B,CACjDxxB,KAAMozB,EACNv0B,QAAS,CACP,eAAgB,yBAChB,YAAa0E,KAEfsQ,WAEF/S,EAAQd,EAAKc,MAAMA,MACnBtC,EAAIa,SAASR,QAAQkC,cAAgB,UAAUf,EAAKc,MAAMA,OAC3D,CASH,GAAI0xB,EAActvB,OAChB,GAAKpC,QASGmxB,EAAyB,CAC7BjyB,KAAMkzB,EACNr0B,QAAS,CAAE,YAAa0E,KACxBsQ,eAZQ,CACV,MAAM7T,KAAEA,SAAe8xB,EAA2B,CAChD9xB,KAAIoK,EAAA,CAAA,EAAO8oB,EAAY,CAAEe,gBAAgB,IACzCp1B,QAAS,CAAE,YAAa0E,KACxBsQ,WAEF/S,EAAQd,EAAKc,MACbtC,EAAIa,SAASR,QAAQkC,cAAgB,UAAUf,EAAKc,OACrD,OASGkmB,EAASlmB,EAChB,CAGD,OADA4X,IACO,CACLqb,SAAUhD,EAA4B,OAAS,UAC/C4B,SAAUA,GAAY,GACtBD,eAEH,CAAC,MAAA1b,GACA,MAAO,CAAE+c,SAAU,GAAIpB,SAAU,GAClC,IA2BwB7c,EAAa,ECnkBpCoe,GAAYxZ,IAChB,OAAO1a,KAAEA,EAAO,GAAE0O,QAAEA,IAAagD,GAAqB,CACpDxQ,IAAK,iBAAiBwZ,IACtB7b,QAAS,CAAE,uBAAwB,OACnCqX,OAAQ,QAGV,MAAO,CACLlW,KAAMA,EAAKuG,OAAO,EAAG4f,mBACnB,CAAC,MAAO,QAAQhlB,SAASglB,IAE3BzX,YClBJylB,EAAK3N,OAAO4N,UAAY,GAOxB,MACMC,GAAkB,GAIlBC,GAAoBtX,IACxB,MAAOnC,EAAU0Z,GAAeC,EAAOxX,EAAKhc,MAAM,KAAK,IAAIA,MAAM,OACjE,OAAKuzB,EAGE,CAAC1Z,KAAaA,EAAS7Z,MAAM,SAAUuzB,GAFrC,CAAC1Z,KAAaA,EAAS7Z,MAAM,SAEmB,EAOrDyzB,GACJA,CAACC,EAAkDC,KACjD,MAAMtgB,KAAEA,EAAID,QAAEA,GAAYsgB,EACpBE,EAPUD,IAA0BtgB,GAC5CigB,GAAiBjgB,EAAK7M,eACnBf,KAAKouB,GAAQA,EAAKC,WAAWH,IAKTG,CAAWH,GAC1BngB,EAA2CkgB,EAAkClgB,SACnF,OAAOogB,EAAavgB,KAClBG,MAAAA,OAAAA,EAAAA,EAAU/N,KAAKO,GAAK4tB,EAAa5tB,EAAEqN,SACnCD,EAAQ3N,KAAK8B,GAAKisB,EAAOjsB,EAAEf,eAAestB,WAAWH,GAAa,EAwDlEI,GAAsBJ,IAC1B,MAAMtkB,EAAWsC,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAM2B,KAAKgB,UAC9D2kB,EAAeL,EAAazxB,QAlFV,GAmFlBlD,KAAEA,GAASqa,KAEX4a,EAAO9mB,EACX,IACEnO,EACE,IAAIm0B,EACFn0B,EAAKoD,IAAKwP,IAAO,OACf0B,SAvFY0I,EAuFYpK,EAAEyB,KAvFGmgB,EAAOxX,EAAKhc,MAAM,KAAK,GAAGk0B,SAwFvD9gB,QAASxB,EAAEwB,QAAQhR,IAAIoxB,GACvBngB,KAAMigB,GAAiB1hB,EAAEyB,MACzB8gB,SAAUX,EAAO5hB,EAAEyB,MACnBG,SAAU5B,EAAE4B,SAASpR,IAAK4D,IAAC,CACzBoN,QAASpN,EAAEoN,QAAQhR,IAAIoxB,GACvBngB,KAAMigB,GAAiBttB,EAAEqN,MACzB8gB,SAAUX,EAAOxtB,EAAEqN,UA9FT2I,KAgGZ,GACF,CACEoY,cAAc,EACdxlB,KAAM,CACJ,CAAEyE,KAAM,UAAWghB,OAAQ,IAC3B,CAAEhhB,KAAM,WAAYghB,OAAQ,IAC5B,CAAEhhB,KAAM,OAAQghB,OAAQ,IACxB,CAAEhhB,KAAM,UAAWghB,OAAQ,IAC3B,CAAEhhB,KAAM,gBAAiBghB,OAAQ,IACjC,CAAEhhB,KAAM,oBAAqBghB,OAAQ,IACrC,CAAEhhB,KAAM,mBAAoBghB,OAAQ,YAGtC3pB,EACR,CAAC1L,IAGGs1B,EAAWnnB,EAAgC,KAC/C,IAAK6mB,IAAiBC,GAAa,MAAJj1B,IAAAA,EAAMkD,OACnC,MAAO,GAET,MAAMqyB,EAAyBf,EAAOG,GAAcO,OAAO1tB,cAC3D,OAAOytB,EACJO,OAAOD,GACPnyB,IAAKqyB,IACJ,MAAMthB,EAAOnU,EAAMy1B,EAAWC,UAEHC,IAAAA,EAA3B,IAAKxhB,EAAKK,SAAStR,OACjB,OAAAkH,EAAA,CAAA,EACK+J,EACHuhB,CAAAA,SAAUD,EAAWC,SACrBE,MAAOH,EAAWG,MAClB5a,aAA+B,OAAnB2a,EAAExhB,EAAK6G,cAAY2a,EAAI,IAIvC,MAaMnhB,EAbe,IAAI2f,EACvBhgB,EAAKK,SAASpR,IAAK4D,IAAO,CACxBsN,QAASmhB,EAAW5uB,KAAKyN,QACzBF,QAASpN,EAAEoN,QAAQhR,IAAIoxB,GACvBngB,KAAMigB,GAAiBttB,EAAEqN,MACzB8gB,SAAUX,EAAOxtB,EAAEqN,SAErB,CACE+gB,cAAc,EACdxlB,KAAM,CAAC,OAAQ,UAAW,WAAY,aAKvC4lB,OAAOD,GACP1tB,KA3HUguB,EAAC/mB,EAA8B6lB,IAClD,CAACpsB,EAAWgP,KACV,MAAMue,EAAYhnB,EAAUvG,EAAEmtB,UACxBK,EAAYjnB,EAAUyI,EAAEme,UAI9B,OAFGjB,GAAuBsB,EAAWpB,IAClCF,GAAuBqB,EAAWnB,KAKjCpsB,EAAEqtB,MAASvB,IAAmB9c,EAAEqe,MAASvB,GACpC9rB,EAAEqtB,MAASre,EAAEqe,MAEGG,EAAU/a,aAAe8a,EAAU9a,cAGnDzS,EAAEqtB,MAASre,EAAEqe,MAGfI,EAuGKH,CAAa1hB,EAAKK,SAAU+gB,IACjCnyB,IAAK6yB,GAAkB9hB,EAAKK,SAASyhB,EAAcP,WAEtD,OAAAtrB,EAAA,CAAA,EACK+J,EAAI,CACPuhB,SAAUD,EAAWC,SACrBE,MAAOH,EAAWG,MAClB5a,aAAclX,KAAK8a,OAAOpK,EAASpR,IAAI,EAAG4X,kBAAmBA,IAC7DxG,YAEJ,GACC3M,KA/GYquB,EAACvB,EAAsBtkB,IACxC,CAAC9H,EAAkCgP,KACjC,MAAM4e,GACH1B,GAAuBld,EAAGod,IAC1BF,GAAuBlsB,EAAGosB,GAC7B,GAAMwB,EACJ,OAAOA,EAGT,GAAI5tB,EAAEqtB,MAASvB,IAAmB9c,EAAEqe,MAASvB,GAC3C,OAAO9rB,EAAEqtB,MAASre,EAAEqe,MAEtB,MAAMI,EAAmBze,EAAEyD,aAAgBzS,EAAEyS,aAG7C,GAAMgb,EACJ,OAAOA,EAET,MAAM1b,EAAoBvY,EAAsBsO,GAC1C+lB,EAAezvB,GAAmB2T,EAAmB/R,EAAE9G,MAC3DkF,GAAmB2T,EAAmB/C,EAAE9V,MAE1C,OAAK20B,GAAiBJ,EAKfI,EAJE7tB,EAAEqtB,MAASre,EAAEqe,KAIfQ,EAoFCF,CAAWX,EAAwBllB,IACxCO,MAAM,EAAG,EAAC,EACZ,CAACqkB,EAAMD,GAAgBL,IAE1B,MAAO,CACLW,WACAN,qBCjLQqB,IAAZ,SAAYA,GACVA,EAAA,QAAA,UACAA,EAAA,cAAA,eACD,CAHD,CAAYA,KAAAA,GAGX,CAAA,IAwBD,MAEMC,GAAqBA,KACzB,OAAOt2B,KAAEA,EAAI0O,QAAEA,EAAOhP,MAAEA,EAAKP,SAAEA,GAAYo3B,GAAiB3kB,GAE1D,CACA1Q,IAAK,YACLgV,OAAQ,MACRrX,QAAS,CAAE2c,OAAQ,4BAIfgb,EAAQ1yB,KAAKC,SAFE5E,MAAAA,OAAAA,EAAAA,EAAUN,QAAQ,wBAAyB,GAV3C,IAYmC,EAkDxD,MAAO,CACLmB,OACAN,QACA+2B,aAlCmBl3B,MACnBm3B,EACAC,EACA9iB,KAEA,IACE,MAAM+iB,EAAqB,MAAJ52B,OAAI,EAAJA,EAAM+a,KAAMzS,GAAMA,EAAEouB,YAAcA,GAInDx1B,EAAM,aAAaw1B,WADvBC,IAA4B,MAAdC,GAAAA,EAAgB1f,SAAW,UAAY,cAG/ClX,KAAM62B,SAAsBr4B,EAAIsf,IAAI5c,EAAK,CAAE2S,WACnD,OAAOgjB,CACR,CAAC,MAAO7uB,GAAG,GAqBZ8uB,cAlBoBv3B,MACpBw3B,EACAljB,KAEA,IACE,MAAQ7T,KAAMg3B,SAAuBx4B,EAAIy4B,KACvC,0BACA,CAAEC,SAAUH,GACZ,CAAEljB,WAEJ,OAAOmjB,CACR,CAAC,MAAOhvB,GAAG,GAQZmvB,qBArD2B53B,MAC3BnB,EACAg5B,EAAO,EACPvjB,KAEA,UACQ0iB,EAAc,CAClBn4B,OAAMgM,EAAA,GACDhM,EACHukB,CAAAA,MAvBa,GAwBboL,OAxBa,GAwBLqJ,IAEVvjB,UAEH,CAAC,MAAO7L,GACX,GAuCE0G,UACA8nB,UCvBEa,GAAY9K,IAChB,OAAOvsB,KAAEA,EAAIN,MAAEA,EAAKgP,QAAEA,GAAW4oB,GAAS1lB,GAA4B,CACpEsE,OAAQ,SAEJL,EAAWL,GAAoBjH,GAAsBpC,OACrD2J,EAAgBnD,EAAmBlD,GAAuBmD,SAC9D2Z,GAAAA,EAASgL,uBACL7rB,EACAkH,EAAElF,MAAMa,GAAsBpC,QA4BpC,OAPA2B,EAAU,KAAKtO,IAAAA,EACF,MAAP+sB,GAAAA,EAASgL,mBAGb1hB,EAAcrW,MAALE,GAAe,OAAVF,EAALE,EAAOP,WAAPK,OAAeA,EAAfA,EAAiBQ,WAAjBR,EAAAA,EAAuBkW,QAAShH,EAAO,EAC/C,CAAC6d,MAAAA,OAAAA,EAAAA,EAASgL,kBAAmB73B,EAAOgP,IAEvCtE,EAAA,CACEpK,OACAw3B,WA3BiBj4B,MACjBk4B,EACA5jB,KAEA,IAQE,aAPMyjB,EAAM,CACVp2B,IAAK,oBACLlB,KAAMy3B,EACN54B,QAAS,CAAE,eAAgB,oBAC3BgV,YAIH,CAAA,CAAC,MAAO7L,GACP,OACD,CAAA,GAaDtI,QACAgP,WACGoH,EAAa,EC5Gd4hB,GAAaA,KACjB,MAAM7hB,EAAWL,GACfjH,GAAsBhE,SAElBuL,EAAgBnD,EACpBlD,GACAmD,GAAKA,EAAElF,MAAMa,GAAsBhE,WAG/B7K,MAAEA,EAAKgP,QAAEA,GAAYiE,EAAmBZ,GAAgBa,GAAKA,EAAEQ,iBAC/DpT,EAAO2S,EAAmBZ,GAAgBa,GAAKA,EAAErI,SAMvD,OAJAuD,EAAU,KAAKtO,IAAAA,EACbqW,EAAc,MAALnW,GAAeF,OAAVA,EAALE,EAAOP,WAAc,OAANK,EAAfA,EAAiBQ,WAAI,EAArBR,EAAuBkW,UAAWhH,EAC7C,EAAG,CAAChP,EAAOgP,IAEXtE,EAAA,CAASpK,QAAS8V,EAAa,ECR3B6hB,GAAmBA,EAAGt0B,KAAIL,QAAsB40B,KACpD,MAAMhR,UAAEA,GAAcH,KAChB5Q,EAAWL,GAAoBjH,GAAsBW,cACrD4G,EAAgBnD,EACpBlD,GACCmD,GAAMA,EAAElF,MAAMa,GAAsBW,gBAEhC2oB,EAAeC,GAAoBvmB,GAAS,IAC5CwmB,EAAaC,GAAkBzmB,MAE7B7R,MAAOu4B,EAAevpB,QAASwpB,GAAmBC,GACzDvmB,GAAa,CAAE1Q,IAAK,YAAY8B,KAAQK,gBAAkB6S,OAAQ,WAE3DxW,MAAO04B,EAAa1pB,QAAS2pB,GAAiBC,GAAU1mB,GAC/D,CAAE1Q,IAAK,YAAY8B,KAAQK,QAAU6S,OAAQ,MAAOqiB,aAAc,WAIhE74B,MAAO84B,EAAyB9pB,QAAS+pB,GAC3CC,GACE9mB,GAAa,CACfsE,OAAQ,MACRhV,IAAK,YAAYmC,sCAGV3D,MAAOi5B,EAAYjqB,QAASkqB,GAAgBC,GAASjnB,GAAa,CACzE1Q,IAAK,WAAoB,YAAT8B,EAAqB,cAAgB,MAAMK,WAC3D6S,OAAQ,UAGDlW,KAAM84B,KAAwBlB,EAAalmB,GAASE,IAE3D,CACA1Q,IAAK,YAAY02B,sBACjB1hB,OAAQ,UAINxW,MAAOq5B,EAAiBrqB,QAASsqB,GACnCC,GACErnB,GAAa,CACf1Q,IAAK,YAAYmC,WACjB6S,OAAQ,UAINxW,MAAOw5B,EAAiBxqB,QAASyqB,GACnCC,GACExnB,GAAa,CACf1Q,IAAK,uBAAuBmC,IAC5B6S,OAAQ,aAINxW,MAAO25B,EAAgB3qB,QAAS4qB,GAClCC,GACE3nB,GAAa,CACf1Q,IAAK,mBAAmBmC,IACxB6S,OAAQ,aAINxW,MAAO85B,EAAwB9qB,QAAS+qB,GAC1CC,GACE9nB,GAAa,CACf1Q,IAAK,YAAYmC,IACjB6S,OAAQ,MACRrX,QAAS,CACP2c,OAAQ,4BAINme,EAAiB,CAAC,EAAG32B,EAAMK,GAAIqZ,KAAK,KA2KpChd,EACJu4B,GACAG,GACAO,GACAH,GACAO,GACAG,GACAG,GACAtB,GACAyB,EAEI9qB,EACJwpB,GACAG,GACAO,GACAH,GACAO,GACAG,GACAG,GACAzB,GACA4B,EAMF,OAJA3rB,EAAU,KAAKtO,IAAAA,EACbqW,QAASnW,GAAe,OAAVF,EAALE,EAAOP,WAAPK,OAAeA,EAAfA,EAAiBQ,WAAjBR,EAAAA,EAAuBkW,QAAShH,EAAO,EAC/C,CAAChP,EAAOgP,IAEXtE,EACEwvB,CAAAA,OA7Gar6B,MACbs6B,EACAC,GAAyB,EACzBjmB,KAEA,IACE,MAAM7T,EAAO,CAAE65B,cAAaC,0BAC5B,IAAIC,EAAa,IAEjB,OAAQ/2B,GACN,IAAK,UAAW,CACd,MAAQhD,KAAMg6B,EAAYr6B,OAAQs6B,SAAwBP,EAAkB,CAAE7lB,WACxEqmB,EAAmBD,GAAiB,KAAOA,EAAgB,IAC7D,CACAJ,YAAaG,EAAW9N,WAAWzqB,KACnCq4B,0BAEA95B,GAEEL,OAAEA,SAAiBs5B,EAAsB,CAC7Cj5B,KAAMk6B,EACNrmB,WAEFkmB,EAAap6B,EACb,KACD,CACD,IAAK,UAAW,CACd,MAAMA,OAAEA,SAAiBy5B,EAAsB,CAAEvlB,WACjDkmB,EAAap6B,EACb,KACD,CACD,IAAK,SAAU,CACb,MAAMA,OAAEA,SAAiB45B,EAAqB,CAC5Cv5B,OACAnB,QAAS,CAAE,YAAa0E,KACxBsQ,WAEFkmB,EAAap6B,EACb,KACD,EAIH,aAFMinB,EAAU/S,GAET,CAAElU,OAAQo6B,GAAc,KAAOA,EAAa,IACpD,CAAC,MAAO/xB,GAAG,GAkEZmyB,mBA9DyB56B,MACzB0H,EACA4M,KAEAikB,GAAiB,GACjB,IACE,MAAM93B,KAAEA,SAAexB,EAAIsf,IACzB,iBAAiB8Z,KAAc3wB,IAC/B,CACEpI,QAAS,CAAE2c,OAAQ,gCACnB+c,aAAc,OACd1kB,WAGJ,OAAO7T,CACR,CAAC,MAAOgI,GACPgwB,EAAehwB,EAChB,CAAA,QACC8vB,GAAiB,EAClB,GA4CDQ,SACAO,QACAuB,wBA3C8B76B,MAC9BS,EACA6T,KAEA,IAEE,OADA6kB,EAA8B,CAAE14B,OAAM6T,YAC/B,CACR,CAAC,MAAO7L,GACP,OAAO,CACR,GAmCDqyB,cAjLoB96B,MACpB2X,EACApL,EACAwuB,EACAR,GAAyB,EACzBjmB,KAEA,IACEikB,GAAiB,GACjB,IAAIyC,GAAU,EAEd,MAAMC,EAAcj7B,MAClBk7B,EACA5d,KAEA,IACE,MAAM7c,EAAOs6B,EAAel3B,IAAKmJ,GAASA,EAAKsQ,IACzC1d,QAAiBX,EAAIk8B,OACzB,YAAYxjB,gBAAuBujB,EAAUp3B,KAC7C,CACErD,KAAM,CAAE85B,yBAAwB3tB,MAAOnM,GACvC6T,YAGA1U,EAASQ,OAAS,KAAOR,EAASQ,QAAU,OAC9C46B,GAAU,EAEb,CAAC,MAAOvyB,GACPuyB,GAAU,CACX,GAGGI,EAAqB7uB,EAAWvF,OACnCq0B,GAASA,EAAK1iB,SAAW5a,EAAOu9B,oBAE7BC,EAAkBhvB,EAAWvF,OAChCq0B,GAASA,EAAK1iB,SAAW5a,EAAOu9B,oBAcnC,aAXMj7B,QAAQkU,IACZ6mB,EAAmBv3B,IAAI,CAACq3B,EAAW5d,IACjC2d,EAAYC,EAAW5d,WAIrBjd,QAAQkU,IACZgnB,EAAgB13B,IAAI,CAACq3B,EAAW5d,IAC9B2d,EAAYC,EAAW5d,EAAQ8d,EAAmBz3B,UAG/C,CAAEvD,OAAQ46B,EAClB,CAAC,MAAOvyB,GAEP,OADAgwB,EAAehwB,GACR,CAAErI,QAAQ,EAClB,CAAA,QACCm4B,GAAiB,EAClB,GA0HD6B,SACAb,oBACAiC,YA5MkBx7B,MAAO8f,EAAexL,KACxC,IAEE,aADMskB,EAAc,CAAEn4B,KAAM,CAAEqf,SAASxL,YAChC,CACR,CAAC,MAAO7L,GACP,QACD,IAuME8N,EAAa,iBC1PdklB,GAAkBA,EAAG9jB,WAAU+jB,UACnC,MAAMplB,EAAWL,GAAoBjH,GAAsBe,cACrDxO,EAAQ6R,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAM2B,KAAKvO,SAG7Dd,KAAMk7B,EAAUxsB,QAASysB,EAAaz7B,MAAO07B,GAC/CC,GACEzpB,GAAgC,CAClC1Q,IAAK,yBAAyB+5B,IAC9B/kB,OAAQ,OACRrX,QAAS,CAAE,eAAgB,oBAC3BmB,KAAM,CACP,KAEKgV,EAA6BsmB,GAAmB1pB,GAAuB,CAC3E1Q,IAAK,WAAWgW,WAChBhB,OAAQ,SAFHxH,QAAEA,GAAwBsG,EAAZumB,EAAUjwB,EAAA0J,EAAA1L,MAKtBoF,QAAS4H,EAAU5W,MAAEA,GAAS87B,GAAiB5pB,GAEtD,CACA1Q,IAAK,WAAWgW,WAChBhB,OAAQ,QAyDV,OAtCApI,EAAU,KACR,MAAM6F,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAU/B,OATIonB,GAAOC,MAAAA,GAAAA,EAAUp6B,MACnBw6B,EAAgB,CACdz8B,QAAS,CAAEkC,cAAe,UAAUm6B,MAAAA,OAAAA,EAAAA,EAAUp6B,SAC9C+S,YAEQonB,GAAOn6B,GACjBw6B,EAAgB,CAAEznB,WAGb,KACLF,EAAgBK,OAClB,CAAA,EACC,CAAS,MAARknB,OAAQ,EAARA,EAAUp6B,QAEdgN,EAAU,KACR,IAAKmtB,EACH,OAEF,MAAMtnB,EAAkB,IAAIC,gBAG5B,OADAynB,EAAgB,CAAExnB,OADHF,EAAgBE,SAExB,KACLF,EAAgBK,OAAK,CACvB,EACC,CAACinB,IAEJntB,EAAU,KAAK,IAAA2tB,EAAAC,EAAAl8B,EACbqW,GACkB4lB,OAAhBA,EAAAF,EAAW77B,QAAe+7B,OAAVA,EAAhBA,EAAkBt8B,WAAlBs8B,OAA0BA,EAA1BA,EAA4Bz7B,WAA5By7B,EAAAA,EAAkC/lB,WACzBgmB,MAATN,GAAmBM,OAAVA,EAATN,EAAWj8B,WAAXu8B,OAAmBA,EAAnBA,EAAqB17B,WAArB07B,EAAAA,EAA2BhmB,WACtBlW,MAALE,GAAeF,OAAVA,EAALE,EAAOP,WAAPK,OAAeA,EAAfA,EAAiBQ,WAAjBR,EAAAA,EAAuBkW,SACvBylB,GAAezsB,GAAW4H,EAAU,EAErC,CAACilB,EAAW77B,MAAO07B,EAAW17B,EAAOgP,EAASysB,EAAazsB,IAEvD,CACL6sB,aACA7sB,QAASysB,GAAezsB,GAAW4H,EACnCqlB,WAzDiBp8B,MAAOS,EAAqB6T,KAC7C,IASE,aARM2nB,EAAc,CAClBx7B,OACAnB,QAASo8B,EACL,CAAEl6B,cAAe,UAAkB,MAARm6B,OAAQ,EAARA,EAAUp6B,cACrC4K,EACJmI,WAEF3O,EAAQ,CAAEK,MAAO,cAAeq2B,YAAa57B,KAE9C,CAAA,CAAC,MAAAgX,GACA,OAAO,CACR,KC7EC6kB,GAAYh+B,OAAOC,OAAO,CAC9Bg+B,MAAO,IACP3Q,QAAS,YACTC,OAAQ,mBACRC,QAAS,0BAGL0Q,GAAaA,KACjB,MAAMlmB,EAAWL,GACfjH,GAAsBU,QAElB6G,EAAgBnD,EACpBlD,GACAmD,GAAKA,EAAElF,MAAMa,GAAsBU,UAE9BrM,EAAS4pB,GAAcjb,IA+C9B,OAAAnH,EAASgjB,CAAAA,aA7CY7tB,MAAOy8B,EAA6BnoB,KAGvD,GAFAgC,OAASnK,GAAW,IAEfswB,EAAY94B,OAGf,OAFAspB,OAAW9gB,GACXmK,OAASnK,GAAW,MAItB,MAAMuwB,EACJ,CAAE9Q,QAAS,GAAIE,QAAS,GAAID,OAAQ,GAAI0Q,MAAO,IACjDE,EAAYnsB,QAAQ,CAACqsB,EAAYj4B,IAAMg4B,EAAcC,EAAWl5B,MAAMG,KAAKc,IAE3E,IACE,MAOMk4B,SAPwBv8B,QAAQkU,IACpCkoB,EAAY54B,IAAI,EAAGC,KAAIL,UAAWxE,EAAIsf,IAAI+d,GAAU74B,GAAQK,EAAI,CAC9DwQ,SACAhV,QAAkB,YAATmE,EAAqB,CAAEwY,OAAU,+BAA6B9P,OAIzCtI,IAAKjE,GAAaA,EAASa,MAEvDguB,EAA0B,CAC9B7C,QAASgR,EAAU51B,OAAO,CAAC0a,EAAGhd,IAAMg4B,EAAc9Q,QAAQhqB,SAAS8C,IACnEonB,QAAS8Q,EAAU51B,OAAO,CAAC0a,EAAGhd,IAAMg4B,EAAc5Q,QAAQlqB,SAAS8C,IACnEmnB,OAAQ+Q,EAAU51B,OAAO,CAAC0a,EAAGhd,IAAMg4B,EAAc7Q,OAAOjqB,SAAS8C,KAQnE,OALAiB,EAAQ,CAAEK,MAAO,iBAAkB62B,eAAgBpO,IAEnDxB,EAAWwB,GACXnY,OAASnK,GAAW,IAGrB,CAAA,CAAC,MAAO1D,GAAG4lB,IAAAA,EAMV,OALA/X,EACEgY,EAAa7lB,IACD,OAAV4lB,EAAA5lB,EAAE7I,eAAQ,EAAVyuB,EAAY5tB,KAAK0V,UAAWlU,EAAgBwG,GAC1C1G,GAAc,IAEb,CACR,GAGoBsB,WAAYkT,EAAa,EC3C5CjX,GAAU,CAAE,uBAAwB,OAQpCw9B,GAAoBA,EACtB56B,OAAMiC,SAAQ44B,eAChBC,KAEA,OAAO78B,MAAEA,EAAKgP,QAAEA,EAAO1O,KAAEA,EAAO,KAAQ0R,GAA6B,CACnExQ,IAAK,sBAAsBO,KAAQiC,IACnCwS,OAAQ,MACRrX,eAGOmB,KAAMw8B,EAAU,IAAMC,GAAgB7qB,GAE7C,CACA1Q,IAAK,sBAAsBo7B,YAC3BpmB,OAAQ,MACRrX,eAGOmB,KAAM08B,EAAY,IAAMC,GAAc/qB,GAAyB,CACtE1Q,IAAK,sBAAsBo7B,eAC3BpmB,OAAQ,MACRrX,aAgBF,OAbAiP,EAAU,KACR,IAAKyuB,EACH,OAEF,MAAM5oB,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAG/B,OAFA4oB,EAAa,CAAE5oB,WACf8oB,EAAW,CAAE9oB,WACN,KACLF,EAAgBK,QAClB,EACC,CAACuoB,IAEG,CAAE78B,QAAOgP,UAAS1O,OAAMw8B,UAASE,YAAS,EC5C7CE,GAAiB31B,IACrB,MAAMuT,WAAEA,GAAeH,OAChB3a,MAAEA,EAAKgP,QAAEA,EAAO1O,KAAEA,IAAU0R,GAA2B,CAC5DxQ,IAAK,sBAAsB+F,IAC3BiP,OAAQ,QAQV,MAAO,CACLxW,QACAgP,UACA8F,iBARgBxU,SAAAA,EAAMwU,WAAY,IAAIpR,IAAKuX,GAAOvQ,EAAA,CAAA,EAC/CuQ,EACAH,EAAWG,EAAQD,aAOtBmiB,aAAkB,MAAJ78B,OAAI,EAAJA,EAAM68B,aACpBC,WAAgB,MAAJ98B,OAAI,EAAJA,EAAM88B,WAClBC,UAAe,MAAJ/8B,OAAI,EAAJA,EAAM+8B,YC9BfC,GAAiBA,KACrB,MAAMnnB,EAAWL,GACfjH,GAAsBiB,aAElBsG,EAAgBnD,EAAmBlD,GAAsBmD,GAC7DA,EAAElF,MAAMa,GAAsBiB,eAG1B9P,MAAEA,EAAKgP,QAAEA,GAAYiE,EAAmBZ,GAAgBa,GAC5DA,EAAEU,qBAEEtT,EAAO2S,EAAmBZ,GAAgBa,GAC9CA,EAAEpD,aAGEytB,QAAgBj9B,SAAAA,EAAM8C,OAAO,CACjCgpB,EACArgB,KAEAqgB,EAAIrgB,EAAUyxB,KAAOzxB,EAEdqgB,GACN,CAA0B,GAM7B,OAJAhe,EAAU,KAAK,IAAAtO,EACbqW,EAAc,MAALnW,GAAe,OAAVF,EAALE,EAAOP,eAAQ,EAAfK,EAAiBQ,KAAK0V,UAAWhH,IACzC,CAACmH,EAAUnW,EAAOgP,IAErBtE,EAAA,CAASpK,KAAMi9B,GAAkBnnB,EAAa,ECxChD,IAAIqnB,GACAC,GAUE,MAAAC,GAAYA,KAChB,MAAM1vB,EAAWgF,EAAmB9B,GAAc+B,GAAKA,EAAEjF,SAASmD,gBAC5Db,EAAa0C,EAAmB9B,GAAc+B,GAAKA,EAAElF,MAAMuD,OAAOhB,YAyCxE,MAAO,CAAEqtB,aArCYA,IACnBp4B,EAAQ,CACNK,MAAO,gBACPg4B,cAAe,CACbJ,iBACAK,UAAWJ,GACX/yB,SAAU7L,EAAIa,SAASR,QAAQS,OAAO,iBA+BrBm+B,aAvCFA,IAAM9vB,EAAS,CAAE3K,KCtBX,kBD6DU06B,iBA3BZA,CACvBC,EACAl5B,EACAy3B,KACqB0B,IAAAA,EACrBjwB,EAAS,CAAE3K,KCxCiB,qBDyC5B,MAAM66B,EAAct5B,EAAsBo5B,EAAkBl5B,GAE5D,IACGo5B,GACD5tB,GAAa,IAAItM,MAAOC,WACT,YAAfs4B,EAEA,OAAO,KAGT,MAAMsB,EACJK,EAAY74B,QACX44B,OAAAA,EAAAn5B,EAAasW,KAAMnW,GAAOA,EAAGC,eAAiB84B,SAA9CC,EAAAA,EAAiE54B,QAChE,GAKJ,OAHAm4B,GAAgBU,EAAYh5B,aAC5Bu4B,GAAkBI,EAEX,CAAEA,YAAWK,kBEjClBC,GAAsBA,KAC1B,MAAMjoB,EAAWL,GACfjH,GAAsBgB,kBAElBuG,EAAgBnD,EAAmBlD,GAAuBmD,GAC9DA,EAAElF,MAAMa,GAAsBgB,oBAE1B7P,MAAEA,EAAKgP,QAAEA,GAAYiE,EAAmBZ,GAAiBa,GAC7DA,EAAEY,0BAEExT,EAAO2S,EAAmBZ,GAAiBa,GAC/CA,EAAErD,kBAGE0tB,QAAgBj9B,SAAAA,EAAM8C,OAAO,CACjCgpB,EACAiS,KAEAjS,EAAIiS,EAAQb,KAAOa,EAEZjS,GACN,CAA+B,GAMlC,OAJAhe,EAAU,KAAK,IAAAtO,EACbqW,EAAc,MAALnW,GAAe,OAAVF,EAALE,EAAOP,WAAc,OAANK,EAAfA,EAAiBQ,WAAI,EAArBR,EAAuBkW,UAAWhH,IAC1C,CAACmH,EAAUnW,EAAOgP,IAErBtE,GAASpK,KAAMi9B,GAAkBnnB,EAAa"}