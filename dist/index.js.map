{"version":3,"file":"index.js","sources":["../src/hooks/types.ts","../src/hooks/consts.ts","../src/store/responseState/types.ts","../src/store/responseState/reducer.tsx","../src/hooks/utils.ts","../src/store/booking/types.ts","../src/store/booking/reducer.tsx","../src/store/upsell/reducer.ts","../src/store/user/reducer.ts","../src/store/rootReducer.tsx","../src/hooks/useManualApi.ts","../src/hooks/PersistContext.tsx","../src/hooks/useSetResponseState.ts","../src/hooks/useAddons.ts","../src/hooks/useBooking.ts","../src/hooks/useLocations.ts","../src/hooks/useConnection.ts","../src/hooks/usePassengersData.ts","../src/hooks/useConnectionRoute.ts","../src/hooks/useTimeTickets.ts","../src/store/user/types.ts","../src/hooks/useHeaders.ts","../src/hooks/useUser.ts","../src/hooks/useUserTickets.ts","../src/hooks/usePayment.ts","../src/hooks/useSearchLocations.ts","../src/hooks/usePaymentsHistory.tsx","../src/hooks/useTicketActions.ts","../src/hooks/useUpsell.ts","../src/hooks/useTickets.ts","../src/hooks/useLineTimetables.ts","../src/hooks/index.tsx","../src/hooks/useBookingPrice.ts","../src/hooks/useCityPairs.ts","../src/hooks/useCreateTickets.ts","../src/hooks/useCredit.ts","../src/hooks/useDepartures.ts","../src/hooks/useFlexiTickets.ts","../src/hooks/useLines.ts","../src/hooks/useSeatClasses.ts","../src/hooks/useSeats.ts","../src/hooks/useTariffs.ts","../src/hooks/useTicketReview.ts","../src/hooks/useTimetables.ts","../src/store/upsell/types.ts","../src/hooks/useVehicleStandards.ts"],"sourcesContent":["import { RouteSectionData } from './useAddons';\n\nexport type VehicleType = 'BUS' | 'TRAIN';\nexport type Currency =\n  | 'CHF'\n  | 'CZK'\n  | 'EUR'\n  | 'GBP'\n  | 'HRK'\n  | 'HUF'\n  | 'PLN'\n  | 'UAH';\n\nexport type Language = 'de-AT' | 'en' | 'cs' | 'de' | 'sk' | 'hu' | 'uk' | 'pl';\n\nexport type StationCountry =\n  | 'DE'\n  | 'BE'\n  | 'CH'\n  | 'LU'\n  | 'HR'\n  | 'IT'\n  | 'FR'\n  | 'UA'\n  | 'HU'\n  | 'AT'\n  | 'UK'\n  | 'CZ'\n  | 'SK'\n  | 'ME'\n  | 'PL'\n  | 'NL'\n  | 'BA';\n\nexport type TicketType = 'FLEXI' | 'RJ_SRO' | 'RJ_SEAT' | 'RJ_TIME';\nexport type State = 'UNPAID' | 'VALID' | 'USED' | 'CANCELED';\nexport type TicketState = State;\nexport type TicketAddonState = State | 'EXPIRED' | 'DELETED' | 'NULLIFIED';\nexport type FlexiType = 'FLEX' | 'WEEK' | 'MONTH' | 'QUARTER';\n\nexport enum Tariff {\n  Regular = 'REGULAR',\n  CzechStudentPass15 = 'CZECH_STUDENT_PASS_15',\n  CzechStudentPass26 = 'CZECH_STUDENT_PASS_26',\n  Isic = 'ISIC',\n  AttendedChild = 'ATTENDED_CHILD',\n  Disabled = 'DISABLED',\n  DisabledAttendance = 'DISABLED_ATTENDANCE',\n  Euro26 = 'EURO26',\n  Child = 'CHILD',\n  UaRefugee = 'UA_REFUGEE',\n  UaRefugeeChild = 'UA_REFUGEE_CHILD',\n  Disabled3 = 'DISABLED_3',\n  ChildUnder12 = 'CHILD_UNDER_12',\n}\n\nexport interface SeatPosition {\n  vehicleNumber: number;\n  seatIndex: number;\n}\n\nexport interface SelectedSeat extends SeatPosition {\n  sectionId: number;\n}\n\nexport interface RouteSectionDepArr {\n  sectionId: number;\n  departureStationId: number;\n  arrivalStationId: number;\n}\n\nexport interface RouteSectionFromTo {\n  sectionId: number;\n  fromStationId: number;\n  toStationId: number;\n}\n\nexport interface AddonsPassengersPayload {\n  tariffs: Tariff[];\n  routeSections: RouteSectionData[];\n}\n\nexport interface SeatSectionBasic {\n  sectionId: number;\n  fromStationId: number;\n  toStationId: number;\n}\n\nexport enum SeatClass {\n  C0 = 'C0',\n  C1 = 'C1',\n  C2 = 'C2',\n  No = 'NO',\n  Train1StClass = 'TRAIN_1ST_CLASS',\n  Train2NdClass = 'TRAIN_2ND_CLASS',\n  TrainCouchetteBusiness4 = 'TRAIN_COUCHETTE_BUSINESS_4',\n  TrainCouchetteBusiness = 'TRAIN_COUCHETTE_BUSINESS',\n  TrainCouchetteRelax = 'TRAIN_COUCHETTE_RELAX',\n  TrainCouchetteRelaxForWomen = 'TRAIN_COUCHETTE_RELAX_FOR_WOMEN',\n  TrainCouchetteStandard = 'TRAIN_COUCHETTE_STANDARD',\n  TrainLowCost = 'TRAIN_LOW_COST',\n  TrainStandardPlus = 'TRAIN_STANDARD_PLUS',\n  BusStandard = 'BUS_STANDARD',\n  BusRelax = 'BUS_RELAX',\n}\n\nexport enum PaymentType {\n  Cash = 'CASH',\n  Gift = 'GIFT',\n  Online = 'ONLINE',\n  Credit = 'CREDIT',\n  FastBank = 'FAST_BANK',\n  Transfer = 'TRANSFER',\n}\n\nexport enum VehicleKey {\n  YELLOW = 'YELLOW',\n  YELLOW_R8 = 'YELLOW_R8',\n  ECONOMY = 'ECONOMY',\n  FUN_RELAX = 'FUN_RELAX',\n  FUN_RELAX_SELF_SERVICE = 'FUN_RELAX_SELF_SERVICE',\n  FUN_RELAX_NO_STEWARD = 'FUN_RELAX_NO_STEWARD',\n  DEUTSCHE_BAHN = 'DEUTSCHE_BAHN',\n  ECONOMY_PLATFORM = 'ECONOMY_PLATFORM',\n  SAD = 'SAD',\n  WEST_BAHN = 'WEST_BAHN',\n  IDS_JMK = 'IDS_JMK',\n  OBB = 'OBB',\n  UKRAINIAN_RAILWAYS = 'UKRAINIAN_RAILWAYS',\n  GEPARD_EXPRESS = 'GEPARD_EXPRESS',\n  UNITED_BUSES = 'UNITED_BUSES',\n}\n\nexport enum PaymentMethod {\n  Account = 'ACCOUNT',\n  Cash = 'CASH',\n  Giftcertificate = 'GIFT_CERTIFICATE',\n  Gopaysporopay = 'GOPAY_SPOROPAY',\n  Gopaytatrapay = 'GOPAY_TATRAPAY',\n  Gopayunicreditsk = 'GOPAY_UNICREDIT_SK',\n  Gopayvub = 'GOPAY_VUB',\n  Gpeapplepay = 'GPE_APPLE_PAY',\n  Gpegooglepay = 'GPE_GOOGLE_PAY',\n  Gpeonlinecard = 'GPE_ONLINE_CARD',\n  Payuapplepay = 'PAYU_APPLE_PAY',\n  Payucsasservis24 = 'PAYU_CSAS_SERVIS24',\n  Payucsob = 'PAYU_CSOB',\n  Payuera = 'PAYU_ERA',\n  Payufio = 'PAYU_FIO',\n  Payugemoneybank = 'PAYU_GE_MONEY_BANK',\n  Payugiropay = 'PAYU_GIROPAY',\n  Payugooglepay = 'PAYU_GOOGLE_PAY',\n  Payuinstanttr = 'PAYU_INSTANT_TR',\n  Payukb = 'PAYU_KB',\n  Payumbankmpenize = 'PAYU_MBANK_MPENIZE',\n  Payuonlinecard = 'PAYU_ONLINE_CARD',\n  Payuraiffeisen = 'PAYU_RAIFFEISEN',\n  Payusepa = 'PAYU_SEPA',\n  Payusofort = 'PAYU_SOFORT',\n  Payusofortat = 'PAYU_SOFORT_AT',\n  Payuunicredit = 'PAYU_UNICREDIT',\n  Transfer = 'TRANSFER',\n}\n\n/**\n * Can be one number as string '5545700263'\n * or multiple numbers split by comma '5545700263,5531912020'\n */\nexport type RouteId = string;\n\n/**\n * ISO date in string format\n */\nexport type DateString = string;\n","import axios, { AxiosError, ParamsSerializerOptions } from 'axios';\nimport JsSHA from 'jssha';\nimport qs from 'qs';\nimport { Language, PaymentMethod, StationCountry } from './types';\n\nexport enum Env {\n  PROD = 'prod',\n  QA = 'qa',\n  DEV = 'dev',\n}\n\nexport const envUrls = Object.freeze({\n  [Env.PROD]: 'https://brn-ybus-pubapi.sa.cz/restapi',\n  [Env.QA]: 'https://brn-qa-ybus-pubapi.sa.cz/restapi',\n  [Env.DEV]: 'https://brn-dev-ybus-pubapi.sa.cz/restapi',\n});\n\nexport const paramsSerializer: ParamsSerializerOptions = {\n  serialize: (params) => qs.stringify(params, { indices: false }),\n};\n\nconst TIMEOUT = 30000;\n\nexport const api = axios.create({\n  baseURL: envUrls[Env.QA],\n  timeout: TIMEOUT,\n  headers: { 'Cache-Control': 'no-cache' },\n  paramsSerializer,\n  transitional: {\n    clarifyTimeoutError: true,\n  },\n});\n\nexport const resInterceptor = (onUnauthorized: () => void) =>\n  api.interceptors.response.use(\n    (response) => {\n      delete api.defaults.headers.common['X-ReCaptcha-Token'];\n      return response;\n    },\n    async (error) => {\n      if (axios.isCancel(error)) {\n        return;\n      }\n      if (error?.response?.status === 401) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\nconst bodyHashEndpoints = [\n  '/tickets/create/unregistered',\n  '/users/login/registeredAccount',\n  '/users/login/unregisteredAccount',\n  '/users/login/email',\n  '/users/signup/registeredAccount',\n  '/users/forgottenPassword/email',\n  '/tickets/timetickets/unregistered',\n];\n\nexport const getHashedData = (data: unknown, hash: string): string => {\n  const shaObj = new JsSHA('SHA3-512', 'TEXT');\n  const cleanedData = typeof data === 'string' ? data : JSON.stringify(data);\n  shaObj.setHMACKey(hash, 'TEXT');\n  shaObj.update(cleanedData);\n  return shaObj.getHMAC('HEX');\n};\n\nexport const reqInterceptor = (hash: string) =>\n  api.interceptors.request.use((req) => {\n    const token = (req.headers?.Authorization as string | undefined)?.split(\n      ' ',\n    )[1];\n\n    // @ts-expect-error workaround for hiding token hash\n    // YBUS is requiring the token hash once and doesn't want it the other time ... ¯\\_(ツ)_/¯\n    const hideTokenHash = req.hideTokenHash;\n\n    if (!req.headers) {\n      req.headers = {};\n    }\n\n    if (!req.url?.includes('const') && !hideTokenHash) {\n      if (token && !bodyHashEndpoints.includes(req.url || '')) {\n        req.headers['X-Token-Hash'] = getHashedData(token, hash);\n      } else if (req.data) {\n        req.headers['X-Body-Hash'] = getHashedData(req.data, hash);\n      }\n    }\n\n    if (hideTokenHash) {\n      // @ts-expect-error hideTokenHash\n      delete req.hideTokenHash;\n    }\n\n    req.headers.Referer = 'regiojet:///';\n    return req;\n  });\n\nexport const TIMEOUT_MESSAGE = 'alert.outage';\nexport const FAIL_MESSAGE = 'alert.fail';\nexport const NETWORK_MESSAGE = 'alert.network';\n\nexport const getErrorMessage = (error?: AxiosError | null) => {\n  if (!error) {\n    return;\n  }\n  switch (error.code) {\n    // we want to ignore canceled requests\n    case AxiosError.ERR_CANCELED:\n      return;\n    case AxiosError.ETIMEDOUT:\n    case AxiosError.ECONNABORTED:\n      return TIMEOUT_MESSAGE;\n    case AxiosError.ERR_NETWORK:\n    case 'ENOTFOUND':\n      return NETWORK_MESSAGE;\n  }\n  return FAIL_MESSAGE;\n};\n\nexport const langPriorityCountries = Object.freeze<\nRecord<Language, StationCountry[]>\n>({\n  cs: ['CZ', 'SK'],\n  de: ['DE', 'AT', 'CZ'],\n  'de-AT': ['AT', 'DE', 'CZ'],\n  en: ['UK', 'BE', 'NL', 'LU', 'DE'],\n  hu: ['HU', 'SK', 'AT'],\n  pl: ['PL', 'CZ', 'SK', 'UA'],\n  sk: ['SK', 'CZ', 'AT'],\n  uk: ['UA', 'CZ', 'PL', 'SK', 'HU'],\n});\n\nexport const unusablePaymentMethods = [\n  PaymentMethod.Cash,\n  PaymentMethod.Transfer,\n  PaymentMethod.Giftcertificate,\n];\n","export const SET_RESPONSE_STATE = 'SET_RESPONSE_STATE';\n\nexport enum ResponseStateCategory {\n  addons,\n  connection,\n  connectionRoute,\n  createTickets,\n  credit,\n  locations,\n  passengersData,\n  payment,\n  seats,\n  tariffs,\n  ticket,\n  ticketAction,\n  user,\n  userTickets,\n  useTicketsType,\n  ticketReview,\n  seatClasses,\n  vehicleStandards,\n}\nexport interface ErrorFields  {\n  description?: string\n  key?: string\n  value?: string\n}\nexport interface ResponseState {\n  error?: {\n    message?: string;\n    errorFields?: ErrorFields[]\n  };\n  loading: boolean;\n}\nexport interface ResponseStatePayload extends ResponseState {\n  type?: ResponseStateCategory;\n}\n\ninterface SetResponseStateAction {\n  type: typeof SET_RESPONSE_STATE;\n  payload: ResponseStatePayload;\n}\n\nexport type ResponseStateReducerProps = {\n  [key in ResponseStateCategory]: ResponseState;\n};\n\nexport type ResponseStateActions = SetResponseStateAction;\n","import React, { Dispatch, FC, ReactNode, useEffect, useMemo } from 'react';\nimport equal from 'fast-deep-equal';\nimport type { Draft } from 'immer';\nimport { createContext } from 'use-context-selector';\nimport { useImmerReducer } from 'use-immer';\nimport { PersistConfig } from '../../hooks';\nimport {\n  ResponseStateReducerProps,\n  ResponseStateActions,\n  ResponseStateCategory,\n} from './types';\n\nconst responseStateInitialState: ResponseStateReducerProps = {\n  [ResponseStateCategory.addons]: { loading: false },\n  [ResponseStateCategory.connection]: { loading: false },\n  [ResponseStateCategory.connectionRoute]: { loading: false },\n  [ResponseStateCategory.createTickets]: { loading: false },\n  [ResponseStateCategory.credit]: { loading: false },\n  [ResponseStateCategory.locations]: { loading: true },\n  [ResponseStateCategory.passengersData]: { loading: false },\n  [ResponseStateCategory.payment]: { loading: false },\n  [ResponseStateCategory.seats]: { loading: false },\n  [ResponseStateCategory.ticket]: { loading: false },\n  [ResponseStateCategory.tariffs]: { loading: true },\n  [ResponseStateCategory.ticketAction]: { loading: false },\n  [ResponseStateCategory.userTickets]: { loading: false },\n  [ResponseStateCategory.useTicketsType]: { loading: false },\n  [ResponseStateCategory.user]: { loading: false },\n  [ResponseStateCategory.ticketReview]: { loading: false },\n  [ResponseStateCategory.vehicleStandards]: { loading: false },\n  [ResponseStateCategory.seatClasses]: { loading: false },\n};\n\ninterface ResponseStateProviderType {\n  children?: ReactNode;\n  persistConfig?: PersistConfig;\n  persist?: boolean;\n}\n\ninterface ResponseStateType {\n  state: ResponseStateReducerProps;\n  dispatch: Dispatch<ResponseStateActions>;\n}\n\nexport const ResponseStateContext = createContext({} as ResponseStateType);\n\nconst responseStateReducer =\n  (draft: Draft<ResponseStateReducerProps>, action: ResponseStateActions) => {\n    switch (action.type) {\n      case 'SET_RESPONSE_STATE': {\n        const { error, loading, type } = action.payload;\n\n        if (type !== undefined) {\n          const newState = { error, loading };\n          if (!equal(draft[type], newState)) {\n            draft[type] = newState;\n          }\n        } else {\n          Object.keys(draft).forEach((s) => {\n            const newState = { error, loading };\n            if (!equal(draft[+s as ResponseStateCategory], newState)) {\n              draft[+s as ResponseStateCategory] = newState;\n            }\n          });\n        }\n        break;\n      }\n    }\n  };\n\nconst ResponseStateProvider: FC<ResponseStateProviderType> =\n  ({ children, persistConfig, persist }) => {\n    const [state, dispatch] = useImmerReducer(\n      responseStateReducer,\n      (persist && persistConfig?.getItem().responseState) || responseStateInitialState,\n    );\n\n    useEffect(() => {\n      if (!persist) {\n        return;\n      }\n      persistConfig?.setItem({ responseState: state });\n    }, [state]);\n\n    const value = useMemo(() => ({ dispatch, state }), [dispatch, state]);\n\n    return <ResponseStateContext.Provider value={value}>{children}</ResponseStateContext.Provider>;\n  };\n\nexport default ResponseStateProvider;\n","import equal from 'fast-deep-equal/es6/react';\nimport { SectionWithSeats } from '../store/booking/types';\nimport { SeatClass, SelectedSeat } from './types';\nimport { PriceClass, Section } from './useConnectionRoute';\nimport { TicketTypeId } from './usePayment';\nimport { SeatTicket, SroTicket, Tickets } from './useUserTickets';\n\nexport const basketItemsToTicketTypes = (tickets: Tickets) =>\n  Object.entries(tickets).reduce((prev, [type, ticketList]) => {\n    if (!ticketList.length) {\n      return prev;\n    }\n    prev.push(\n      ...ticketList.map(\n        ({ id, sroTicketId }:\n        Partial<Pick<SroTicket, 'sroTicketId'> & Pick<SeatTicket, 'id'>>,\n        ) =>\n          ({\n            id: id || sroTicketId,\n            type,\n          }),\n      ),\n    );\n    return prev;\n  }, [] as TicketTypeId[]);\n\nexport const createTxToken = () => {\n  let result = '';\n  let rest = '';\n  let number = new Date().valueOf();\n  const characters =\n    '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n  while (number > 1) {\n    const remainder = Math.floor(number % characters.length);\n    number /= characters.length;\n    result += characters[remainder];\n  }\n\n  for (let i = result.length; i < 8; i++) {\n    rest += '1';\n  }\n  return rest + result;\n};\n\nexport const mapFieldToUser = Object.freeze({\n  EMAIL: 'email',\n  FIRST_NAME: 'firstName',\n  SURNAME: 'surname',\n});\n\nexport const couchetteClasses: `${SeatClass}`[] = [\n  'TRAIN_COUCHETTE_BUSINESS_4',\n  'TRAIN_COUCHETTE_BUSINESS',\n];\n\nexport const getMoreExpensiveClass = (\n  baseClass: SeatClass,\n  priceClasses: PriceClass[],\n): PriceClass | null => {\n  const actualClassIndex = priceClasses.findIndex(\n    (pc) => pc.seatClassKey === baseClass,\n  );\n\n  const actualClass = priceClasses[actualClassIndex];\n  const moreExpensiveClass = priceClasses[actualClassIndex + 1];\n\n  if (\n    !actualClass || // Not found\n    !moreExpensiveClass || // Last class selected\n    actualClass.type !== 'RJ_SEAT' || // Don't offer timetickets\n    moreExpensiveClass.type !== 'RJ_SEAT' ||\n    actualClass.price >= moreExpensiveClass.price || // Don't offer cheaper class\n    moreExpensiveClass.price / actualClass.price > 1.5 || // The price difference is lower than 50%\n    actualClass.seatClassKey === moreExpensiveClass.seatClassKey || // Don't offer same class (e.g. action prices)\n    actualClass.actionPrice || // Don't offer for employee / with bicycle etc\n    moreExpensiveClass.actionPrice || // Don't offer upsell class with bicycle...\n    couchetteClasses.includes(moreExpensiveClass.seatClassKey) // Don't offer coupe\n  ) {\n    return null;\n  }\n\n  return moreExpensiveClass;\n};\n\nconst shouldIgnoreAction = (event: string) => event === 'SET_RESPONSE_STATE';\n\nexport const gtmPush = (payload: {\n  event: string;\n  [key: string]: any;\n}): void => {\n  if (\n    typeof window !== 'undefined' &&\n    // @ts-expect-error dataLayer\n    window.dataLayer?.push &&\n    !shouldIgnoreAction(payload.event)\n  ) {\n    // @ts-expect-error dataLayer\n    window.dataLayer.push(payload);\n  }\n};\n\nexport const getAffiliateCode = (): string | undefined => {\n  const affiliateCode =\n    typeof localStorage !== 'undefined'\n      ? localStorage.getItem('affiliateCode')\n      : '';\n\n  if (!affiliateCode) {\n    return undefined;\n  }\n\n  const expirationTs = parseInt(\n    localStorage.getItem('affiliateCodeExpiration') || '',\n    10,\n  );\n\n  if (expirationTs < new Date().valueOf()) {\n    localStorage.removeItem('affiliateCode');\n    localStorage.removeItem('affiliateCodeExpiration');\n    return undefined;\n  }\n\n  return affiliateCode;\n};\n\nexport const mapFromToSections = (\n  depArrSections: Section[],\n): SectionWithSeats[] =>\n  depArrSections.map((s) => ({\n    sectionId: s.id,\n    fromStationId: s.departureStationId,\n    toStationId: s.arrivalStationId,\n  }));\n\nexport const r8Stations = [\n  4987881000, 3088864001, 4961583000, 5009212000, 4961583001, 2370298003,\n  372825006, 5095524133, 5095524027, 372825007, 372825008, 4961583004, 7063331002,\n];\n\nexport const r23Stations = [\n  5010256458, 5812866010, 5145776001, 5010257320, 5812866008, 5812866007,\n  5812866006, 5812866005, 5812866004, 5812866003, 5812866002, 5812866001,\n  3088864000, 5812866009,\n];\n\nexport const isRegional = (fromStationId: number, toStationId: number) =>\n  (r8Stations.includes(fromStationId) && r8Stations.includes(toStationId)) ||\n  (r23Stations.includes(fromStationId) && r23Stations.includes(toStationId));\n\n/**\n * Soft booking can book other seat than selected. We need to inform user about it\n */\nexport const getNewSeats = (\n  reqSeats: SelectedSeat[],\n  respSeats: SelectedSeat[],\n) =>\n  equal(reqSeats, respSeats)\n    ? []\n    : respSeats.filter(\n      (respSeat) => !reqSeats.some((reqSeat) => equal(reqSeat, respSeat)),\n    );\n\nexport const getAddonTranslationKey = (addonCode: string, prependAll?: boolean): string => {\n  const lowerCaseAddon = addonCode.toLowerCase();\n  if (lowerCaseAddon.includes('kolo')) {\n    return 'addon.bike';\n  }\n  if (lowerCaseAddon.includes('lyze')) {\n    return 'addon.ski';\n  }\n  if (lowerCaseAddon.includes('parkovani')) {\n    return 'addon.parking';\n  }\n  if (lowerCaseAddon.includes('zavazadlo')) {\n    return 'addon.luggage';\n  }\n  if (lowerCaseAddon.includes('smartguide')) {\n    return 'addon.smartguide';\n  }\n  if (lowerCaseAddon.includes('berider')) {\n    return 'addon.berider';\n  }\n  if (lowerCaseAddon.includes('hoppygo')) {\n    return 'addon.hoppygo';\n  }\n\n  if (prependAll) {\n    return 'addon.' + addonCode;\n  }\n\n  return addonCode;\n};\n\nexport const unorderedArrayEqual = (arr1: string[], arr2: string[]) => {\n  if (!arr1 || !arr2) {\n    return false;\n  }\n  const sorted1 = arr1.sort();\n  const sorted2 = arr2.sort();\n\n  return sorted1.every((e, i) => sorted2[i] === e);\n};\n\nexport const calculateDistance = (\n  lat1: number,\n  lon1: number,\n  lat2: number,\n  lon2: number,\n): number => {\n  const p = 0.017453292519943295; // Math.PI / 180\n  const a =\n    0.5 -\n    Math.cos((lat2 - lat1) * p) / 2 +\n    (Math.cos(lat1 * p) *\n      Math.cos(lat2 * p) *\n      (1 - Math.cos((lon2 - lon1) * p))) /\n    2;\n\n  return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\n};\n\nexport const getPriorityInArray = <Item>(arr: Item[], item: Item) =>\n  arr.includes(item) ? arr.indexOf(item) : arr.length;\n","import {\n  FlexiType,\n  RouteId,\n  SeatClass,\n  SeatPosition,\n  SeatSectionBasic,\n  SelectedSeat,\n  Tariff,\n  TicketType,\n} from '../../hooks/types';\nimport { SelectedAddon } from '../../hooks/useAddons';\nimport {\n  ConnectionLocations,\n  ConnectionPayload,\n} from '../../hooks/useConnection';\nimport { CarbonOffset } from '../../hooks/useConnectionRoute';\nimport { PassengerData } from '../../hooks/useCreateTickets';\n\nexport interface SectionWithSeats extends SeatSectionBasic {\n  selectedSeats?: SeatPosition[];\n}\n\nexport type ConnectionDirection = 'there' | 'back';\n\nexport const CLEAR_BOOKING = 'CLEAR_BOOKING';\nexport const REPLACE_TARIFFS = 'REPLACE_TARIFFS';\nexport const SAVE_CONNECTION = 'SAVE_CONNECTION';\nexport const SELECT_ADDONS = 'SELECT_ADDONS';\nexport const SELECT_CLASS = 'SELECT_CLASS';\nexport const SELECT_CODE_DISCOUNT = 'SELECT_CODE_DISCOUNT';\nexport const SELECT_PERC_DISCOUNT = 'SELECT_PERC_DISCOUNT';\nexport const SELECT_ROUTE = 'SELECT_ROUTE';\nexport const SELECT_SEATS = 'SELECT_SEATS';\nexport const SET_PRICE = 'SET_PRICE';\nexport const UPSELL_ADDONS = 'UPSELL_ADDONS';\n\nexport interface PayloadCommons {\n  direction: ConnectionDirection;\n}\n\nexport interface SelectRoutePayload extends PayloadCommons {\n  fromStationId: number;\n  routeId: RouteId;\n  tariffs: Tariff[];\n  toStationId: number;\n  type?: TicketType;\n}\nexport interface ReplaceTariffsPayload extends PayloadCommons {\n  tariffs: Tariff[];\n}\n\nexport interface SelectClassPayload extends PayloadCommons {\n  flexiType?: FlexiType;\n  lineGroupCode?: string;\n  lineNumber?: number;\n  price: number;\n  priceSource?: string;\n  seatClass: SeatClass;\n  sections: SectionWithSeats[];\n  type: TicketType;\n}\n\nexport interface SelectSeatsPayload extends PayloadCommons {\n  seats: SelectedSeat[];\n}\n\nexport interface SelectAddonsPayload extends PayloadCommons {\n  selectedAddons: SelectedAddon[];\n}\n\nexport interface SelectPercentualDiscountPayload extends PayloadCommons {\n  percentualDiscountIds?: number[];\n  discountAmount?: number;\n}\n\nexport interface SelectCodeDiscountPayload extends PayloadCommons {\n  codeDiscount?: string;\n  discountAmount?: number;\n}\n\nexport interface SetPricePayload extends PayloadCommons {\n  price: number;\n}\n\nexport interface SaveConnectionPayload extends Partial<ConnectionPayload> {\n  ignoreFavorite?: boolean;\n}\n\nexport interface ClearBookingPayload {\n  direction?: ConnectionDirection;\n}\n\ninterface SaveConnectionAction {\n  type: typeof SAVE_CONNECTION;\n  payload: SaveConnectionPayload;\n}\n\ninterface ReplaceTariffsAction {\n  type: typeof REPLACE_TARIFFS;\n  payload: ReplaceTariffsPayload;\n}\n\ninterface SelectRouteAction {\n  type: typeof SELECT_ROUTE;\n  payload: SelectRoutePayload;\n}\n\ninterface SelectClassAction {\n  type: typeof SELECT_CLASS;\n  payload: SelectClassPayload;\n}\n\ninterface SelectSeatsAction {\n  type: typeof SELECT_SEATS;\n  payload: SelectSeatsPayload;\n}\n\ninterface UpsellAddonsAction {\n  type: typeof UPSELL_ADDONS;\n  payload: SelectAddonsPayload;\n}\n\ninterface SelectAddonsAction {\n  type: typeof SELECT_ADDONS;\n  payload: SelectAddonsPayload;\n}\n\ninterface ClearBookingAction {\n  type: typeof CLEAR_BOOKING;\n  payload: ClearBookingPayload;\n}\n\ninterface SelectPercentualDiscountAction {\n  type: typeof SELECT_PERC_DISCOUNT;\n  payload: SelectPercentualDiscountPayload;\n}\n\ninterface SelectCodeDiscountAction {\n  type: typeof SELECT_CODE_DISCOUNT;\n  payload: SelectCodeDiscountPayload;\n}\n\ninterface SetPriceAction {\n  type: typeof SET_PRICE;\n  payload: SetPricePayload;\n}\n\nexport type BookingState =\n  | 'ADDONS_SELECTED'\n  | 'CLASS_SELECTED'\n  | 'ROUTE_SELECTED'\n  | 'SEAT_SELECTED';\n\nexport interface BookingProps {\n  carbonOffset?: CarbonOffset;\n  bookingState: BookingState;\n  codeDiscount?: string;\n  flexiType?: FlexiType;\n  fromStationId?: number;\n  lineGroupCode?: string;\n  lineNumber?: number;\n  passengers?: PassengerData[];\n  percentualDiscountIds?: number[];\n  price?: number;\n  discountAmount?: number;\n  priceSource?: string;\n  routeId?: RouteId;\n  seatClass?: SeatClass;\n  sections?: SectionWithSeats[];\n  selectedAddons?: SelectedAddon[];\n  tariffs?: Tariff[];\n  toStationId?: number;\n  type?: TicketType;\n}\n\nexport interface Booking {\n  back: BookingProps | null;\n  connection: Partial<ConnectionPayload>;\n  isReturn: boolean;\n  there: BookingProps | null;\n}\n\nexport interface BookingReducerProps {\n  booking: Booking | null;\n  fav: ConnectionLocations[];\n}\n\nexport type BookingActions =\n  | ClearBookingAction\n  | ReplaceTariffsAction\n  | SaveConnectionAction\n  | SelectAddonsAction\n  | SelectClassAction\n  | SelectCodeDiscountAction\n  | SelectPercentualDiscountAction\n  | SelectRouteAction\n  | SelectSeatsAction\n  | SetPriceAction\n  | UpsellAddonsAction;\n  \n","import React, { Dispatch, FC, ReactNode, useEffect, useMemo } from 'react';\nimport equal from 'fast-deep-equal';\nimport type { Draft } from 'immer';\nimport { createContext } from 'use-context-selector';\nimport { useImmerReducer } from 'use-immer';\nimport { PersistConfig } from '../../hooks';\nimport { api, resInterceptor } from '../../hooks/consts';\nimport { gtmPush } from '../../hooks/utils';\nimport {\n  BookingActions,\n  BookingReducerProps,\n  ClearBookingPayload,\n  CLEAR_BOOKING,\n  REPLACE_TARIFFS,\n  SAVE_CONNECTION,\n  SELECT_ADDONS,\n  SELECT_CLASS,\n  SELECT_CODE_DISCOUNT,\n  SELECT_PERC_DISCOUNT,\n  SELECT_ROUTE,\n  SELECT_SEATS,\n  SET_PRICE,\n  UPSELL_ADDONS,\n} from './types';\n\nconst bookingInitialState: BookingReducerProps = {\n  booking: null,\n  fav: [],\n};\n\ninterface BookingProviderType {\n  children?: ReactNode;\n  persistConfig?: PersistConfig;\n  persist?: boolean;\n  transportHash?: string;\n}\n\ninterface BookingContextType {\n  state: BookingReducerProps;\n  dispatch: Dispatch<BookingActions>;\n}\n\nexport const BookingContext = createContext({} as BookingContextType);\n\nconst bookingReducer = (draft: Draft<BookingReducerProps>, action: BookingActions) => {\n  // default GTM\n  if (typeof window !== 'undefined') {\n    gtmPush({\n      event: action.type + ((action?.payload as ClearBookingPayload)?.direction || ''),\n      [action.type]: {\n        ...action.payload,\n        currency: api.defaults.headers.common['X-Currency'],\n      },\n    });\n  }\n\n  switch (action.type) {\n    case REPLACE_TARIFFS: {\n      if (draft?.booking?.[action.payload.direction]?.tariffs) {\n        draft.booking[action.payload.direction]!.tariffs =\n          action.payload.tariffs;\n      }\n      break;\n    }\n    case SAVE_CONNECTION: {\n      draft.booking = {\n        connection: action.payload,\n        isReturn: !!action.payload.returnDepartureDate,\n        there: null,\n        back: null,\n      };\n\n      if (\n        !action.payload.ignoreFavorite &&\n        action.payload.fromLocationId &&\n        action.payload.fromLocationType &&\n        action.payload.toLocationId &&\n        action.payload.toLocationType\n      ) {\n        const favoriteIndex = draft.fav.findIndex(\n          (i) =>\n            i.fromLocationId === action.payload.fromLocationId &&\n            i.toLocationId === action.payload.toLocationId,\n        );\n        if (favoriteIndex !== -1) {\n          draft.fav.splice(favoriteIndex, 1);\n        }\n\n        draft.fav.unshift({\n          fromLocationId: action.payload.fromLocationId,\n          fromLocationType: action.payload.fromLocationType,\n          toLocationId: action.payload.toLocationId,\n          toLocationType: action.payload.toLocationType,\n        });\n      }\n\n      break;\n    }\n    case SELECT_ROUTE: {\n      const { direction, ...rest } = action.payload;\n\n      if (draft.booking) {\n        const nextBooking = {\n          ...rest,\n          bookingState: 'ROUTE_SELECTED' as const,\n          seatClass: undefined,\n          sections: undefined,\n          price: undefined,\n          priceSource: undefined,\n          selectedAddons: undefined,\n          passengers: undefined,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case UPSELL_ADDONS: {\n      const { direction, ...rest } = action.payload;\n\n      if (draft.booking) {\n        const nextBooking = {\n          ...draft.booking?.[direction],\n          ...rest,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_CLASS: {\n      const { direction, ...rest } = action.payload;\n      if (draft.booking) {\n        const nextBooking = {\n          ...(draft.booking?.[direction] || {}),\n          ...rest,\n          bookingState: 'CLASS_SELECTED' as const,\n          passengers: undefined,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_SEATS: {\n      const { direction, seats } = action.payload;\n      if (draft.booking) {\n        const nextBooking = {\n          ...(draft.booking?.[direction]),\n          sections: draft.booking?.[direction]?.sections?.map((s) => ({\n            ...s,\n            selectedSeats: seats.filter(\n              (seat) => seat.sectionId === s.sectionId,\n            ),\n          })),\n          bookingState: 'SEAT_SELECTED' as const,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_ADDONS: {\n      const { direction, ...rest } = action.payload;\n\n      if (draft.booking) {\n        const nextBooking = {\n          ...draft.booking?.[direction],\n          ...rest,\n          bookingState: 'ADDONS_SELECTED' as const,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n\n      break;\n    }\n    case SELECT_PERC_DISCOUNT: {\n      const { direction, percentualDiscountIds, discountAmount } =\n        action.payload;\n      if (draft.booking?.[direction]?.bookingState) {\n        const nextBooking = {\n          ...draft.booking?.[direction],\n          percentualDiscountIds,\n          discountAmount,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n      break;\n    }\n    case SELECT_CODE_DISCOUNT: {\n      const { direction, codeDiscount, discountAmount } = action.payload;\n      if (draft.booking?.[direction]?.bookingState) {\n        draft.booking[direction] = {\n          ...(draft.booking?.[direction] || {}),\n          codeDiscount,\n          discountAmount,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n      }\n      break;\n    }\n    case SET_PRICE: {\n      const { direction, price } = action.payload;\n      if (draft.booking?.[direction]) {\n        const nextBooking = {\n          ...(draft.booking?.[direction] || {}),\n          price,\n          bookingState: draft.booking[direction]!.bookingState,\n        };\n        if (!equal(nextBooking, draft.booking[direction])) {\n          draft.booking[direction] = nextBooking;\n        }\n      }\n      break;\n    }\n    case CLEAR_BOOKING: {\n      // Clear on new search\n      if (!action?.payload?.direction && draft.booking) {\n        draft.booking = null;\n\n        // Delete manually\n      } else if (action?.payload?.direction && draft.booking) {\n        if (action.payload.direction === 'there') {\n          draft.booking.there = draft.booking.back;\n        }\n\n        if (!draft.booking?.there) {\n          draft.booking = null;\n        } else if (draft.booking.back || draft.booking.isReturn) {\n          draft.booking.back = null;\n          draft.booking.isReturn = false;\n        }\n      }\n      break;\n    }\n  }\n};\n\nconst BookingProvider: FC<BookingProviderType> = ({\n  children,\n  persistConfig,\n  persist,\n}) => {\n  const [state, dispatch] = useImmerReducer(\n    bookingReducer,\n    (persist && persistConfig?.getItem().bookings) || bookingInitialState,\n  );\n\n  useEffect(() => {\n    if (!persist) {\n      return;\n    }\n    persistConfig?.setItem({ bookings: state });\n  }, [state]);\n\n  useEffect(() => {\n    const interceptorId = resInterceptor(() => {\n      dispatch({ type: 'CLEAR_BOOKING', payload: {} });\n    });\n\n    return () => {\n      api.interceptors.response.eject(interceptorId);\n    };\n  }, []);\n\n  const value = useMemo(() => ({ dispatch, state }), [dispatch, state]);\n\n  return <BookingContext.Provider value={value}>{children}</BookingContext.Provider>;\n};\n\nexport default BookingProvider;\n","import type { Draft } from 'immer';\nimport { UpsellActions, UpsellReducerProps } from './types';\n\nconst TWO_WEEKS_TIMESTAMP = 12096e5;\n\nexport const upsellInitialState: UpsellReducerProps = {\n  cooldownTs: 0,\n  displayCount: 0,\n};\n\nconst upsellReducer = (draft: Draft<UpsellReducerProps>, action: UpsellActions) => {\n  switch (action.type) {\n    case 'REFUSE_UPSELL': {\n      draft.displayCount++;\n      if (draft.displayCount === 2) {\n        draft.cooldownTs = new Date().valueOf() + TWO_WEEKS_TIMESTAMP;\n      }\n      break;\n    }\n    case 'REFRESH_COOLDOWN': {\n      if (draft.cooldownTs && new Date().valueOf() > draft.cooldownTs) {\n        draft.cooldownTs = 0;\n        draft.displayCount = 0;\n      }\n      break;\n    }\n  }\n};\n\nexport default upsellReducer;\n","import type { Draft } from 'immer';\nimport { api } from '../../hooks/consts';\nimport { Currency, Language } from '../../hooks/types';\nimport { UserActions, UserReducerProps } from './types';\n\nexport const userInitialState: UserReducerProps = {\n  loginNrs: [],\n  user: null,\n  token: null,\n  currency: 'CZK',\n  language: 'cs',\n  paymentMethodCode: null,\n};\n\nexport const generateUserInitialState = (\n  currency: Currency,\n  language: Language = 'cs',\n): UserReducerProps => ({\n  loginNrs: [],\n  user: null,\n  token: null,\n  currency,\n  language,\n  paymentMethodCode: null,\n});\n\nconst userReducer = (draft: Draft<UserReducerProps>, action: UserActions) => {\n  switch (action.type) {\n    case 'CLEAR_USER':\n      draft.user = null;\n      draft.token = null;\n      break;\n    case 'SET_LANG':\n      if (action.payload.language) {\n        draft.language = action.payload.language;\n      }\n      break;\n    case 'SET_TOKEN':\n      draft.token = action.payload.token;\n      break;\n    case 'SET_USER':\n      draft.user = action.payload.user;\n      break;\n    case 'SET_CURRENCY':\n      api.defaults.headers.common['X-Currency'] = action.payload.currency;\n      draft.currency = action.payload.currency;\n      break;\n    case 'SET_PAYMENT_CODE':\n      draft.paymentMethodCode = action.payload.paymentMethodCode;\n      break;\n    case 'SET_LOGIN_NR':\n      draft.loginNrs = Array.from(\n        new Set([action.payload.loginNr, ...(draft.loginNrs || [])]),\n      ).slice(0, 6);\n      break;\n  }\n};\n\nexport default userReducer;\n","import React, {\n  Dispatch,\n  PropsWithChildren,\n  useEffect,\n  useState,\n} from 'react';\nimport { createContext } from 'use-context-selector';\nimport { useImmerReducer } from 'use-immer';\nimport { PersistConfig } from '../hooks';\nimport { api, reqInterceptor, resInterceptor } from '../hooks/consts';\nimport { Currency, Language } from '../hooks/types';\nimport BookingProvider from './booking/reducer';\nimport { BookingReducerProps } from './booking/types';\nimport ResponseStateProvider from './responseState/reducer';\nimport { ResponseStateReducerProps } from './responseState/types';\nimport upsellReducer, { upsellInitialState } from './upsell/reducer';\nimport { UpsellActions, UpsellReducerProps } from './upsell/types';\nimport userReducer, {\n  generateUserInitialState,\n  userInitialState,\n} from './user/reducer';\nimport { UserActions, UserReducerProps } from './user/types';\n\nexport interface RootReducerProps {\n  user: UserReducerProps;\n  upsell: UpsellReducerProps;\n}\n\nexport interface PersistedState extends RootReducerProps {\n  bookings?: BookingReducerProps;\n  responseState?: ResponseStateReducerProps;\n}\n\nconst initialStoreContent: {\n  state: RootReducerProps;\n  interceptorsMounted: boolean;\n  dispatch: {\n    upsellDispatch: Dispatch<UpsellActions>;\n    userDispatch: Dispatch<UserActions>;\n  };\n} = {\n  dispatch: {\n    upsellDispatch: () => { },\n    userDispatch: () => { },\n  },\n  interceptorsMounted: false,\n  state: {\n    upsell: upsellInitialState,\n    user: userInitialState,\n  },\n};\n\nexport const StoreContext = createContext(initialStoreContent);\n\nexport interface StoreProviderProps {\n  lang?: Language;\n  currency: Currency;\n  transportHash?: string;\n  persistConfig?: PersistConfig;\n  persist?: { booking?: boolean; responseState?: boolean };\n  saveConnection?: boolean;\n}\n\nconst StoreProvider = ({\n  children,\n  currency,\n  transportHash,\n  lang = 'cs',\n  persistConfig,\n  persist,\n}: PropsWithChildren<StoreProviderProps>) => {\n  const [upsell, upsellDispatch] = useImmerReducer(\n    upsellReducer,\n    persistConfig?.getItem().upsell || upsellInitialState,\n  );\n  const [user, userDispatch] = useImmerReducer(\n    userReducer,\n    persistConfig?.getItem().user || generateUserInitialState(currency, lang),\n  );\n  const [interceptorsMounted, setInterceptorsMounted] = useState(false);\n\n  useEffect(() => {\n    persistConfig?.setItem({ upsell });\n  }, [upsell]);\n\n  useEffect(() => {\n    persistConfig?.setItem({ user });\n  }, [user]);\n\n  useEffect(() => {\n    if (user.token) {\n      api.defaults.headers.Authorization = `Bearer ${user.token}`;\n    } else {\n      delete api.defaults.headers.Authorization;\n    }\n  }, [user.token]);\n\n  useEffect(() => {\n    if (user.currency) {\n      api.defaults.headers.common['X-Currency'] = user.currency;\n    }\n  }, [user.currency]);\n\n  useEffect(() => {\n    const reqIID = transportHash ? reqInterceptor(transportHash) : undefined;\n    const resIID = resInterceptor(() => {\n      userDispatch({ type: 'CLEAR_USER' });\n    });\n\n    // it was happening that requests would fail because the interceptors weren't mounted\n    setInterceptorsMounted(true);\n\n    return () => {\n      if (reqIID) {\n        api.interceptors.request.eject(reqIID);\n      }\n      api.interceptors.response.eject(resIID);\n    };\n  }, []);\n\n  return (\n    <StoreContext.Provider\n      value={{\n        dispatch: {\n          upsellDispatch,\n          userDispatch,\n        },\n        interceptorsMounted,\n        state: { upsell, user },\n      }}\n    >\n      <ResponseStateProvider\n        persistConfig={persistConfig}\n        persist={persist?.responseState}>\n        <BookingProvider\n          persistConfig={persistConfig}\n          persist={persist?.booking}>\n          {children}\n        </BookingProvider>\n      </ResponseStateProvider>\n    </StoreContext.Provider>\n  );\n};\n\nexport default StoreProvider;\n","import { makeUseAxios } from 'axios-hooks';\nimport { api as axios } from './consts';\n\nexport const useApi = makeUseAxios({ axios });\n\nexport const useManualApi = makeUseAxios({\n  axios,\n  defaultOptions: { manual: true },\n});\n","import React, { ReactNode, useEffect, useMemo, useRef } from 'react';\nimport type { ResponseValues } from 'axios-hooks';\nimport { createContext, useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport { Language } from './types';\nimport {\n  ConnectionSearchCity,\n  LocationCountry,\n  LocationStation,\n} from './useLocations';\nimport { useApi } from './useManualApi';\nimport type { SeatClassData } from './useSeatClasses';\nimport type { TariffResponse } from './useTariffs';\nimport type { VehicleStandard } from './useVehicleStandards';\n\ninterface PersistProps extends PersistContextCacheItem {\n  locationsResponse: ResponseValues<LocationCountry[], any, any>;\n  tariffsResponse: ResponseValues<TariffResponse[], any, any>;\n  seatClassesResponse: ResponseValues<SeatClassData[], any, any>;\n  vehicleStandardsResponse: ResponseValues<VehicleStandard[], any, any>;\n}\n\nexport interface PersistContextCacheItem {\n  locations?: ConnectionSearchCity[];\n  tariffs?: TariffResponse[];\n  seatClasses?: SeatClassData[];\n  vehicleStandards?: VehicleStandard[];\n}\n\nexport interface PersistContextCache {\n  getItem: () => PersistContextCacheItem;\n  setItem: (o: Partial<PersistContextCacheItem>) => void;\n}\n\nconst PersistContext = createContext<PersistProps>({} as PersistProps);\n\ninterface Props {\n  children?: ReactNode;\n  cache?: PersistContextCache;\n}\n\nexport const flattenLocations = (\n  locations: LocationCountry[],\n): ConnectionSearchCity[] =>\n  locations.flatMap((c) =>\n    c.cities.map((city) => ({\n      aliases: city.aliases,\n      code: c.code,\n      id: city.id,\n      name: `${city.name}, ${c.country}`,\n      placeType: 'CITY' as const,\n      stations: city.stations.map((st: LocationStation) => ({\n        ...st,\n        aliases: [...st.aliases, ...city.aliases],\n        countryCode: c.code,\n        name: st.fullname,\n        placeType: 'STATION' as const,\n        types: st.stationsTypes,\n      })),\n    })),\n  );\n\nconst useHandleApiResponse = <T extends keyof PersistContextCacheItem>(\n  response: ResponseValues<any, any, any>,\n  cacheKey: T,\n  cacheRef: React.MutableRefObject<Language | undefined>,\n  cache: PersistContextCache | undefined,\n  language: Language,\n) => {\n  const data = response.data || cache?.getItem()[cacheKey];\n\n  useEffect(() => {\n    if (cache && cacheRef.current !== language && data) {\n      cache.setItem({ [cacheKey]: data });\n      cacheRef.current = language;\n    }\n  }, [data, language, cache]);\n\n  return data;\n};\n\nconst useHandleApiError = (\n  response: ResponseValues<any, any, any>,\n  refetch: () => void,\n) => {\n  useEffect(() => {\n    if (!response.error) {\n      return;\n    }\n\n    const interval = setInterval(refetch, 10_000);\n    return () => clearInterval(interval);\n  }, [response.error, refetch]);\n};\n\nexport const PersistContextProvider: React.FC<Props> = ({\n  cache,\n  children,\n}) => {\n  const { language, currency } = useContextSelector(\n    StoreContext,\n    (c) => c.state.user,\n  );\n\n  const locationsCacheSetForLang = useRef<Language>();\n  const tariffsCacheSetForLang = useRef<Language>();\n  const seatClassesCacheSetForLang = useRef<Language>();\n  const vehicleStandardsCacheSetForLang = useRef<Language>();\n\n  useEffect(() => {\n    api.defaults.headers.common['X-Lang'] =\n      language === 'de-AT' ? 'at' : language;\n    api.defaults.headers.common['X-Currency'] = currency;\n  }, [language, currency]);\n\n  const [locationsResponse, refetchLocations] =\n    useApi<LocationCountry[]>('/consts/locations');\n  const [tariffsResponse, refetchTariffs] =\n    useApi<TariffResponse[]>('/consts/tariffs');\n  const [seatClassesResponse, refetchSeatClasses] = useApi<SeatClassData[]>(\n    '/consts/seatClasses',\n  );\n  const [vehicleStandardsResponse, refetchVehicleStandards] = useApi<VehicleStandard[]>(\n    '/consts/vehicleStandards',\n  );\n\n  const fetchedForLanguage = useRef(language);\n\n  useEffect(() => {\n    if (fetchedForLanguage.current === language) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    Promise.all([\n      refetchLocations({ signal }),\n      refetchTariffs({ signal }),\n      refetchSeatClasses({ signal }),\n      refetchVehicleStandards({ signal }),\n    ]).then(() => {\n      fetchedForLanguage.current = language;\n    });\n    return () => {\n      abortController.abort();\n    };\n  }, [\n    language,\n    refetchLocations,\n    refetchSeatClasses,\n    refetchTariffs,\n    refetchVehicleStandards,\n  ]);\n\n  const locations = useMemo(() => {\n    if (locationsResponse.data) {\n      return flattenLocations(locationsResponse.data);\n    }\n    return cache?.getItem().locations;\n  }, [locationsResponse.data, cache]);\n\n  useEffect(() => {\n    if (cache && locationsCacheSetForLang.current !== language && locations) {\n      cache.setItem({ locations });\n      locationsCacheSetForLang.current = language;\n    }\n  }, [locations, language, cache]);\n\n  const tariffs = useHandleApiResponse(\n    tariffsResponse,\n    'tariffs',\n    tariffsCacheSetForLang,\n    cache,\n    language,\n  );\n  const seatClasses = useHandleApiResponse(\n    seatClassesResponse,\n    'seatClasses',\n    seatClassesCacheSetForLang,\n    cache,\n    language,\n  );\n  const vehicleStandards = useHandleApiResponse(\n    vehicleStandardsResponse,\n    'vehicleStandards',\n    vehicleStandardsCacheSetForLang,\n    cache,\n    language,\n  );\n\n  useHandleApiError(locationsResponse, refetchLocations);\n  useHandleApiError(tariffsResponse, refetchTariffs);\n  useHandleApiError(seatClassesResponse, refetchSeatClasses);\n  useHandleApiError(vehicleStandardsResponse, refetchVehicleStandards);\n\n  return (\n    <PersistContext.Provider\n      value={{\n        locations,\n        locationsResponse,\n        tariffs,\n        tariffsResponse,\n        seatClassesResponse,\n        seatClasses,\n        vehicleStandards,\n        vehicleStandardsResponse,\n      }}\n    >\n      {children}\n    </PersistContext.Provider>\n  );\n};\n\nexport default PersistContext;\n","import { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport {\n  ErrorFields,\n  ResponseStateCategory,\n  SET_RESPONSE_STATE,\n} from '../store/responseState/types';\n\nconst useSetResponseState = (category: ResponseStateCategory) => {\n  const dispatch = useContextSelector(ResponseStateContext, c => c.dispatch);\n\n  return (\n    message: string | undefined,\n    loading: boolean,\n    errorFields: ErrorFields[] | undefined = undefined,\n  ) => {\n    dispatch({\n      type: SET_RESPONSE_STATE,\n      payload: { type: category, error: { message, errorFields }, loading },\n    });\n  };\n};\n\nexport default useSetResponseState;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport {\n  AddonsPassengersPayload,\n  Currency,\n  RouteSectionDepArr,\n  SelectedSeat,\n  TicketAddonState,\n} from './types';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\ninterface AddonCommons {\n  addonId: number;\n  currency: Currency;\n  price: number;\n}\n\nexport interface TicketAddon {\n  id: number;\n  name: string;\n  shortDescription: string;\n  description: string;\n  iconUrl: string;\n  infoUrl: string | null;\n  infoUrlLabel: string | null;\n  price: number;\n  currency: Currency;\n  conditions: Conditions;\n  state: TicketAddonState;\n}\n\nexport interface SelectedAddon extends AddonCommons {\n  addonCode?: string;\n  conditionsHash: string;\n  count: number;\n}\n\nexport interface VerifyAddonsPayload extends AddonsPassengersPayload {\n  selectedAddons: SelectedAddon[];\n}\n\nexport interface RouteSectionData extends RouteSectionDepArr {\n  selectedSeats: SelectedSeat[];\n}\n\nexport interface Addon extends AddonCommons {\n  addonCode: string;\n  conditions: Conditions;\n  shortDescription: string;\n  description: string;\n  iconUrl: string;\n  infoUrl: null | string;\n  infoUrlLabel: null | string;\n  maxCount: number;\n  name: string;\n}\n\nexport interface Conditions {\n  descriptions: Descriptions;\n  code: string;\n}\n\nexport interface Descriptions {\n  cancel: string;\n  rebook: string;\n  expiration: string;\n}\n\nconst useAddons = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.addons,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.addons],\n  );\n\n  const [{ loading: addonsLoading, error: addonsError, data }, callAddons] =\n    useManualApi<Addon[]>({ url: '/addons', method: 'POST' });\n\n  const [\n    { loading: verificationLoading, error: verificationError },\n    callVerifyAddons,\n  ] = useManualApi({ url: '/addons/verify', method: 'POST' });\n\n  const [{ loading: putLoading, error: putError }, callPutAddons] =\n    useManualApi({ url: '/addons', method: 'PUT' });\n\n  const fetchAddons = async (payload: AddonsPassengersPayload, signal?: GenericAbortSignal) => {\n    try {\n      await callAddons({ data: payload, signal });\n\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const verifyAddons = async (payload: VerifyAddonsPayload, signal?: GenericAbortSignal) => {\n    try {\n      await callVerifyAddons({ data: payload, signal });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const putAddons = async (\n    ticketId: number,\n    selectedAddons: SelectedAddon[],\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await callPutAddons({ data: { selectedAddons }, params: { ticketId }, signal });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    setState(\n      addonsError?.response?.data?.message ||\n      verificationError?.response?.data?.message ||\n      putError?.response?.data?.message,\n      addonsLoading || verificationLoading || putLoading,\n      addonsError?.response?.data?.errorFields ||\n      verificationError?.response?.data?.errorFields ||\n      putError?.response?.data?.errorFields,\n    );\n  }, [\n    addonsError,\n    addonsLoading,\n    verificationError,\n    verificationLoading,\n    putError,\n    putLoading,\n  ]);\n\n  return {\n    fetchAddons,\n    putAddons,\n    verifyAddons,\n    data: data?.filter((a) => a.maxCount).sort((a, b) => b.price - a.price),\n    ...categoryState,\n  };\n};\n\nexport default useAddons;\n","import type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport {\n  CLEAR_BOOKING,\n  ConnectionDirection,\n  REPLACE_TARIFFS,\n  SAVE_CONNECTION,\n  SaveConnectionPayload,\n  SELECT_ADDONS,\n  SELECT_CLASS,\n  SELECT_CODE_DISCOUNT,\n  SELECT_PERC_DISCOUNT,\n  SELECT_ROUTE,\n  SELECT_SEATS,\n  SelectClassPayload,\n  SelectRoutePayload,\n  SET_PRICE,\n  UPSELL_ADDONS,\n} from '../store/booking/types';\nimport { Currency, SelectedSeat, Tariff } from './types';\nimport { SelectedAddon } from './useAddons';\nimport { useManualApi } from './useManualApi';\n\nexport interface DiscountResponse {\n  amount: number;\n  currency: Currency;\n  discountedTicketPrice: number;\n}\n\nexport const useBookingDiscount = (directionProp: ConnectionDirection = 'there') => {\n  const isReturn = useContextSelector(BookingContext, c => c.state.booking?.isReturn);\n  const direction = directionProp === 'back' && isReturn ? 'back' : 'there';\n  const bookingItem = useContextSelector(BookingContext, c => c.state.booking?.[direction]);\n  const dispatch = useContextSelector(BookingContext, c => c.dispatch);\n\n  const [{ error, data }, verifyDiscount] =\n    useManualApi<DiscountResponse>({\n      method: 'POST',\n    });\n  const selectCodeDiscount = async (\n    codeDiscount: string | number | undefined,\n    signal?: GenericAbortSignal,\n  ) => {\n    if (!bookingItem) {\n      return;\n    }\n    const { data: discountData } = await verifyDiscount({\n      url:\n        typeof codeDiscount === 'number'\n          ? `/discounts/percentual/${codeDiscount}/verify`\n          : `/discounts/code/${codeDiscount}/verify`,\n      data: {\n        actionPrice: null,\n        passengers: bookingItem.tariffs?.map((tariff) => ({\n          tariff,\n        })),\n        route: {\n          priceSource: bookingItem.priceSource,\n          routeId: bookingItem.routeId,\n          seatClass: bookingItem.seatClass,\n          sections: bookingItem.sections?.map(\n            ({ selectedSeats, ...section }) => ({ section, selectedSeats }),\n          ),\n        },\n        ticketPrice: bookingItem.price,\n      },\n      signal,\n    });\n\n    const discountAmount =\n      bookingItem.price! - discountData.discountedTicketPrice;\n\n    dispatch({\n      type: SET_PRICE,\n      payload: { direction, price: discountData.discountedTicketPrice },\n    });\n\n    if (typeof codeDiscount === 'number') {\n      dispatch({\n        type: SELECT_PERC_DISCOUNT,\n        payload: {\n          percentualDiscountIds: [codeDiscount],\n          discountAmount,\n          direction,\n        },\n      });\n    } else {\n      dispatch({\n        type: SELECT_CODE_DISCOUNT,\n        payload: { codeDiscount, discountAmount, direction },\n      });\n    }\n  };\n\n  return {\n    data,\n    error,\n    selectCodeDiscount,\n  };\n};\n\nconst useBookingActions = (directionProp: ConnectionDirection = 'there') => {\n  const isReturn = useContextSelector(BookingContext, c => c.state.booking?.isReturn);\n  const direction = directionProp === 'back' && isReturn ? 'back' : 'there';\n  const dispatch = useContextSelector(BookingContext, c => c.dispatch);\n\n  const createBooking = (payload: SaveConnectionPayload) =>\n    dispatch({ type: SAVE_CONNECTION, payload });\n\n  const replaceTariffs = (tariffs: Tariff[]) =>\n    dispatch({\n      type: REPLACE_TARIFFS,\n      payload: { direction, tariffs },\n    });\n\n  const selectRoute = (payload: Omit<SelectRoutePayload, 'direction'>) =>\n    dispatch({\n      type: SELECT_ROUTE,\n      payload: { ...payload, direction },\n    });\n\n  const selectClass = (payload: Omit<SelectClassPayload, 'direction'>) =>\n    dispatch({\n      type: SELECT_CLASS,\n      payload: { ...payload, direction },\n    });\n\n  const selectSeats = (seats: SelectedSeat[]) =>\n    dispatch({ type: SELECT_SEATS, payload: { seats, direction } });\n\n  const selectAddons = (selectedAddons: SelectedAddon[]) =>\n    dispatch({\n      type: SELECT_ADDONS,\n      payload: { selectedAddons, direction },\n    });\n\n  const upsellAddons = (selectedAddons: SelectedAddon[]) => \n    dispatch({\n      type: UPSELL_ADDONS,\n      payload: { selectedAddons, direction },\n    });\n\n  const clearBooking = (dir?: ConnectionDirection) =>\n    dispatch({ type: CLEAR_BOOKING, payload: { direction: dir } });\n\n  return {\n    clearBooking,\n    createBooking,\n    replaceTariffs,\n    selectAddons,\n    selectClass,\n    selectRoute,\n    selectSeats,\n    upsellAddons,\n  };\n};\n\nexport default useBookingActions;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useContext, useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { getErrorMessage, langPriorityCountries } from './consts';\nimport PersistContext from './PersistContext';\nimport { StationCountry } from './types';\nimport useSetResponseState from './useSetResponseState';\nimport { getPriorityInArray } from './utils';\n\nexport type StationType = 'BUS_STATION' | 'TRAIN_STATION';\nexport type LocationType = 'CITY' | 'STATION';\n\nexport interface StationCityCommons {\n  aliases: string[];\n  id: number;\n  name: string;\n  significance?: number;\n}\n\nexport interface ConnectionSearchStation extends StationCityCommons {\n  address: string;\n  latitude: number;\n  longitude: number;\n  placeType: 'STATION';\n  types: StationType[];\n  countryCode: StationCountry;\n}\n\nexport interface ConnectionSearchCity extends StationCityCommons {\n  stations: (ConnectionSearchStation & LocationStation)[];\n  placeType: 'CITY';\n  code: StationCountry;\n}\n\nexport interface LocationStation extends StationCityCommons {\n  address: string;\n  fullname: string;\n  imageUrl: string | null;\n  latitude: number;\n  longitude: number;\n  significance: number;\n  stationsTypes: StationType[];\n}\n\nexport interface LocationCity extends StationCityCommons {\n  stations: LocationStation[];\n}\n\nexport interface LocationCountry {\n  country: string;\n  code: StationCountry;\n  cities: LocationCity[];\n}\n\nconst useLocations = (sort?: boolean) => {\n  const language = useContextSelector(StoreContext, c => c.state.user.language);\n  const priorityCountries = langPriorityCountries[language];\n  const setState = useSetResponseState(\n    ResponseStateCategory.locations,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.locations],\n  );\n\n  const {\n    locationsResponse: { error, loading },\n    locations,\n  } = useContext(PersistContext);\n\n  const getStation = useCallback(\n    (stationId: number) => {\n      if (!locations) {\n        return;\n      }\n      for (const city of locations) {\n        for (const station of city.stations) {\n          if (station.id === stationId) {\n            return {\n              ...station,\n              cityId: city.id,\n              cityName: city.name,\n            };\n          }\n        }\n      }\n    },\n    [locations],\n  );\n\n  const getCity = useCallback((cityId: number) =>\n    locations?.find(c => c.id === cityId), [locations],\n  );\n\n  const getDestination = (destinationId: number) =>\n    getStation(destinationId) ?? getCity(destinationId);\n\n  const data = useMemo(() => {\n    return sort ?\n      locations\n        ?.sort((a: { code: StationCountry }, b: { code: StationCountry }) =>\n          getPriorityInArray(priorityCountries, a.code) -\n          getPriorityInArray(priorityCountries, b.code),\n        )\n        .map(c => ({\n          ...c,\n          stations: c.stations.sort((a, b) => b.significance - a.significance),\n        })) :\n      locations;\n  }, [locations]);\n\n  useEffect(() => {\n    setState(\n      error?.response?.data?.message || getErrorMessage(error),\n      !!loading,\n    );\n  }, [error, loading]);\n\n  return { data, getCity, getDestination, getStation, ...categoryState };\n};\n\nexport default useLocations;\n","import { useMemo, useRef, useState } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport { DateString, StationCountry, Tariff, VehicleKey } from './types';\nimport { RouteOverview } from './useConnectionRoute';\nimport { ActionPrice } from './useCreateTickets';\nimport useLocations, { LocationType } from './useLocations';\nimport { useManualApi } from './useManualApi';\n\nexport const croatiaNotSroStations = [\n  5577656005, 5577656007, 5577656006, 5362691025,\n];\n\nconst additionalStationsMap = Object.freeze<Record<number, number>>({\n  10202001: 3088864005,\n});\n\nconst routesURL = '/routes/search/simple';\nconst versionHeaders = { Accept: 'application/1.2.0+json' };\n\nconst additionalStationsArrivalCountries: (StationCountry | undefined)[] = [\n  'HR',\n];\n\nexport interface ConnectionLocations {\n  fromLocationId: number;\n  fromLocationName?: string;\n  fromLocationType: LocationType;\n  toLocationId: number;\n  toLocationName?: string;\n  toLocationType: LocationType;\n}\n\nexport interface ConnectionPayload extends ConnectionLocations {\n  departureDate: DateString;\n  returnDepartureDate?: DateString;\n  tariffs: Tariff[];\n}\n\nexport interface SroConnectionPayload {\n  departureDate: DateString;\n  fromLocationType: LocationType;\n  fromLocation: number;\n  numberOfPassengers: number;\n  toLocationType: LocationType;\n  toLocation: number;\n}\n\ntype ConnectionState =\n  | Omit<ConnectionPayload, 'fromLocationName' | 'toLocationName'>\n  | undefined;\n\nexport interface ConnectionRoute extends RouteOverview {\n  actionPrice?: ActionPrice;\n  surcharge: boolean;\n  pricesCount: number;\n  nationalTrip: boolean;\n  vehicleStandards: VehicleKey[];\n}\n\nexport interface Connection {\n  routes: ConnectionRoute[];\n  routesMessage: string | null;\n  textBubbles: { id: number; text: string }[];\n}\n\nconst useConnection = () => {\n  const isCreditPrice = useContextSelector(\n    StoreContext,\n    (c) => c.state.user.user?.creditPrice,\n  );\n\n  const connection = useRef<ConnectionState>();\n  const headersRef = useRef<Record<string, string | undefined>>({});\n\n  const [{ data, loading }, callConnectionSearch] = useManualApi<Connection>({\n    url: routesURL,\n    method: 'GET',\n    headers: versionHeaders,\n  });\n  const [additionalData, setAdditionalData] = useState<Connection>();\n  const { getCity, getStation } = useLocations();\n\n  const [sroLoading, setSroLoading] = useState(false);\n\n  const shouldFindSro = useMemo(\n    () =>\n      !!data?.routes.some(\n        ({\n          transfersCount,\n          vehicleTypes,\n          arrivalStationId,\n          departureStationId,\n        }) =>\n          !transfersCount &&\n          vehicleTypes.includes('TRAIN') &&\n          !(\n            croatiaNotSroStations.includes(arrivalStationId) ||\n            croatiaNotSroStations.includes(departureStationId)\n          ),\n      ),\n    [data],\n  );\n\n  const correctPriceData: Connection | undefined = data && {\n    routesMessage:\n      additionalData?.routesMessage &&\n      data.routesMessage &&\n      additionalData?.routesMessage !== data.routesMessage\n        ? [data.routesMessage, additionalData?.routesMessage].join('\\n')\n        : data.routesMessage || additionalData?.routesMessage || null,\n    textBubbles: additionalData?.textBubbles.length\n      ? [...data.textBubbles, ...additionalData.textBubbles].filter(\n        (bubble, index, self) =>\n          index ===\n            self.findIndex((t) => t.id === bubble.id && t.text === bubble.text),\n      )\n      : data.textBubbles,\n    routes: (additionalData\n      ? [...data.routes, ...additionalData.routes]\n      : data.routes\n    )\n      .sort(\n        (a, b) =>\n          new Date(a.departureTime).valueOf() -\n          new Date(b.departureTime).valueOf(),\n      )\n      .map((ar) => ({\n        ...ar,\n        priceFrom: isCreditPrice ? ar.creditPriceFrom : ar.priceFrom,\n        priceTo: isCreditPrice ? ar.creditPriceTo : ar.priceTo,\n      })),\n  };\n\n  const fetchConnectionData = async (\n    params: ConnectionPayload,\n    headers: Record<string, string | undefined>,\n    move?: 'BACKWARD' | 'FORWARD',\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      if (additionalData) {\n        setAdditionalData(undefined);\n      }\n\n      const additionalStation =\n        !!additionalStationsMap[params.fromLocationId] &&\n        additionalStationsArrivalCountries.includes(\n          params.toLocationType === 'CITY'\n            ? getCity(params.toLocationId)?.code\n            : getStation(params.toLocationId)?.countryCode,\n        );\n\n      const [{ headers: responseHeaders }, additionalRes] = await Promise.all([\n        callConnectionSearch({\n          headers: { ...headers, ...versionHeaders },\n          params: {\n            ...params,\n            departureDate: params.departureDate.slice(0, 10),\n            ...(move && { move }),\n          },\n          signal,\n        }),\n        additionalStation &&\n          api.get<Connection>(routesURL, {\n            headers,\n            signal,\n            params: {\n              ...params,\n              fromLocationId: additionalStationsMap[params.fromLocationId],\n              fromLocationType: 'STATION',\n              departureDate: params.departureDate.slice(0, 10),\n              ...(move && { move }),\n            },\n          }),\n      ]);\n\n      if (additionalRes) {\n        setAdditionalData(additionalRes.data);\n      }\n\n      headersRef.current = {\n        'x-used-departurefromdatetime':\n          responseHeaders['x-used-departurefromdatetime'],\n        'x-used-departuretodatetime':\n          responseHeaders['x-used-departuretodatetime'],\n      };\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchConnection = async (\n    {\n      returnDepartureDate,\n      fromLocationName,\n      toLocationName,\n      departureDate,\n      ...params\n    }: ConnectionPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      connection.current = { ...params, departureDate };\n      const apiParams = {\n        ...params,\n        departureDate,\n        returnDepartureDate,\n        fromLocationName,\n        toLocationName,\n      };\n      return await fetchConnectionData(apiParams, {}, undefined, signal);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchForwardRoutes = async (\n    headers?: Record<string, string | undefined>,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      return await fetchConnectionData(\n        connection.current as ConnectionPayload,\n        {\n          ...headersRef.current,\n          ...headers,\n        },\n        'FORWARD',\n        signal,\n      );\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchBackwardRoutes = async (\n    headers?: Record<string, string | undefined>,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      return await fetchConnectionData(\n        connection.current as ConnectionPayload,\n        {\n          ...headersRef.current,\n          ...headers,\n        },\n        'BACKWARD',\n        signal,\n      );\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const fetchSroRoutes = async (\n    payload: SroConnectionPayload,\n    signal?: GenericAbortSignal,\n  ): Promise<ConnectionRoute[]> => {\n    setSroLoading(true);\n    const [firstRoute, secondRoute] = await Promise.all(\n      [2, 1].map((seatClass) =>\n        api.get<ConnectionRoute[]>('/routes/search/RJ_SRO', {\n          params: { ...payload, seatClass },\n          signal,\n        }),\n      ),\n    );\n    setSroLoading(false);\n\n    return firstRoute.data.map((route, i) => {\n      const currentRoute = secondRoute.data[i];\n      if (!currentRoute) {\n        return {\n          ...route,\n          /* YBUS returns prices only for 1 passenger in SRO - to unify it with seat tickets,\n           * we need to multiply by no of passengers */\n          creditPriceFrom: route.creditPriceFrom * payload.numberOfPassengers,\n          creditPriceTo: route.creditPriceTo * payload.numberOfPassengers,\n          priceFrom: route.priceFrom * payload.numberOfPassengers,\n          priceTo: route.priceTo * payload.numberOfPassengers,\n        };\n      }\n      return {\n        ...route,\n        /* Some props has to be calculated to be merged correctly */\n        pricesCount: route.pricesCount + currentRoute.pricesCount,\n        creditPriceFrom:\n          Math.min(route.creditPriceFrom, currentRoute.creditPriceFrom) *\n          payload.numberOfPassengers,\n        creditPriceTo:\n          Math.max(route.creditPriceTo, currentRoute.creditPriceTo) *\n          payload.numberOfPassengers,\n        priceFrom:\n          Math.min(route.priceFrom, currentRoute.priceFrom) *\n          payload.numberOfPassengers,\n        priceTo:\n          Math.max(route.priceTo, currentRoute.priceTo) *\n          payload.numberOfPassengers,\n        freeSeatsCount: route.freeSeatsCount + currentRoute.freeSeatsCount,\n      };\n    });\n  };\n\n  return {\n    data: correctPriceData,\n    fetchBackwardRoutes,\n    fetchConnection,\n    fetchForwardRoutes,\n    fetchSroRoutes,\n    loading: loading || sroLoading,\n    shouldFindSro,\n  };\n};\n\nexport default useConnection;\n","import { useEffect, useMemo } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { Tariff, TicketType } from './types';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport enum PassengerFieldsFromApi {\n  email = 'EMAIL',\n  firstName = 'FIRST_NAME',\n  surname = 'SURNAME',\n  phone = 'PHONE',\n  customerName = 'CUSTOMER_NAME',\n  customerAddress = 'CUSTOMER_ADDRESS',\n  dateOfBirth = 'BIRTHDAY',\n}\n\nexport enum PassengerFieldsToSend {\n  email = 'email',\n  firstName = 'firstName',\n  phone = 'phone',\n  surname = 'surname',\n  customerName = 'customerName',\n  customerAddress = 'customerAddress',\n  dateOfBirth = 'dateOfBirth',\n}\n\nexport const mapPassengerData: {\n  [key in PassengerFieldsFromApi]: PassengerFieldsToSend;\n} = {\n  CUSTOMER_ADDRESS: PassengerFieldsToSend.customerAddress,\n  CUSTOMER_NAME: PassengerFieldsToSend.customerName,\n  EMAIL: PassengerFieldsToSend.email,\n  FIRST_NAME: PassengerFieldsToSend.firstName,\n  PHONE: PassengerFieldsToSend.phone,\n  SURNAME: PassengerFieldsToSend.surname,\n  BIRTHDAY: PassengerFieldsToSend.dateOfBirth,\n};\n\nexport interface ContactData {\n  email: true;\n  phone: boolean;\n}\n\nexport interface PassengerField {\n  name: PassengerFieldsToSend;\n  value: string;\n  error?: string;\n}\n\nexport interface Passengers {\n  tariff: Tariff;\n  fields: Record<PassengerFieldsToSend, string>;\n}\n\nexport interface PersonalDataPassengers {\n  tariff?: Tariff;\n  fields: PassengerField[];\n}\n\nexport interface PersonalData {\n  from: string;\n  to: string;\n  passengers: PersonalDataPassengers[];\n}\n\nexport interface PassengersData {\n  contactData: ContactData;\n  personalData: PersonalData;\n}\n\nexport interface PassengersApiData {\n  firstPassengerData: PassengerFieldsFromApi[];\n  otherPassengersData: PassengerFieldsFromApi[];\n}\n\nconst typesToIgnore: TicketType[] = ['RJ_TIME', 'FLEXI'];\n\nconst usePassengersData = () => {\n  const connection = useContextSelector(BookingContext, c => c.state.booking?.connection);\n  const bookingThere = useContextSelector(BookingContext, c => c.state.booking?.there);\n  const bookingBack = useContextSelector(BookingContext, c => c.state.booking?.back);\n  const setState = useSetResponseState(\n    ResponseStateCategory.passengersData,\n  );\n  const [\n    { data: thereData, loading: thereLoading, error: thereError },\n    fetchThere,\n  ] = useManualApi<PassengersApiData>({});\n  const [\n    { data: backData, loading: backLoading, error: backError },\n    fetchBack,\n  ] = useManualApi<PassengersApiData>({});\n\n  const loading = thereLoading || backLoading;\n  const error = thereError || backError;\n\n  const data = useMemo(() => {\n    if (!thereData || (bookingBack?.routeId && !backData) || !connection) {\n      return {\n        contactData: { email: true } as ContactData,\n        personalData: {\n          from: connection?.fromLocationName,\n          passengers: [],\n          to: connection?.toLocationName,\n        } as PersonalData,\n      };\n    }\n    const morePreciseData = !backData ||\n      thereData.otherPassengersData.length > backData.otherPassengersData.length ?\n      thereData :\n      backData;\n\n    const contactData: ContactData = {\n      email: true,\n      phone: morePreciseData.firstPassengerData.some((pd) =>\n        pd.includes(PassengerFieldsFromApi.phone),\n      ),\n    };\n\n    const personalData: PersonalData = {\n      from: connection.fromLocationName!,\n      to: connection.toLocationName!,\n      passengers: Array.from({ length: (bookingThere || bookingBack)?.tariffs?.length ?? 1 })\n        .map((_, i) => ({\n          fields: (i\n            ? morePreciseData.otherPassengersData\n            : morePreciseData.firstPassengerData.filter(\n              (p) => !['EMAIL', 'PHONE'].includes(p),\n            )\n          ).map((passData) => ({\n            name: mapPassengerData[passData],\n            value: '',\n          })),\n          tariff: (bookingThere || bookingBack)?.tariffs?.[i],\n        })),\n    };\n\n    return { contactData, personalData };\n  }, [thereData, backData]);\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [loading, error]);\n\n  useEffect(() => {\n    if (!bookingBack?.routeId || !bookingBack.type || typesToIgnore.includes(bookingBack.type)) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (bookingBack?.type === 'RJ_SRO') {\n      fetchBack({\n        params: {\n          departureDate: new Date(),\n          fromStationId: bookingBack?.fromStationId,\n          numberOfPassenger: bookingBack?.tariffs?.length,\n          routeId: bookingBack?.routeId,\n          seatClass: 1,\n          toStationId: bookingBack?.toStationId,\n        },\n        signal,\n        url: `/routes/${bookingBack?.routeId}/passengersData/RJ_SRO`,\n      });\n    } else {\n      fetchBack({\n        data: {\n          priceSource: bookingBack?.priceSource,\n          seatClass: bookingBack?.seatClass,\n          sections: (bookingBack?.sections || []).map(\n            ({ selectedSeats, ...section }) => section,\n          ),\n          tariffs: bookingBack?.tariffs,\n        },\n        method: 'POST',\n        signal,\n        url: `/routes/${bookingBack?.routeId}/passengersData`,\n      });\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [bookingBack?.routeId]);\n\n  useEffect(() => {\n    if (!bookingThere?.routeId || !bookingThere.type || typesToIgnore.includes(bookingThere.type)) {\n      return;\n    }\n\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (bookingThere?.type === 'RJ_SRO') {\n      fetchThere({\n        params: {\n          departureDate: new Date(),\n          fromStationId: bookingThere?.fromStationId,\n          numberOfPassenger: bookingThere?.tariffs?.length,\n          routeId: bookingThere?.routeId,\n          seatClass: 1,\n          toStationId: bookingThere?.toStationId,\n        },\n        signal,\n        url: `/routes/${bookingThere?.routeId}/passengersData/RJ_SRO`,\n      });\n    } else {\n      fetchThere({\n        data: {\n          priceSource: bookingThere?.priceSource,\n          seatClass: bookingThere?.seatClass,\n          sections: (bookingThere?.sections || []).map(\n            ({ selectedSeats, ...section }) => section,\n          ),\n          tariffs: bookingThere?.tariffs,\n        },\n        method: 'POST',\n        signal,\n        url: `/routes/${bookingThere?.routeId}/passengersData`,\n      });\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [bookingThere?.routeId]);\n\n  return {\n    data,\n    error: error?.response?.data.message,\n    loading,\n  };\n};\n\nexport default usePassengersData;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { getErrorMessage } from './consts';\nimport {\n  Currency,\n  DateString,\n  FlexiType,\n  RouteId,\n  SeatClass,\n  Tariff,\n  TicketType,\n  VehicleKey,\n  VehicleType,\n} from './types';\nimport { Descriptions } from './useAddons';\nimport { ActionPrice } from './useCreateTickets';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport type Service =\n  | 'typy_vozidel_astra'\n  | 'typy_vozidel_automaty'\n  | 'typy_vozidel_bezp_sluzba'\n  | 'typy_vozidel_bez_dotykove_obrazovky'\n  | 'typy_vozidel_chlazene_napoje'\n  | 'typy_vozidel_denni_tisk'\n  | 'typy_vozidel_detske_kupe'\n  | 'typy_vozidel_dotykova_obrazovka'\n  | 'typy_vozidel_dzus'\n  | 'typy_vozidel_imobilni'\n  | 'typy_vozidel_imobilni_rampa'\n  | 'typy_vozidel_klidova_zona'\n  | 'typy_vozidel_klimatizace'\n  | 'typy_vozidel_kocarky'\n  | 'typy_vozidel_kresilko'\n  | 'typy_vozidel_low_cost'\n  | 'typy_vozidel_obcerstveni'\n  | 'typy_vozidel_online_catering'\n  | 'typy_vozidel_prednostni_servis'\n  | 'typy_vozidel_preprava_kola'\n  | 'typy_vozidel_restauracni_vuz'\n  | 'typy_vozidel_sekt'\n  | 'typy_vozidel_sluchatka'\n  | 'typy_vozidel_snidane'\n  | 'typy_vozidel_spaci_vuz'\n  | 'typy_vozidel_spaci_vuz_zeny'\n  | 'typy_vozidel_stevardka'\n  | 'typy_vozidel_teple_napoje_zdarma'\n  | 'typy_vozidel_tiche_kupe'\n  | 'typy_vozidel_wifi_ano'\n  | 'typy_vozidel_wifi_ne'\n  | 'typy_vozidel_zabavni_portal_ano'\n  | 'typy_vozidel_zasuvka'\n  | 'typy_vozidel_zastuvka_ne'; // Yeah, there's typo\n\nexport interface Line {\n  id: number;\n  code: string | null;\n  from: string;\n  to: string;\n  lineGroupCode: string;\n  lineNumber: number;\n}\n\nexport interface CarbonOffset {\n  amount: number;\n  currency: Currency;\n}\n\nexport interface TransferTime {\n  days: number;\n  hours: number;\n  minutes: number;\n}\n\nexport interface Transfer {\n  fromStationId: number;\n  toStationId: number;\n  calculatedTransferTime: TransferTime;\n  determinedTransferTime: TransferTime | null;\n  description: string | null;\n}\n\nexport interface TariffNotifications {\n  title: string;\n  description: string;\n  content: string[];\n}\n\nexport interface PriceClass {\n  actionPrice: null | ActionPrice;\n  bookable: boolean;\n  conditions: { descriptions: Descriptions };\n  creditPrice: number;\n  customerNotifications: string[];\n  flexiType?: FlexiType;\n  freeSeatsCount: number;\n  lineGroupCode?: string;\n  lineNumber?: number;\n  price: number;\n  priceSource: string;\n  seatClassKey: SeatClass;\n  services: Service[];\n  tariffNotifications: TariffNotifications;\n  tariffs: Tariff[];\n  type: TicketType;\n}\n\nexport interface TransfersInfo {\n  info: string;\n  transfers: Transfer[];\n}\n\nexport interface RouteSectionCommons {\n  arrivalCityName: string;\n  arrivalStationId: number;\n  arrivalCityId: number;\n  arrivalStationName: string;\n  arrivalTime: DateString;\n  delay: string | null;\n  departureCityName: string;\n  departureStationId: number;\n  departureCityId: number;\n  departureStationName: string;\n  departureTime: DateString;\n  estimatedArrivalTime: DateString;\n  freeSeatsCount: number;\n  support: boolean;\n  travelTime: string;\n}\n\nexport interface Section extends RouteSectionCommons {\n  departurePlatform: string | null;\n  id: number;\n  line: Line;\n  notices: string[] | null;\n  vehicleType: VehicleType;\n  services: Service[];\n  vehicleStandardKey: VehicleKey;\n}\n\nexport interface RouteOverview extends RouteSectionCommons {\n  bookable: boolean;\n  creditPriceFrom: number;\n  creditPriceTo: number;\n  id: RouteId;\n  mainSectionId: number;\n  notices: boolean;\n  priceFrom: number;\n  priceTo: number;\n  transfersCount: number;\n  vehicleTypes: VehicleType[];\n}\n\nexport interface Surcharge {\n  price: number;\n  notification: string;\n}\n\nexport interface RouteDetail extends RouteOverview {\n  carbonOffset: CarbonOffset;\n  nationalTrip: boolean;\n  priceClasses: PriceClass[];\n  sections: Section[];\n  transfersInfo: TransfersInfo | null;\n  surcharge: null | Surcharge;\n  vehicleStandardKey: VehicleKey;\n}\n\nexport interface FlexiResponse {\n  flexiType?: FlexiType;\n  lineGroupCode: string;\n  lineNumber: number;\n  price: number;\n  seatClassKey: SeatClass;\n}\n\nexport interface RoutePayload {\n  routeId: string | number;\n  fromStationId: number;\n  toStationId: number;\n  tariffs: Tariff[];\n}\n\nexport interface SroPriceClass {\n  conditions: SroConditions;\n  freeSeatsCount: number;\n  numberOfPassengers: number;\n  price: number;\n  priceSource: string;\n  seatClassKey: SeatClass;\n}\n\nexport interface SroPriceClassSelectable extends SroPriceClass {\n  tariffs: Tariff[];\n  type: TicketType;\n}\n\nexport interface SroConditions {\n  cancelCharge: number;\n  code: string;\n  refundToOriginalSourcePossible: boolean;\n}\n\nexport interface SroRouteResponse {\n  priceClasses: SroPriceClass[];\n  routeId: string;\n}\n\nconst emptyArr: any[] = [];\n\nconst departureDate = '2022-01-01';\n\nconst useConnectionRoute = (ignoreErrors = false) => {\n  const setState = useSetResponseState(ResponseStateCategory.connectionRoute);\n  const isCreditPrice = useContextSelector(\n    StoreContext,\n    (c) => c.state.user.user?.creditPrice,\n  );\n  const [{ data, error, loading }, fetchRjSeat] = useManualApi<RouteDetail>({});\n\n  const [{ loading: sroLoading1, error: sroError1, data: sroData1 }, callSro1] =\n    useManualApi<SroRouteResponse>({});\n\n  const [{ loading: sroLoading2, error: sroError2, data: sroData2 }, callSro2] =\n    useManualApi<SroRouteResponse>({});\n  const rjSroLoading = sroLoading1 || sroLoading2;\n  const rjSroError = sroError1 || sroError2;\n\n  const dataWithPrice: RouteDetail | undefined = useMemo(\n    () =>\n      data && {\n        ...data,\n        priceFrom: isCreditPrice ? data.creditPriceFrom : data.priceFrom,\n        priceClasses: data.priceClasses.map((pc) => ({\n          ...pc,\n          price: isCreditPrice ? pc.creditPrice : pc.price,\n          type: 'RJ_SEAT' as TicketType,\n        })),\n      },\n    [data, isCreditPrice],\n  );\n\n  const fetchRoute = useCallback(\n    async (params: RoutePayload, signal?: GenericAbortSignal) => {\n      try {\n        // causes some weird bug in the app with memoizing even when not using any memoizing ...\n        // if (\n        //   params.fromStationId === data?.departureStationId\n        //   && params.toStationId === data.arrivalStationId\n        //   && params.routeId === data.id\n        //   && unorderedArrayEqual(params.tariffs, data.priceClasses[0]?.tariffs)\n        // ) return data;\n        const response = await fetchRjSeat({\n          url: `/routes/${params.routeId}/simple`,\n          params,\n          signal,\n        });\n\n        return response.data;\n      } catch {\n        return undefined;\n      }\n    },\n    [fetchRjSeat],\n  );\n\n  const fetchSroRoutes = useCallback(\n    async (\n      { routeId, ...payload }: RoutePayload,\n      signal?: GenericAbortSignal,\n    ) => {\n      // if (\n      //   sroData1?.routeId === routeId &&\n      //   sroData2?.routeId === routeId\n      // ) return [sroData2, sroData1].flatMap((sro) => sro.priceClasses);\n      const params = {\n        ...payload,\n        numberOfPassengers: payload.tariffs.length,\n      };\n      const url = `/routes/${routeId}/RJ_SRO`;\n      try {\n        const sroPriceClasses = await Promise.all([\n          callSro2({\n            params: {\n              ...params,\n              departureDate,\n              seatClass: 2,\n            },\n            signal,\n            url,\n          }),\n          callSro1({\n            params: {\n              ...params,\n              departureDate,\n              seatClass: 1,\n            },\n            signal,\n            url,\n          }),\n        ]);\n        return sroPriceClasses.flatMap((sro) => sro.data.priceClasses);\n      } catch {\n        return undefined;\n      }\n    },\n    [callSro1, callSro2],\n  );\n\n  const routeLoading = loading || rjSroLoading;\n  const routeError = error || rjSroError;\n\n  useEffect(() => {\n    if (!ignoreErrors) {\n      setState(\n        routeError?.response?.data?.message || getErrorMessage(routeError),\n        routeLoading,\n        routeError?.response?.data?.errorFields,\n      );\n    }\n  }, [routeLoading, routeError]);\n\n  const rjSroClasses = useMemo(\n    () =>\n      sroData1?.priceClasses.length || sroData2?.priceClasses.length\n        ? [\n          ...(sroData1?.priceClasses ?? []),\n          ...(sroData2?.priceClasses ?? []),\n        ].map<SroPriceClassSelectable>((sroCl) => ({\n          ...sroCl,\n          tariffs: new Array<Tariff>(sroCl.numberOfPassengers).fill(\n            Tariff.Regular,\n          ),\n          price: sroCl.price * sroCl.numberOfPassengers,\n          type: 'RJ_SRO',\n        }))\n        : (emptyArr as SroPriceClassSelectable[]),\n    [sroData1, sroData2],\n  );\n\n  return {\n    data: dataWithPrice,\n    fetchRoute,\n    fetchSroRoutes,\n    rjSroClasses,\n    routeError,\n    routeLoading,\n  };\n};\n\nexport default useConnectionRoute;\n","import { useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport { FlexiResponse, RoutePayload } from './useConnectionRoute';\nimport { useManualApi } from './useManualApi';\n\nenum FlexiType {\n  Week = 'WEEK',\n  Month = 'MONTH',\n  Quarter = 'QUARTER',\n}\nconst flexiTypes = [FlexiType.Week, FlexiType.Month, FlexiType.Quarter];\n\nconst useTimeTickets = () => {\n  const departureDate = useContextSelector(\n    BookingContext,\n    c => c.state.booking?.connection.departureDate,\n  );\n  const [\n    { data: flexiClassesWeek, loading: loadingWeek, error: errorWeek },\n    fetchWeek,\n  ] = useManualApi<FlexiResponse[]>({});\n  const [\n    { data: flexiClassesMonth, loading: loadingMonth, error: errorMonth },\n    fetchMonth,\n  ] = useManualApi<FlexiResponse[]>({});\n  const [\n    { data: flexiClassesQuarter, loading: loadingQuarter, error: errorQuarter },\n    fetchQuarter,\n  ] = useManualApi<FlexiResponse[]>({});\n\n  const loading = loadingWeek || loadingMonth || loadingQuarter;\n  const error = errorWeek || errorMonth || errorQuarter;\n\n  const isFlexiLoaded = !!(\n    flexiClassesWeek?.length &&\n    flexiClassesMonth?.length &&\n    flexiClassesQuarter?.length\n  );\n\n  const fetchRoute = async (\n    {\n      fromStationId,\n      toStationId,\n      tariffs,\n      routeId,\n    }: RoutePayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    await Promise.all(\n      [fetchWeek({\n        signal,\n        url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/${FlexiType.Week}/${departureDate}/${tariffs[0]}`,\n      }),\n      fetchMonth({\n        signal,\n        url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/${FlexiType.Month}/${departureDate}/${tariffs[0]}`,\n      }),\n      fetchQuarter({\n        signal,\n        url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/${FlexiType.Quarter}/${departureDate}/${tariffs[0]}`,\n      })],\n    );\n  };\n\n  const data = useMemo(() =>\n    (isFlexiLoaded ? [flexiClassesWeek, flexiClassesMonth, flexiClassesQuarter] : [])\n      .flatMap(\n        (flexiClasses, i) => flexiClasses.map(\n          ({ price, seatClassKey, lineNumber, lineGroupCode }) => ({\n            flexiType: flexiTypes[i],\n            lineGroupCode,\n            lineNumber,\n            price,\n            seatClassKey,\n            type: 'FLEXI' as const,\n          })),\n      ), [isFlexiLoaded]);\n\n  return { data, error, fetchRoute, loading };\n};\n\nexport default useTimeTickets;","import {\n  Currency,\n  Language,\n  PaymentMethod,\n  Tariff,\n} from '../../hooks/types';\nimport { Company, Notifications } from '../../hooks/useUser';\n\nexport const SET_CURRENCY = 'SET_CURRENCY';\nexport const SET_CLASS = 'SET_CLASS';\nexport const SET_LANG = 'SET_LANG';\nexport const SET_LOGIN_NR = 'SET_LOGIN_NR';\nexport const SET_PAYMENT_CODE = 'SET_PAYMENT_CODE';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_USER = 'SET_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\n\nexport interface PersistedUser {\n  id: number;\n  accountCode: string;\n  company?: Company;\n  companyInformation: boolean;\n  credit: number;\n  creditPrice: boolean;\n  currency: Currency;\n  defaultTariffKey: Tariff;\n  email: string;\n  employeeNumber: null | string;\n  firstName: string | null;\n  notifications: Notifications;\n  phoneNumber: string | null;\n  surname: string | null;\n}\n\nexport interface UserReducerProps {\n  currency: Currency;\n  language: Language;\n  loginNrs: string[];\n  paymentMethodCode: PaymentMethod | null;\n  token: string | null;\n  user: PersistedUser | null;\n}\n\ninterface SetTokenAction {\n  type: typeof SET_TOKEN;\n  payload: { token: string | null };\n}\n\ninterface SetLoginNrAction {\n  type: typeof SET_LOGIN_NR;\n  payload: { loginNr: string };\n}\n\ninterface SetLangAction {\n  type: typeof SET_LANG;\n  payload: { language: Language };\n}\n\ninterface SetCurrencyAction {\n  type: typeof SET_CURRENCY;\n  payload: { currency: Currency };\n}\n\ninterface SetPaymentCodeAction {\n  type: typeof SET_PAYMENT_CODE;\n  payload: { paymentMethodCode: PaymentMethod | null };\n}\n\ninterface SetUserAction {\n  type: typeof SET_USER;\n  payload: { user: PersistedUser | null };\n}\n\ninterface SetClearUserAction {\n  type: typeof CLEAR_USER;\n}\n\nexport type UserActions =\n  | SetClearUserAction\n  | SetCurrencyAction\n  | SetLangAction\n  | SetLoginNrAction\n  | SetPaymentCodeAction\n  | SetTokenAction\n  | SetUserAction;\n","import type { AxiosRequestConfig, GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport {\n  CLEAR_USER,\n  PersistedUser,\n  SET_CURRENCY,\n  SET_LANG,\n  SET_LOGIN_NR,\n  SET_TOKEN,\n  SET_USER,\n} from '../store/user/types';\nimport { api } from './consts';\nimport { Currency, Language } from './types';\n\nconst fetchAuthorize = (config?: AxiosRequestConfig) => api.get<PersistedUser | null>('/users/authenticate', config);\n\nexport const useHeadersActions = () => {\n  const dispatch = useContextSelector(StoreContext, c => c.dispatch.userDispatch);\n  const isLoggedIn = useContextSelector(StoreContext, c => !!c.state.user.user);\n\n  const setCurrency = (currency: Currency) => {\n    if (currency !== api.defaults.headers.common['X-Currency']) {\n      dispatch({ type: SET_CURRENCY, payload: { currency } });\n    }\n  };\n\n  const authorize = async (signal?: GenericAbortSignal) => {\n    let response;\n    try {\n      response = await fetchAuthorize({ signal });\n    } catch {\n      // @ts-expect-error hideTokenHash\n      response = await fetchAuthorize({ hideTokenHash: true, signal });\n    }\n    const data = response.data;\n    if (!data) {\n      return;\n    }\n    dispatch({ type: SET_USER, payload: { user: data } });\n    if (data.creditPrice) {\n      dispatch({\n        type: SET_LOGIN_NR,\n        payload: { loginNr: data.accountCode },\n      });\n    }\n    setCurrency(data.currency);\n    return data;\n  };\n\n  const setCaptcha = (hash: string) => {\n    if (!isLoggedIn) {\n      api.defaults.headers.common['X-ReCaptcha-Token'] = hash;\n    }\n  };\n\n  const setLanguage = (language: Language) => {\n    if (language !== api.defaults.headers.common['X-Lang']) {\n      dispatch({ type: SET_LANG, payload: { language } });\n    }\n  };\n\n  const setToken = async (token: string | null) => {\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n      dispatch({ type: SET_TOKEN, payload: { token } });\n      // eslint-disable-next-line @typescript-eslint/return-await\n      return await authorize();\n    } else {\n      delete api.defaults.headers.Authorization;\n      dispatch({ type: CLEAR_USER });\n    }\n  };\n\n  return {\n    authorize,\n    setCaptcha,\n    setCurrency,\n    setLanguage,\n    setToken,\n  };\n};\n\nconst useHeaders = () => {\n  const { currency, language, token } = useContextSelector(StoreContext, c => c.state.user);\n\n  return {\n    currency,\n    language: language || 'cs',\n    token,\n  };\n};\n\nexport default useHeaders;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { SET_LOGIN_NR, SET_PAYMENT_CODE, SET_USER } from '../store/user/types';\nimport { getErrorMessage, unusablePaymentMethods } from './consts';\nimport {\n  Currency,\n  DateString,\n  PaymentMethod,\n  StationCountry,\n  Tariff,\n} from './types';\nimport useBookingActions from './useBooking';\nimport { useHeadersActions } from './useHeaders';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface UserRegisterCommons {\n  firstName: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  company?: Company;\n  currency: Currency;\n}\n\nexport interface User extends UserRegisterCommons {\n  id: number;\n  accountCode: string;\n  restrictPhoneNumbers: boolean;\n  credit: number;\n  creditPrice: boolean;\n  defaultTariffKey: Tariff;\n  notifications: Notifications;\n  companyInformation: boolean;\n  conditionsAcceptance: boolean;\n  employeeNumber: null | string;\n}\n\nexport interface SimpleSignupPayload {\n  firstName: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  notifications: Notifications;\n  agreeWithTerms: boolean;\n}\n\nexport interface RegisterPayload extends UserRegisterCommons {\n  companyInformation: boolean;\n  defaultTariff: Tariff;\n  password: string;\n  notifications: Notifications;\n  agreeWithTerms: boolean;\n}\n\nexport interface LoginPayload {\n  accountCode: string;\n  password: string;\n}\n\nexport interface ChangeInfoPayload {\n  phoneNumber?: string;\n  restrictPhoneNumbers?: boolean;\n  companyInformation?: boolean;\n  company?: Company;\n  defaultTariffKey?: Tariff;\n  notifications?: Notifications;\n}\n\nexport interface ChangePasswordPayload {\n  newPassword: string;\n  oldPassword: string;\n}\n\nexport interface SignupData {\n  token: string;\n}\n\nexport interface ForgottenPasswordData {\n  accountCode: string;\n  email: string;\n  correlationId: string;\n}\n\nexport interface Company {\n  companyName: string;\n  address: string;\n  registrationNumber: string;\n  vatNumber: string;\n}\n\nexport interface Notifications {\n  newsletter: boolean;\n  reservationChange: boolean;\n  routeRatingSurvey: boolean;\n}\n\nexport interface PercentualDiscount {\n  dateFrom: DateString | null;\n  dateTo: DateString | null;\n  fromCityId: number | null;\n  fromCountry: null | StationCountry | 'EU';\n  fromStationId: number | null;\n  id: number;\n  passengers: number;\n  percentage: number;\n  state: 'VALID' | 'USED';\n  ticketId: number | null;\n  toCityId: number | null;\n  toCountry: null | StationCountry | 'EU';\n  toStationId: number | null;\n}\n\nexport const useUserActions = () => {\n  const setState = useSetResponseState(ResponseStateCategory.user);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.user],\n  );\n  const dispatch = useContextSelector(\n    StoreContext,\n    (c) => c.dispatch.userDispatch,\n  );\n  const user = useContextSelector(StoreContext, (c) => c.state.user.user);\n  const { setToken } = useHeadersActions();\n  const { clearBooking } = useBookingActions();\n\n  const [{ error: signupError, loading: signupLoading }, callRegistration] =\n    useManualApi<SignupData>({\n      url: '/users/signup/registeredAccount',\n      method: 'POST',\n    });\n\n  const [{ error: loginError, loading: loginLoading }, callLogin] =\n    useManualApi<SignupData>({\n      url: '/users/login/registeredAccount',\n      method: 'POST',\n    });\n  const [\n    { error: forgottenPasswordError, loading: forgottenPasswordLoading },\n    callForgottenPassword,\n  ] = useManualApi<ForgottenPasswordData>({\n    url: '/users/forgottenPassword',\n    method: 'POST',\n  });\n\n  const [\n    { error: loginTicketError, loading: loginTicketLoading },\n    callLoginTicket,\n  ] = useManualApi<SignupData>({\n    url: '/users/login/unregisteredAccount',\n    method: 'POST',\n  });\n\n  const [{ error: logoutError, loading: logoutLoading }, callLogout] =\n    useManualApi(\n      {\n        url: '/users/logout',\n        method: 'POST',\n        data: {},\n      },\n      { manual: true },\n    );\n\n  const [\n    { error: changeInfoError, loading: changeInfoLoading },\n    callChangeInfo,\n  ] = useManualApi({\n    url: '/users/settings/changeUserInformation',\n    method: 'PUT',\n  });\n\n  const [\n    { error: changePassError, loading: changePassLoading },\n    callChangePassword,\n  ] = useManualApi({\n    url: '/users/settings/changePassword',\n    method: 'PUT',\n  });\n\n  const [\n    { error: resetPassError, loading: resetPassLoading },\n    callResetPassword,\n  ] = useManualApi({\n    url: '/users/resetPassword',\n    method: 'POST',\n  });\n\n  const [\n    { error: resetPassVerifyError, loading: resetPassVerifyLoading },\n    callResetPasswordVerify,\n  ] = useManualApi({\n    url: '/users/resetPassword/verify',\n    method: 'GET',\n  });\n\n  const [{ error: qrError, loading: qrLoading, data: qrData }, getAccountQr] =\n    useManualApi({ url: '/tickets/account/qrcode', method: 'GET' });\n\n  const [\n    {\n      error: percDiscountsError,\n      loading: percDiscountsLoading,\n      data: percDiscountsData,\n    },\n    getPercDiscounts,\n  ] = useManualApi<PercentualDiscount[]>({\n    url: '/discounts/percentual',\n    method: 'GET',\n    headers: { Accept: 'application/1.1.0+json' },\n  });\n\n  const [\n    { error: registerOpenError, loading: registerOpenLoading },\n    callRegisterOpen,\n  ] = useManualApi<{ token: string }>({\n    url: '/users/signup/registeredAccount/simple',\n    method: 'POST',\n  });\n\n  const addLoginNumber = async (loginNr: string) =>\n    dispatch({ type: SET_LOGIN_NR, payload: { loginNr } });\n\n  const register = async (\n    payload: RegisterPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const { data, status } = await callRegistration({\n        data: payload,\n        signal,\n      });\n      if (status !== 200) {\n        return false;\n      }\n      await setToken(data.token);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const login = async (payload: LoginPayload, signal?: GenericAbortSignal) => {\n    try {\n      const response = await callLogin({ data: payload, signal });\n      const userData = await setToken(response.data.token);\n      return { response, user: userData };\n    } catch (e) {\n    }\n  };\n\n  const loginTicket = async (\n    accountCode: string,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const response = await callLoginTicket({ data: { accountCode }, signal });\n      const userData = await setToken(response.data.token);\n      return { response, user: userData };\n    } catch (e) {\n    }\n  };\n\n  const logout = async (signal?: GenericAbortSignal) => {\n    try {\n      await callLogout({ signal });\n      await setToken(null);\n      clearBooking();\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const registerOpenTicket = async (\n    data: SimpleSignupPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const response = await callRegisterOpen({ data, signal });\n      if (response.data.token) {\n        await setToken(response.data.token);\n      }\n\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const changeUserInfo = async (\n    changeInfoPayload: ChangeInfoPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      if (user) {\n        const {\n          companyInformation,\n          company,\n          defaultTariffKey,\n          notifications,\n          phoneNumber,\n        } = user;\n\n        await callChangeInfo({\n          data: {\n            companyInformation,\n            company,\n            defaultTariffKey,\n            notifications,\n            phoneNumber,\n            ...changeInfoPayload,\n          },\n          signal,\n        });\n\n        dispatch({\n          type: SET_USER,\n          payload: {\n            user: user && {\n              ...user,\n              ...changeInfoPayload,\n              company: changeInfoPayload.company\n                ? changeInfoPayload.company\n                : company,\n            },\n          },\n        });\n        return true;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const changeUserPassword = async (\n    changeInfoPayload: ChangePasswordPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await callChangePassword({ data: changeInfoPayload, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const requestPasswordReset = async (\n    data: ForgottenPasswordData,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await callForgottenPassword({ data, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const resetPassword = async (\n    newPassword: string,\n    token: string,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const headers = { Authorization: `Bearer ${token}` };\n\n      const { status: crpvStatus } = await callResetPasswordVerify({\n        headers,\n        signal,\n      });\n      const { status: crpStatus } = await callResetPassword({\n        data: { newPassword },\n        headers,\n        signal,\n      });\n      return crpvStatus === 200 && crpStatus === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const setPaymentCode = (paymentMethodCode: PaymentMethod | null) =>\n    (!paymentMethodCode ||\n      !unusablePaymentMethods.includes(paymentMethodCode)) &&\n    dispatch({ type: SET_PAYMENT_CODE, payload: { paymentMethodCode } });\n\n  const loading =\n    changeInfoLoading ||\n    changePassLoading ||\n    forgottenPasswordLoading ||\n    loginLoading ||\n    loginTicketLoading ||\n    logoutLoading ||\n    percDiscountsLoading ||\n    qrLoading ||\n    registerOpenLoading ||\n    resetPassLoading ||\n    resetPassVerifyLoading ||\n    signupLoading;\n\n  const error =\n    changeInfoError ||\n    changePassError ||\n    forgottenPasswordError ||\n    loginError ||\n    loginTicketError ||\n    logoutError ||\n    percDiscountsError ||\n    qrError ||\n    registerOpenError ||\n    resetPassError ||\n    resetPassVerifyError ||\n    signupError;\n\n  useEffect(() => {\n    setState(\n      error?.response?.data?.message || getErrorMessage(error),\n      loading,\n      error?.response?.data?.errorFields,\n    );\n  }, [error, loading]);\n\n  return {\n    addLoginNumber,\n    changeUserInfo,\n    changeUserPassword,\n    login,\n    loginTicket,\n    logout,\n    registerOpenTicket,\n    requestPasswordReset,\n    register,\n    resetPassword,\n    setPaymentCode,\n    accountQr: { getAccountQr, qrData },\n    percDiscounts: { getPercDiscounts, percDiscountsData },\n    ...categoryState,\n  };\n};\n\nconst useUser = () => {\n  const userObj = useContextSelector(StoreContext, (c) => c.state.user);\n\n  const { user } = userObj;\n  const isLoggedIn = !!user;\n  const isCreditPrice = !!user?.creditPrice;\n  const loginNumbers = userObj.loginNrs;\n\n  return {\n    isCreditPrice,\n    isLoggedIn,\n    loginNumbers,\n    user: userObj,\n  };\n};\n\nexport default useUser;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport axios, { isAxiosError } from 'axios';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { useImmer } from 'use-immer';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { FAIL_MESSAGE, api, getErrorMessage } from './consts';\nimport {\n  Currency,\n  DateString,\n  FlexiType,\n  RouteId,\n  SeatClass,\n  Tariff,\n  TicketState,\n  TicketType,\n} from './types';\nimport { TicketAddon } from './useAddons';\nimport { CarbonOffset, Section, TransfersInfo } from './useConnectionRoute';\nimport { Passenger } from './useCreateTickets';\nimport { SectionCommons } from './useSeats';\nimport useSetResponseState from './useSetResponseState';\nimport { PercentualDiscount } from './useUser';\n\nexport interface Bill {\n  amount: number;\n  currency: Currency;\n  label: string;\n}\n\nexport interface CustomerActions {\n  additionalServices: boolean;\n  cancel: boolean;\n  editPassengers: boolean;\n  evaluate: boolean;\n  pay: boolean;\n  payRemaining: boolean;\n  printInvoice: boolean;\n  printTicket: boolean;\n  rebook: boolean;\n  requiredToFillInQuestionnaire: boolean;\n  sentToMail: boolean;\n  showDetail: boolean;\n  storno: boolean;\n}\n\nexport interface TicketDescriptions {\n  cancel: string;\n  expiration: string;\n  rebook: string;\n}\n\nexport interface Conditions {\n  cancel?: DateString;\n  expireAt?: DateString;\n  coolingOff?: DateString;\n  departureCancel?: DateString;\n  expiration?: DateString;\n  cancellationFee?: number;\n  refundToOriginalSourcePossible?: boolean;\n}\n\nexport interface CodeDiscount {\n  code: string;\n  discount: number;\n  id: number;\n}\n\nexport interface TicketSection extends SectionCommons {\n  section: Section;\n}\n\nexport interface TimeTicket {\n  accountCode: string;\n  bills: Bill[];\n  conditions: Conditions;\n  customerActions: CustomerActions;\n  customerNotifications: string[] | null;\n  id: number;\n  name: string;\n  price: number;\n  seatClass: SeatClass;\n  state: TicketState;\n  station1Id: number;\n  station2Id: number;\n  surname: string;\n  tariff: { value: Tariff | null };\n  ticketCode: string;\n  type: FlexiType;\n  unpaid: number;\n  validFrom: DateString;\n  validTo: DateString;\n}\n\nexport interface SeatSroTicketCommons {\n  bills: Bill[];\n  currency: Currency;\n  customerActions: CustomerActions;\n  delay: string | null;\n  estimatedArrivalTime: DateString;\n  passengersInfo: { passengers: Passenger[] };\n  paymentId: number;\n  price: number;\n  routeSections: TicketSection[];\n  seatClassKey: SeatClass;\n  state: TicketState;\n  travelTime: string;\n  unpaid: number;\n}\n\nexport interface SeatTicket extends SeatSroTicketCommons {\n  addons: TicketAddon[] | null;\n  affiliateTicket: boolean | null;\n  cancelChargeSum: number | null;\n  cancelMoneyBackSum: number | null;\n  carbonOffset: CarbonOffset | null;\n  conditions: null | { descriptions: TicketDescriptions; code: string };\n  customerNotifications: string[] | null;\n  expirateAt: null | { days: number; hours: number; minutes: number };\n  expirationDate: DateString | null;\n  id: number;\n  routeId: RouteId;\n  surcharge: number;\n  ticketCode: string;\n  transfersInfo: TransfersInfo | null;\n  usedCodeDiscount: CodeDiscount | null;\n  usedPercentualDiscounts: PercentualDiscount[] | null;\n  wheelChairPlatformOrderPossible: boolean;\n  wheelChairPlatformOrdered: boolean;\n}\n\nexport interface SroTicket extends SeatSroTicketCommons {\n  affiliateTicket: boolean;\n  conditions: Conditions;\n  sroTicketId: number;\n}\n\nexport interface UserTicketsOptions {\n  limit: number;\n  sortDirection?: 'ASC' | 'DESC';\n}\n\nexport type FetchableTicketType = Exclude<TicketType, 'FLEXI'>;\n\nexport interface Tickets {\n  RJ_SEAT: SeatTicket[];\n  RJ_SRO: SroTicket[];\n  RJ_TIME: TimeTicket[];\n}\n\nexport type TicketsResponse =\n  | SeatTicket[]\n  | SroTicket[]\n  | { tickets: TimeTicket[] };\n\nexport const emptyTickets: Tickets = {\n  RJ_SEAT: [],\n  RJ_SRO: [],\n  RJ_TIME: [],\n};\n\nexport const emptyOffsets: Record<FetchableTicketType, number> = Object.freeze({\n  RJ_SEAT: 0,\n  RJ_SRO: 0,\n  RJ_TIME: 0,\n});\n\nexport const defaultOptions: Record<TicketState, UserTicketsOptions> = Object.freeze({\n  CANCELED: { limit: 10 },\n  UNPAID: { limit: 99, sortDirection: 'ASC' },\n  USED: { limit: 5 },\n  VALID: { limit: 10, sortDirection: 'ASC' },\n});\n\nconst ticketTypeToUrlPath = {\n  RJ_SEAT: '/tickets',\n  RJ_SRO: '/tickets/RJ_SRO',\n  RJ_TIME: '/tickets/RJ_TIME',\n};\n\nconst priceReducer =\n  (acc: number, { unpaid }: Tickets[FetchableTicketType][number]) =>\n    unpaid + acc;\n\nconst filterExpired = (t: Pick<SeatTicket, 'expirationDate'> & Pick<SroTicket, 'conditions'> & Pick<TimeTicket, 'conditions'>) =>\n  +new Date(t.expirationDate || t.conditions.expireAt || t.conditions.expiration || 0) >\n  +new Date().valueOf();\n\nconst polishData = (state: TicketState, { RJ_SEAT, RJ_SRO, RJ_TIME }: Tickets) => {\n  const addStateToTicket = (t: any) => ({ ...t, state });\n  if (state !== 'UNPAID') {\n    return {\n      RJ_SEAT: RJ_SEAT.map(addStateToTicket),\n      RJ_SRO: RJ_SRO.map(addStateToTicket),\n      RJ_TIME: RJ_TIME.map(addStateToTicket),\n    };\n  }\n  return {\n    RJ_SEAT: RJ_SEAT.map(addStateToTicket).filter(filterExpired),\n    RJ_SRO: RJ_SRO.map(addStateToTicket).filter(filterExpired),\n    RJ_TIME: RJ_TIME.map(addStateToTicket).filter(filterExpired),\n  };\n};\n\nconst polishSingleType = (state: TicketState, type: FetchableTicketType, tickets: any[]) => {\n  const addStateToTicket = (t: any) => ({ ...t, state });\n  if (state !== 'UNPAID') {\n    return tickets.map(addStateToTicket);\n  }\n  return tickets.filter(filterExpired).map(addStateToTicket);\n};\n\nconst useUserTickets = (\n  state: TicketState,\n  autoFetch = true,\n  options?: Partial<UserTicketsOptions>,\n) => {\n  const token = useContextSelector(StoreContext, c => c.state.user.token);\n  const interceptorsMounted = useContextSelector(StoreContext, c => c.interceptorsMounted);\n  const setState = useSetResponseState(\n    ResponseStateCategory.userTickets,\n  );\n  const error = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.userTickets].error,\n  );\n\n  const [tickets, setTickets] = useImmer<Tickets | undefined>(undefined);\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const maxTickets =\n    useRef<Record<FetchableTicketType, number>>(emptyOffsets);\n  const ticketsCount = useRef({ ...emptyOffsets });\n\n  if (tickets) {\n    ticketsCount.current.RJ_SEAT = tickets.RJ_SEAT.length;\n    ticketsCount.current.RJ_SRO = tickets.RJ_SRO.length;\n    ticketsCount.current.RJ_TIME = tickets.RJ_TIME.length;\n  }\n\n  const defaultParams = useMemo(() => ({\n    ...defaultOptions[state],\n    ...options,\n    ticketStates: [state],\n  }), [state]);\n\n  const shouldFetchMore = tickets ? {\n    RJ_SEAT: tickets.RJ_SEAT.length < maxTickets.current.RJ_SEAT,\n    RJ_SRO: tickets.RJ_SRO.length < maxTickets.current.RJ_SRO,\n    RJ_TIME: tickets.RJ_TIME.length < maxTickets.current.RJ_TIME,\n  } : {};\n\n  const totalPrice = useMemo(() =>\n    tickets ?\n      tickets.RJ_SEAT.reduce(priceReducer, 0) +\n      tickets.RJ_SRO.reduce(priceReducer, 0) +\n      tickets.RJ_TIME.reduce(priceReducer, 0)\n      : 0, [tickets],\n  );\n\n  const totalCount = maxTickets.current.RJ_SEAT +\n    maxTickets.current.RJ_SRO +\n    maxTickets.current.RJ_TIME;\n\n  const fetchedCount = loading || !tickets ? 0 :\n    tickets.RJ_SEAT.length + tickets.RJ_SRO.length + tickets.RJ_TIME.length;\n\n  const fetchTickets = useCallback(async (signal?: GenericAbortSignal, noLimitReset?: boolean) => {\n    try {\n      if (api.defaults.headers.Authorization) {\n        setState(undefined, false);\n        setLoading(true);\n        const [\n          { data: RJ_SEAT, headers: seatHeaders },\n          { data: RJ_SRO, headers: sroHeaders },\n          { data: rjTimeData, headers: timeHeaders },\n        ] = await Promise.all([\n          api.get<SeatTicket[]>(ticketTypeToUrlPath.RJ_SEAT, {\n            headers: {\n              'Accept': 'application/1.2.0+json',\n            },\n            params: noLimitReset && ticketsCount.current.RJ_SEAT ? {\n              ...defaultParams,\n              limit: ticketsCount.current.RJ_SEAT,\n            } : defaultParams,\n            signal,\n          }),\n          api.get<SroTicket[]>(ticketTypeToUrlPath.RJ_SRO, {\n            params: noLimitReset && ticketsCount.current.RJ_SRO ? {\n              ...defaultParams,\n              limit: ticketsCount.current.RJ_SRO,\n            } : defaultParams,\n            signal,\n          }),\n          api.get<{ tickets: TimeTicket[] }>(ticketTypeToUrlPath.RJ_TIME, {\n            params: noLimitReset && ticketsCount.current.RJ_TIME ? {\n              ...defaultParams,\n              limit: ticketsCount.current.RJ_TIME,\n            } : defaultParams,\n            signal,\n          }),\n        ]);\n\n        maxTickets.current = {\n          RJ_SEAT: parseInt(seatHeaders['x-pagination-total']!),\n          RJ_SRO: parseInt(sroHeaders['x-pagination-total']!),\n          RJ_TIME: parseInt(timeHeaders['x-pagination-total']!),\n        };\n        setTickets(polishData(state, { RJ_SEAT, RJ_SRO, RJ_TIME: rjTimeData.tickets }));\n        setLoading(false);\n      } else {\n        maxTickets.current = emptyOffsets;\n        setTickets(emptyTickets);\n      }\n      return true;\n    } catch (e) {\n      setLoading(false);\n      if (axios.isCancel(e)) {\n        return false;\n      }\n      maxTickets.current = emptyOffsets;\n      setTickets(undefined);\n      setState(isAxiosError(e) ?\n        e.response?.data.message || getErrorMessage(e)\n        : FAIL_MESSAGE, false);\n      return false;\n    }\n  }, [state]);\n\n  const fetchMore = useCallback(async (type: FetchableTicketType, signal?: GenericAbortSignal) => {\n    try {\n      if (api.defaults.headers.Authorization && tickets?.[type].length) {\n        setLoadingMore(true);\n        const { data } = await api.get(ticketTypeToUrlPath[type], {\n          params: { ...defaultParams, offset: tickets[type].length },\n          headers: type === 'RJ_SEAT' ? { 'Accept': 'application/1.2.0+json' } : undefined,\n          signal,\n        });\n\n        const fetchedTickets = polishSingleType(state, type, type === 'RJ_TIME' ? data.tickets : data);\n        if (!fetchedTickets.length) {\n          return;\n        }\n\n        setTickets(draft => {\n          draft?.[type].push(...fetchedTickets as any[]);\n        });\n        setLoadingMore(false);\n      } else {\n        maxTickets.current = emptyOffsets;\n        setTickets(undefined);\n      }\n    } catch (e) {\n      setTickets(undefined);\n      setState(isAxiosError(e) ?\n        e.response?.data.message || getErrorMessage(e)\n        : FAIL_MESSAGE, false);\n    }\n  }, [tickets, state]);\n\n  useEffect(() => {\n    if (autoFetch && api.defaults.headers.Authorization && interceptorsMounted) {\n      maxTickets.current = emptyOffsets;\n      setTickets(undefined);\n      fetchTickets();\n    } else if (!api.defaults.headers.Authorization) {\n      maxTickets.current = emptyOffsets;\n      setTickets(undefined);\n    }\n  }, [state, token, interceptorsMounted]);\n\n  return {\n    error,\n    fetchMore,\n    fetchTickets,\n    fetchedCount,\n    loading,\n    loadingMore,\n    shouldFetchMore,\n    tickets,\n    totalCount,\n    totalPrice,\n  };\n};\n\nexport default useUserTickets;\n","import { useEffect, useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { AxiosRequestConfig } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport {\n  DateString,\n  PaymentMethod,\n  PaymentType,\n  TicketState,\n  TicketType,\n} from './types';\nimport { useHeadersActions } from './useHeaders';\nimport { useManualApi } from './useManualApi';\nimport {\n  PassengerFieldsFromApi,\n  PassengerFieldsToSend,\n} from './usePassengersData';\nimport useSetResponseState from './useSetResponseState';\nimport { useUserActions } from './useUser';\nimport { emptyTickets, Tickets } from './useUserTickets';\nimport { basketItemsToTicketTypes, createTxToken, gtmPush } from './utils';\n\nexport interface TicketTypeId {\n  id: number;\n  type: TicketType;\n}\n\nexport interface Payment {\n  paymentMethodCode: PaymentMethod;\n  paymentType: PaymentType | null;\n  rememberCardEnabled: boolean;\n  active: boolean;\n  description: string;\n  deadline: DateString | null;\n  deadlineAt: number | null;\n}\n\nexport interface PaymentForm {\n  fieldName: string;\n  fieldType: PassengerFieldsFromApi;\n}\n\nexport interface PayResponse {\n  payRedirectUrl: string;\n  regiojetRedirectUrl: string;\n}\n\nexport interface AddGiftPayload {\n  certificate: string;\n  email: string;\n}\n\nexport type BuyTicketsType = 'credit' | 'payment';\n\nexport interface BuyTicketsResponse {\n  type: BuyTicketsType;\n  url: string | null;\n}\n\nconst API_CONFIG: AxiosRequestConfig = {\n  headers: { 'Content-Type': 'application/1.2.0+json' },\n  method: 'POST' as const,\n};\n\nconst usePayment = (\n  tickets: Tickets = emptyTickets,\n  credit = false,\n  ticketState: TicketState = 'UNPAID',\n) => {\n  const { authorize } = useHeadersActions();\n  const { setPaymentCode } = useUserActions();\n  const { user, paymentMethodCode } = useContextSelector(\n    StoreContext,\n    (c) => c.state.user,\n  );\n  const setState = useSetResponseState(ResponseStateCategory.payment);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.payment],\n  );\n\n  const ticketIds = basketItemsToTicketTypes(\n    ticketState === 'UNPAID'\n      ? tickets\n      : {\n          RJ_SEAT: tickets.RJ_SEAT.filter((t) => t.unpaid),\n          RJ_SRO: [],\n          RJ_TIME: [],\n        },\n  );\n\n  const [\n    {\n      data: paymentMethods,\n      error: paymentMethodsError,\n      loading: paymentMethodsLoading,\n    },\n    fetchPaymentMethods,\n  ] = useManualApi<Payment[]>({\n    headers: { 'Content-Type': 'application/1.1.0+json' },\n    method: 'POST',\n    url: '/payments/methods',\n  });\n\n  const [\n    { data: paymentForm, error: paymentFormError, loading: paymentFormLoading },\n    fetchPaymentForm,\n  ] = useManualApi<PaymentForm[]>({ method: 'POST', url: '/payments/form' });\n\n  const [{ error: payError, loading: payLoading }, fetchPay] =\n    useManualApi<PayResponse>({\n      url: '/payments/pay',\n      ...API_CONFIG,\n    });\n\n  const [{ error: giftAddError, loading: giftAddLoading }, fetchGiftAdd] =\n    useManualApi({\n      url: '/payments/credit/giftCertificate/add',\n      method: 'POST',\n    });\n\n  const [\n    { error: chargeCreditError, loading: chargeCreditLoading },\n    fetchChargeFromCredit,\n  ] = useManualApi<PaymentForm[]>({\n    url: '/payments/credit/charge',\n    ...API_CONFIG,\n  });\n\n  const getPaymentMethods = async (\n    ticketsTypeIds?: TicketTypeId[],\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetchPaymentMethods({\n        data: { ticketIds: credit ? [] : ticketsTypeIds || ticketIds },\n        signal,\n      });\n    } catch {}\n  };\n\n  const getPaymentForm = async (\n    ticket?: TicketTypeId,\n    manualPaymentMethodCode?: PaymentMethod,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const { data } = await fetchPaymentForm({\n        data: {\n          paymentMethodCode: manualPaymentMethodCode || paymentMethodCode,\n          ...(credit\n            ? { tickets: [] }\n            : { ticketIds: ticket ? [ticket] : ticketIds }),\n        },\n        headers: {\n          ...(!credit ? { 'Content-Type': 'application/1.1.0+json' } : {}),\n        },\n        signal,\n      });\n      return data;\n    } catch {}\n  };\n\n  const buyTickets = async (\n    rememberCard = false,\n    fields: Partial<Record<PassengerFieldsToSend, string>> = {},\n    boughtTickets: TicketTypeId[] | undefined = ticketIds,\n    fromCredit = false,\n    signal?: GenericAbortSignal,\n    useCreditChargeWithFormFields?: boolean\n  ): Promise<BuyTicketsResponse | null> => {\n    try {\n      const headers = { ...API_CONFIG.headers, 'X-TxToken': createTxToken() };\n\n      const { email = user?.email, ...restFields } = fields;\n\n      const formFields = [\n        { fieldType: PassengerFieldsFromApi.email, fieldValue: email },\n        ...Object.entries(restFields)\n          .filter(([, fieldValue]) => fieldValue)\n          .map(([k, fieldValue]) => ({\n            fieldType: PassengerFieldsFromApi[k as PassengerFieldsToSend],\n            fieldValue,\n          })),\n      ];\n\n      const correlationId = `tickets&${boughtTickets\n        .map((t) => `${t.type}=${t.id}`)\n        .join('&')}`;\n\n      if (user && fromCredit) {\n        await fetchChargeFromCredit({\n          data: { tickets: boughtTickets, ...(formFields?.length && useCreditChargeWithFormFields ? {formFields} : {}) },\n          headers,\n          signal,\n        });\n        await authorize(signal);\n\n        return { type: 'credit', url: correlationId };\n      }\n\n      const payload = {\n        correlationId,\n        formFields,\n        paymentMethodCode,\n        rememberCard,\n        tickets: boughtTickets,\n      };\n\n      gtmPush({ event: 'PAY', PAY: payload });\n\n      const { data } = await fetchPay({ data: payload, headers, signal });\n\n      return { type: 'payment', url: data.payRedirectUrl };\n    } catch {}\n\n    return null;\n  };\n\n  const addCreditByGift = async (\n    data: AddGiftPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetchGiftAdd({ data, signal });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const filteredPaymentMethods = useMemo(\n    () => paymentMethods?.filter((m) => m.active && m.paymentType),\n    [paymentMethods],\n  );\n\n  const error =\n    paymentMethodsError ||\n    paymentFormError ||\n    payError ||\n    giftAddError ||\n    chargeCreditError;\n\n  const loading =\n    paymentMethodsLoading ||\n    paymentFormLoading ||\n    payLoading ||\n    giftAddLoading ||\n    chargeCreditLoading;\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [error, loading]);\n\n  useEffect(() => {\n    if (\n      paymentMethodCode &&\n      filteredPaymentMethods?.length &&\n      !filteredPaymentMethods.some(\n        (m) => m.paymentMethodCode === paymentMethodCode,\n      )\n    ) {\n      setPaymentCode(null);\n    }\n  }, [filteredPaymentMethods]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    if (!credit && ticketIds?.length) {\n      fetchPaymentMethods({ data: { ticketIds }, signal });\n    } else if (credit) {\n      fetchPaymentMethods({ data: { ticketIds: [] }, signal });\n    }\n    return () => {\n      abortController.abort();\n    };\n  }, [tickets, credit]);\n\n  return {\n    addCreditByGift,\n    buyTickets,\n    getPaymentForm,\n    getPaymentMethods,\n    paymentForm,\n    paymentFormLoading,\n    paymentMethodsLoading,\n    paymentMethods: filteredPaymentMethods,\n    ticketsAvailable: !!ticketIds?.length,\n    ...categoryState,\n  };\n};\n\nexport default usePayment;\n","import { useMemo } from 'react';\nimport Fuse from 'fuse.js';\nimport deburr from 'lodash.deburr';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { langPriorityCountries } from './consts';\nimport { Language } from './types';\nimport useLocations, { ConnectionSearchCity, LocationStation } from './useLocations';\nimport { getPriorityInArray } from './utils';\n\nFuse.config.threshold = 0.2;\n\ntype Result = {\n  refIndex: number;\n  score?: number;\n};\n\nconst MIN_SEARCH_LENGTH = 3;\nconst MAX_SCORE_MATCH = 0.1;\n\nconst extractCountry = (text: string) => deburr(text.split(',')[1].trim());\n\nconst removeDashDeburr = (text: string) => {\n  const [cityName, stationName] = deburr(text.split(',')[0]).split(' - ');\n  if (!stationName) {\n    return [cityName, ...cityName.split(/[ -]/g)];\n  }\n  return [cityName, ...cityName.split(/[ -]/g), stationName];\n};\n\nconst startsWith = (searchString: string) => (name: string) =>\n  removeDashDeburr(name.toLowerCase())\n    .some(part => part.startsWith(searchString));\n\nconst nameOrAliasesStartWith =\n  (location: ConnectionSearchCity | LocationStation, searchString: string) => {\n    const { name, aliases } = location;\n    const startsWithFn = startsWith(searchString);\n    const stations: LocationStation[] | undefined = (location as ConnectionSearchCity).stations;\n    return startsWithFn(name) ||\n      stations?.some(s => startsWithFn(s.name)) ||\n      aliases.some(a => deburr(a.toLowerCase()).startsWith(searchString));\n  };\n\nconst sortStations = (locations: LocationStation[], searchString: string) =>\n  (a: Result, b: Result) => {\n    const locationA = locations[a.refIndex];\n    const locationB = locations[b.refIndex];\n    const startsWithDiff =\n      +nameOrAliasesStartWith(locationB, searchString) -\n      +nameOrAliasesStartWith(locationA, searchString);\n    if (!!startsWithDiff) {\n      return startsWithDiff;\n    }\n    // if the items do not match the search term enough, sort them by matching score\n    if (a.score! > MAX_SCORE_MATCH || b.score! > MAX_SCORE_MATCH) {\n      return a.score! - b.score!;\n    }\n    const significanceDiff = locationB.significance - locationA.significance;\n    // if the significance is equal, sort by score\n    if (!significanceDiff) {\n      return a.score! - b.score!;\n    }\n    // else sort by significance (show Prague first over Olomouc, etc.)\n    return significanceDiff;\n  };\n\nconst sortCities = (searchString: string, language: Language) =>\n  (a: ConnectionSearchCity & Result, b: ConnectionSearchCity & Result) => {\n    const startsWithDiff =\n      +nameOrAliasesStartWith(b, searchString) -\n      +nameOrAliasesStartWith(a, searchString);\n    if (!!startsWithDiff) {\n      return startsWithDiff;\n    }\n    // if the items do not match the search term enough, sort them by matching score\n    if (a.score! > MAX_SCORE_MATCH || b.score! > MAX_SCORE_MATCH) {\n      return a.score! - b.score!;\n    }\n    const significanceDiff = b.significance! - a.significance!;\n    // if the cities significance difference is too high (we want to prioritize Prague over Zilina,\n    // even if we have SK language set)\n    if (!!significanceDiff) {\n      return significanceDiff;\n    }\n    const priorityCountries = langPriorityCountries[language];\n    const priorityDiff = getPriorityInArray(priorityCountries, a.code) -\n      getPriorityInArray(priorityCountries, b.code);\n    // if the country has equal priority and city has equal significance, sort by score\n    if (!priorityDiff && !significanceDiff) {\n      return a.score! - b.score!;\n    }\n    // sort by country priority, based on device language set \n    // (e.g. show AT cities to AT users primarily)\n    return priorityDiff;\n  };\n\nconst useSearchLocations = (searchString: string) => {\n  const language = useContextSelector(StoreContext, c => c.state.user.language);\n  const shouldSearch = searchString.length >= MIN_SEARCH_LENGTH;\n  const { data } = useLocations();\n\n  const fuse = useMemo(\n    () =>\n      data ?\n        new Fuse(\n          data.map((c) => ({\n            country: extractCountry(c.name),\n            aliases: c.aliases.map(deburr),\n            name: removeDashDeburr(c.name),\n            fullName: deburr(c.name),\n            stations: c.stations.map((s) => ({\n              aliases: s.aliases.map(deburr),\n              name: removeDashDeburr(s.name),\n              fullName: deburr(s.name),\n            })),\n          })),\n          {\n            includeScore: true,\n            keys: [\n              { name: 'country', weight: 0.5 },\n              { name: 'fullName', weight: 0.5 },\n              { name: 'name', weight: 0.9 },\n              { name: 'aliases', weight: 0.2 },\n              { name: 'stations.name', weight: 0.8 },\n              { name: 'stations.fullName', weight: 0.4 },\n              { name: 'stations.aliases', weight: 0.2 },\n            ],\n          },\n        ) : undefined,\n    [data],\n  );\n\n  const filtered = useMemo<ConnectionSearchCity[]>(() => {\n    if (!shouldSearch || !fuse || !data?.length) {\n      return [];\n    }\n    const normalizedSearchString = deburr(searchString).trim().toLowerCase();\n    return fuse\n      .search(normalizedSearchString)\n      .map((citySearch) => {\n        const city = data![citySearch.refIndex];\n\n        if (!city.stations.length) {\n          return {\n            ...city,\n            refIndex: citySearch.refIndex,\n            score: citySearch.score,\n            significance: city.significance ?? 0,\n          };\n        }\n\n        const stationsFuse = new Fuse(\n          city.stations.map((s) => ({\n            country: citySearch.item.country,\n            aliases: s.aliases.map(deburr),\n            name: removeDashDeburr(s.name),\n            fullName: deburr(s.name),\n          })),\n          {\n            includeScore: true,\n            keys: ['name', 'aliases', 'fullName', 'country'],\n          },\n        );\n\n        const stations = stationsFuse\n          .search(normalizedSearchString)\n          .sort(sortStations(city.stations, normalizedSearchString))\n          .map((stationSearch) => city.stations[stationSearch.refIndex]);\n\n        return {\n          ...city,\n          refIndex: citySearch.refIndex,\n          score: citySearch.score,\n          significance: Math.max(...stations.map(({ significance }) => significance)),\n          stations,\n        };\n      })\n      .sort(sortCities(normalizedSearchString, language))\n      .slice(0, 6);\n  }, [fuse, shouldSearch && searchString]);\n\n  return {\n    filtered,\n    shouldSearch,\n  };\n};\n\nexport default useSearchLocations;","import type { GenericAbortSignal } from 'axios';\nimport { api } from './consts';\nimport { Currency, DateString, TicketType } from './types';\nimport { useManualApi } from './useManualApi';\n\ntype PaymentType = 'DIRECT' | 'CREDIT';\n\nexport enum Method {\n  ACCOUNT = 'ACCOUNT',\n  BANK_TRANSFER = 'BANK_TRANSFER',\n}\n\nexport interface PaymentData {\n  amount: number;\n  currency: Currency;\n  dateTransaction: DateString;\n  description: string;\n  isInvoiceAvailable: boolean;\n  isReceiptAvailable: boolean;\n  method: Method;\n  paymentId: number;\n  ticketId: number | null;\n  ticketType: TicketType | null;\n}\n\nexport interface PaymentsHistoryQuery {\n  dateFrom: DateString;\n  dateTo: DateString;\n  sortDirection: 'ASC' | 'DESC';\n  type: PaymentType[];\n}\n\nexport type InvoiceType = 'invoice' | 'receipt';\n\nconst LINES_PER_PAGE = 10;\n\nconst usePaymentsHistory = () => {\n  const [{ data, loading, error, response }, fetchPayments] = useManualApi<\n  PaymentData[]\n  >({\n    url: '/payments',\n    method: 'GET',\n    headers: { Accept: 'application/1.1.0+json' },\n  });\n  const pagination = +(response?.headers['x-pagination-total'] || 0);\n\n  const pages = Math.floor(pagination / LINES_PER_PAGE) + 1;\n\n  const fetchPaymentsHistory = async (\n    params: PaymentsHistoryQuery,\n    page = 0,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetchPayments({\n        params: {\n          ...params,\n          limit: LINES_PER_PAGE,\n          offset: page * LINES_PER_PAGE,\n        },\n        signal,\n      });\n    } catch (e) {}\n  };\n\n  const fetchInvoice = async (\n    paymentId: number,\n    routeType?: InvoiceType,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const matchedPayment = data?.find((p) => p.paymentId === paymentId);\n\n      const route =\n        routeType || (matchedPayment?.ticketId ? 'invoice' : 'receipt');\n      const url = `/payments/${paymentId}/print/${route}`;\n\n      const { data: invoiceData } = await api.get(url, { signal });\n      return invoiceData;\n    } catch (e) {}\n  };\n\n  const fetchInvoices = async (\n    paymentIds: number[],\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const { data: invoicesData } = await api.post(\n        '/payments/print/invoice',\n        { invoices: paymentIds },\n        { signal },\n      );\n      return invoicesData;\n    } catch (e) { }\n  };\n\n  return {\n    data,\n    error,\n    fetchInvoice,\n    fetchInvoices,\n    fetchPaymentsHistory,\n    loading,\n    pages,\n  };\n};\n\nexport default usePaymentsHistory;","import { useEffect, useState } from 'react';\nimport type { AxiosError, GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { api } from './consts';\nimport { SelectedSeat, Tariff } from './types';\nimport { Passenger } from './useCreateTickets';\nimport { useHeadersActions } from './useHeaders';\nimport { useApi, useManualApi } from './useManualApi';\nimport { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { createTxToken } from './utils';\n\ninterface OrderPlatformParams {\n  email: string;\n  phone: string;\n}\n\nexport type PassengersToStorno = Pick<Passenger, 'id' | 'tariff'>;\n\nconst useTicketActions = ({ id, type }: TicketTypeId, ticketCode?: string) => {\n  const { authorize } = useHeadersActions();\n  const setState = useSetResponseState(ResponseStateCategory.ticketAction);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.ticketAction],\n  );\n  const [customLoading, setCustomLoading] = useState(false);\n  const [customError, setCustomError] = useState<AxiosError<any>>();\n\n  const [{ error: sendMailError, loading: sendMailLoading }, fetchSendMail] =\n    useManualApi({ url: `/tickets/${type}/${id}/sendByEmail`, method: 'POST' });\n\n  const [{ error: getPdfError, loading: getPdfLoading }, getPdf] = useManualApi(\n    { url: `/tickets/${type}/${id}/pdf`, method: 'GET', responseType: 'blob' },\n  );\n\n  const [\n    { error: wheelChairPlatformError, loading: wheelChairPlatformLoading },\n    submitWheelChairPlatformOrder,\n  ] = useManualApi({\n    method: 'PUT',\n    url: `/tickets/${id}/submitWheelChairPlatformOrder`,\n  });\n\n  const [{ error: getQrError, loading: getQrLoading }, getQr] = useManualApi({\n    url: `/tickets${type === 'RJ_TIME' ? '/timeticket' : ''}/${id}/qrcode`,\n    method: 'GET',\n  });\n\n  const [{ data: questionnaireUrls }] = (ticketCode ? useApi : useManualApi)<\n  string[]\n  >({\n    url: `/tickets/${ticketCode}/questionnaireUrls`,\n    method: 'GET',\n  });\n\n  const [\n    { error: cancelSeatError, loading: cancelSeatLoading },\n    fetchCancelSeatTicket,\n  ] = useManualApi({\n    url: `/tickets/${id}/cancel`,\n    method: 'PUT',\n  });\n\n  const [\n    { error: cancelTimeError, loading: cancelTimeLoading },\n    fetchCancelTimeTicket,\n  ] = useManualApi({\n    url: `/tickets/timeticket/${id}`,\n    method: 'DELETE',\n  });\n\n  const [\n    { error: cancelSroError, loading: cancelSroLoading },\n    fetchCancelSroTicket,\n  ] = useManualApi({\n    url: `/tickets/RJ_SRO/${id}`,\n    method: 'DELETE',\n  });\n\n  const [\n    { error: refetchSeatTicketError, loading: refetchSeatTicketLoading },\n    refetchSeatTicket,\n  ] = useManualApi({\n    url: `/tickets/${id}`,\n    method: 'GET',\n    headers: {\n      Accept: 'application/1.2.0+json',\n    },\n  });\n\n  const qrText: string = [2, type, id].join(';');\n\n  const sendByEmail = async (email: string, signal?: GenericAbortSignal) => {\n    try {\n      await fetchSendMail({ data: { email }, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * @param ticketId\n   * @param passengersIds\n   * @param seatsForCancel\n   * [\n   * {sect[0].passenger[0].seats, sect[0].passenger[1].seats },\n   * {sect[1].passenger[0].seats, sect[1].passenger[1].seats }\n   * ]\n   * @param refundToOriginalSource\n   * For the first passenger we assign from seatsForCancel from the first routesection\n   * the first selectedSeat,\n   * from the second routesection we assign again the first selectedSeat.\n   * For the second passenger we assign from the first routesection second selectedSeat,\n   * from the second routesection we assign again the second selectedSeat and so on.\n   */\n  const partialCancel = async (\n    ticketId: number,\n    passengers: PassengersToStorno[],\n    seatsForCancel: SelectedSeat[][],\n    refundToOriginalSource = false,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      setCustomLoading(true);\n      let success = true;\n\n      const sendRequest = async (\n        passenger: PassengersToStorno,\n        index: number,\n      ): Promise<void> => {\n        try {\n          const data = seatsForCancel.map((seat) => seat[index]);\n          const response = await api.delete(\n            `/tickets/${ticketId}/passengers/${passenger.id}`,\n            {\n              data: { refundToOriginalSource, seats: data },\n              signal,\n            },\n          );\n          if (response.status < 200 || response.status >= 300) {\n            success = false;\n          }\n        } catch (e) {\n          success = false;\n        }\n      };\n\n      const disabledPassengers = passengers.filter(\n        (pass) => pass.tariff === Tariff.DisabledAttendance,\n      );\n      const otherPassengers = passengers.filter(\n        (pass) => pass.tariff !== Tariff.DisabledAttendance,\n      );\n      // Send requests for passengers with DisabledAttendance tariff first\n      await Promise.all(\n        disabledPassengers.map((passenger, index) =>\n          sendRequest(passenger, index),\n        ),\n      );\n      // Then send requests for the rest of the passengers\n      await Promise.all(\n        otherPassengers.map((passenger, index) =>\n          sendRequest(passenger, index + disabledPassengers.length),\n        ),\n      );\n      return { status: success };\n    } catch (e) {\n      setCustomError(e as AxiosError<any>);\n      return { status: false };\n    } finally {\n      setCustomLoading(false);\n    }\n  };\n\n  /**\n   * @param controlHash Required for seat reservation\n   * @param refundToOriginalSource should refund to credit or bank account\n   */\n  const cancel = async (\n    controlHash?: string,\n    refundToOriginalSource = false,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      const data = { controlHash, refundToOriginalSource };\n      let statusCode = 500;\n\n      switch (type) {\n        case 'RJ_SEAT': {\n          const { data: rjSeatData, status: refetchStatus } = await refetchSeatTicket({ signal });\n          const rjSeatDataToSend = refetchStatus >= 200 && refetchStatus < 300\n            ? {\n              controlHash: rjSeatData.conditions.code,\n              refundToOriginalSource,\n            }\n            : data;\n\n          const { status } = await fetchCancelSeatTicket({\n            data: rjSeatDataToSend,\n            signal,\n          });\n          statusCode = status;\n          break;\n        }\n        case 'RJ_TIME': {\n          const { status } = await fetchCancelTimeTicket({ signal });\n          statusCode = status;\n          break;\n        }\n        case 'RJ_SRO': {\n          const { status } = await fetchCancelSroTicket({\n            data,\n            headers: { 'X-TxToken': createTxToken() },\n            signal,\n          });\n          statusCode = status;\n          break;\n        }\n      }\n      await authorize(signal);\n\n      return { status: statusCode >= 200 && statusCode < 300 };\n    } catch (e) {\n    }\n  };\n\n  const getAppleWalletFile = async (\n    sectionId: number,\n    signal?: GenericAbortSignal,\n  ) => {\n    setCustomLoading(true);\n    try {\n      const { data } = await api.get(\n        `/apple-wallet/${ticketCode}/${sectionId}`,\n        {\n          headers: { Accept: 'application/vnd.apple.pkpass' },\n          responseType: 'blob',\n          signal,\n        },\n      );\n      return data;\n    } catch (e) {\n      setCustomError(e as AxiosError<any>);\n    } finally {\n      setCustomLoading(false);\n    }\n  };\n\n  const orderWheelChairPlatform = async (\n    data: OrderPlatformParams,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      submitWheelChairPlatformOrder({ data, signal });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const error =\n    sendMailError ||\n    getPdfError ||\n    getQrError ||\n    wheelChairPlatformError ||\n    cancelSeatError ||\n    cancelTimeError ||\n    cancelSroError ||\n    customError ||\n    refetchSeatTicketError;\n\n  const loading =\n    sendMailLoading ||\n    getPdfLoading ||\n    getQrLoading ||\n    wheelChairPlatformLoading ||\n    cancelSeatLoading ||\n    cancelTimeLoading ||\n    cancelSroLoading ||\n    customLoading ||\n    refetchSeatTicketLoading;\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [error, loading]);\n\n  return {\n    cancel,\n    getAppleWalletFile,\n    getPdf,\n    getQr,\n    orderWheelChairPlatform,\n    partialCancel,\n    qrText,\n    questionnaireUrls,\n    sendByEmail,\n    ...categoryState,\n  };\n};\n\nexport default useTicketActions;\n","import { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { REFRESH_COOLDOWN, REFUSE_UPSELL } from '../store/upsell/types';\nimport { api } from './consts';\nimport { SeatClass, TicketType } from './types';\nimport { PriceClass } from './useConnectionRoute';\nimport { getMoreExpensiveClass, gtmPush } from './utils';\n\nlet acceptedClass: SeatClass;\nlet priceDifference: number;\n\nexport interface UpsellData {\n  priceDiff: number;\n  upsellClass: PriceClass;\n}\n\n/**\n * Call any function only after shouldBeShown is true\n */\nconst useUpsell = () => {\n  const dispatch = useContextSelector(StoreContext, c => c.dispatch.upsellDispatch);\n  const cooldownTs = useContextSelector(StoreContext, c => c.state.upsell.cooldownTs);\n\n  const refuseUpsell = () => dispatch({ type: REFUSE_UPSELL });\n\n  const acceptUpsell = () =>\n    gtmPush({\n      event: 'ACCEPT_UPSELL',\n      ACCEPT_UPSELL: {\n        acceptedClass,\n        priceDiff: priceDifference,\n        currency: api.defaults.headers.common['X-Currency'],\n      },\n    });\n\n  const shouldShowUpsell = (\n    selectedClassKey: SeatClass,\n    priceClasses: PriceClass[],\n    ticketType: TicketType,\n  ): UpsellData | null => {\n    dispatch({ type: REFRESH_COOLDOWN });\n    const upsellClass = getMoreExpensiveClass(selectedClassKey, priceClasses);\n\n    if (\n      !upsellClass ||\n      cooldownTs > new Date().valueOf() ||\n      ticketType !== 'RJ_SEAT'\n    ) {\n      return null;\n    }\n\n    const priceDiff =\n      upsellClass.price -\n      (priceClasses.find((pc) => pc.seatClassKey === selectedClassKey)?.price ||\n        0);\n\n    acceptedClass = upsellClass.seatClassKey;\n    priceDifference = priceDiff;\n\n    return { priceDiff, upsellClass };\n  };\n\n  return { acceptUpsell, refuseUpsell, shouldShowUpsell };\n};\n\nexport default useUpsell;\n","import { useState } from 'react';\nimport { Axios, AxiosError, isAxiosError, type GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { FAIL_MESSAGE, api, getErrorMessage } from './consts';\nimport { TicketType } from './types';\nimport { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { Tickets } from './useUserTickets';\nimport { gtmPush } from './utils';\n\nconst typeToUrl = Object.freeze({\n  FLEXI: '/',\n  RJ_SEAT: '/tickets/',\n  RJ_SRO: '/tickets/RJ_SRO/',\n  RJ_TIME: '/tickets/timetickets/',\n});\n\nconst useTickets = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.ticket,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.ticket],\n  );\n  const [tickets, setTickets] = useState<Tickets>();\n\n  const fetchTickets = async (ticketTypes: TicketTypeId[], signal?: GenericAbortSignal) => {\n    setState(undefined, true);\n\n    if (!ticketTypes.length) {\n      setTickets(undefined);\n      setState(undefined, false);\n      return true;\n    }\n\n    const ticketIndices: Record<TicketType, number[]> =\n      { RJ_SEAT: [], RJ_TIME: [], RJ_SRO: [], FLEXI: [] };\n    ticketTypes.forEach((ticketType, i) => ticketIndices[ticketType.type].push(i));\n\n    try {\n      const ticketResponses = await Promise.all(\n        ticketTypes.map(({ id, type }) => api.get(typeToUrl[type] + id, {\n          signal,\n          headers: type === 'RJ_SEAT' ? { 'Accept': 'application/1.3.0+json' } : undefined,\n        })),\n      );\n\n      const responses = ticketResponses.map((response) => response.data);\n\n      const fetchedTickets: Tickets = {\n        RJ_SEAT: responses.filter((_, i) => ticketIndices.RJ_SEAT.includes(i)),\n        RJ_TIME: responses.filter((_, i) => ticketIndices.RJ_TIME.includes(i)),\n        RJ_SRO: responses.filter((_, i) => ticketIndices.RJ_SRO.includes(i)),\n      };\n\n      gtmPush({ event: 'BOUGHT_TICKETS', BOUGHT_TICKETS: fetchedTickets });\n\n      setTickets(fetchedTickets);\n      setState(undefined, false);\n\n      return true;\n    } catch (e) {\n      setState(\n        isAxiosError(e) ?\n          e.response?.data.message || getErrorMessage(e)\n          : FAIL_MESSAGE, false);\n\n      return false;\n    }\n  };\n\n  return { fetchTickets, tickets, ...categoryState };\n};\n\nexport default useTickets;\n","import { useEffect } from 'react';\nimport { DateString } from './types';\nimport { useApi, useManualApi } from './useManualApi';\nimport { TimetablesResponse } from './useTimetables';\n\nexport type LineCode = 'WEB' | 'WEB1';\n\nexport interface Station {\n  stationId: number;\n  departure: string;\n  arrival: string;\n  platform: string;\n}\n\nexport interface TimetableSymbol {\n  mark: string;\n  description: string;\n}\n\nexport interface TimeCodeItem {\n  type: 'INCLUDING' | 'INCLUDING_ALSO' | 'EXCLUDING';\n  from: DateString;\n  to: DateString;\n}\n\nexport interface TimeCode {\n  mark: number;\n  description: string;\n  items: TimeCodeItem[];\n}\n\nconst headers = { 'X-Application-Origin': 'WEB' };\n\nexport interface UseTimetablesParams {\n  code: LineCode;\n  number: number;\n  timeTableId: number\n}\n\nconst useLineTimetables = (\n  { code, number, timeTableId }: UseTimetablesParams,\n  fetchAdditionalInfo?: boolean,\n) => {\n  const [{ error, loading, data = [] }] = useApi<TimetablesResponse[]>({\n    url: `/consts/timetables/${code}/${number}`,\n    method: 'GET',\n    headers,\n  });\n\n  const [{ data: symbols = [] }, fetchSymbols] = useManualApi<\n  TimetableSymbol[]\n  >({\n    url: `/consts/timetables/${timeTableId}/symbols`,\n    method: 'GET',\n    headers,\n  });\n\n  const [{ data: timeCodes = [] }, fetchCodes] = useManualApi<TimeCode[]>({\n    url: `/consts/timetables/${timeTableId}/time-codes`,\n    method: 'GET',\n    headers,\n  });\n\n  useEffect(() => {\n    if (!fetchAdditionalInfo) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchSymbols({ signal });\n    fetchCodes({ signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [fetchAdditionalInfo]);\n\n  return { error, loading, data, symbols, timeCodes };\n};\n\nexport default useLineTimetables;\n","import React, { ReactNode, useEffect } from 'react';\nimport StoreProvider, { PersistedState, StoreProviderProps } from '../store/rootReducer';\nimport { api, Env, envUrls } from './consts';\nimport { PersistContextCache, PersistContextProvider } from './PersistContext';\n\nexport interface PersistConfig {\n  getItem: () => PersistedState;\n  setItem: (o: Partial<PersistedState>) => void;\n}\n\ninterface ShopProviderProps extends StoreProviderProps {\n  children?: ReactNode;\n  env?: Env;\n  verbose?: boolean;\n  cache?: PersistContextCache;\n  applicationOrigin?: string;\n}\n\nconst ShopProvider: React.FC<ShopProviderProps> = ({\n  children,\n  env = Env.QA,\n  verbose,\n  cache,\n  applicationOrigin = 'WEB',\n  ...rest\n}) => {\n  api.defaults.baseURL = envUrls[env];\n  api.defaults.headers['X-Application-Origin'] = applicationOrigin;\n\n  useEffect(() => {\n    if (verbose) {\n      const reqInterceptor = api.interceptors.request.use((req) => {\n        const { baseURL, data, headers, params, url } = req;\n        // eslint-disable-next-line no-console\n        console.log('Req: ', { baseURL, data, headers, params, url });\n        return req;\n      });\n      const resInterceptor = api.interceptors.response.use((res) => {\n        const { baseURL, params, url } = res.request ?? {};\n        const { status, data, headers } = res;\n        // eslint-disable-next-line no-console\n        console.log('Res: ', { baseURL, data, headers, params, status, url });\n        return res;\n      }, (e) => {\n        // eslint-disable-next-line no-console\n        console.log('Res error: ', e, JSON.stringify(e, null, 2));\n        throw e;\n      });\n\n      return () => {\n        api.interceptors.request.eject(reqInterceptor);\n        api.interceptors.response.eject(resInterceptor);\n      };\n    }\n  }, [verbose]);\n\n  return (\n    <StoreProvider {...rest}>\n      <PersistContextProvider cache={cache}>{children}</PersistContextProvider>\n    </StoreProvider>\n  );\n};\n\nexport default ShopProvider;\n","import { useMemo } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\n\nconst useBookingPrice = () => {\n  const thereAddons = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.selectedAddons,\n  );\n  const backAddons = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.back?.selectedAddons,\n  );\n  const therePrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.price,\n  );\n  const backPrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.back?.price,\n  );\n  const backCarbonOffsetPrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.carbonOffset?.amount,\n  );\n  const thereCarbonOffsetPrice = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.carbonOffset?.amount,\n  );\n  //eslint-disable-next-line no-console\n  console.log('🚀 ~ useBookingPrice ~ backCarbonOffsetPrice:', backCarbonOffsetPrice);\n  //eslint-disable-next-line no-console\n  console.log('🚀 ~ useBookingPrice ~ thereCarbonOffsetPrice:', thereCarbonOffsetPrice);\n  const addonsPrice = useMemo(\n    () =>\n      [...(thereAddons || []), ...(backAddons || [])].reduce(\n        (prev, curr) => prev + (curr.price * curr.count),\n        0,\n      ),\n    [thereAddons, backAddons],\n  );\n\n  const bookingPrice = (therePrice ?? 200) + (backPrice ?? 200);\n\n  const CarbonOffsetPrice = (backCarbonOffsetPrice ?? 0) + (thereCarbonOffsetPrice ?? 0);\n\n  const totalPrice = bookingPrice + addonsPrice + CarbonOffsetPrice;\n\n  return { addonsPrice, backPrice, bookingPrice, therePrice, totalPrice, CarbonOffsetPrice };\n};\n\nexport default useBookingPrice;\n","import { useEffect } from 'react';\nimport { VehicleType } from './types';\nimport { useManualApi } from './useManualApi';\n\nexport interface CityPair {\n  departureCityId: number;\n  arrivalCityId: number;\n  numberOfTransfers: number;\n  transportTypes: VehicleType[];\n  iataCodesForDepartureCity: string[];\n  iataCodesForArrivalCity: string[];\n}\n\nconst useCityPairs = (cityId: number) => {\n  const [{ data: cityPairs = [], loading }, fetchFromCityPairs] = useManualApi<\n  CityPair[]\n  >({ method: 'GET', url: '/consts/cityPairs' });\n\n  useEffect(() => {\n    if (!cityId) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchFromCityPairs({ params: { fromCityId: cityId }, signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [cityId]);\n\n  return { cityPairs, loading };\n};\n\nexport default useCityPairs;\n","import { useEffect } from 'react';\nimport type { AxiosRequestConfig, GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { BookingContext } from '../store/booking/reducer';\nimport { BookingProps } from '../store/booking/types';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport {\n  DateString,\n  FlexiType,\n  RouteId,\n  RouteSectionFromTo,\n  SeatClass,\n  SelectedSeat,\n  Tariff,\n} from './types';\nimport { SelectedAddon } from './useAddons';\nimport useBookingActions from './useBooking';\nimport { useHeadersActions } from './useHeaders';\nimport { useManualApi } from './useManualApi';\nimport { Passengers } from './usePassengersData';\nimport usePayment, { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { SroTicket, TicketSection } from './useUserTickets';\nimport { createTxToken, getAffiliateCode, getNewSeats } from './utils';\n\nexport interface CreateSeatTicketData {\n  ticketRequests: SeatTicketRequest[];\n  affiliateCode?: string;\n}\n\nexport interface TimeTicketCreateRequest {\n  lineGroupCode: string;\n  lineNumber: number;\n  station1Id: number;\n  station2Id: number;\n  tariff: Tariff;\n  validFrom: DateString;\n}\n\nexport interface RegisteredTimeTicketCreateRequest\n  extends TimeTicketCreateRequest {\n  seatClass: SeatClass;\n  type: FlexiType;\n}\n\nexport interface UnregisteredTimeTicketCreateRequest\n  extends TimeTicketCreateRequest {\n  email: string;\n  seatClassKey: SeatClass;\n  timeTicketType: FlexiType;\n}\n\nexport interface CreateUnregTimeTicketData {\n  unregisteredTimeTicketCreateRequest: UnregisteredTimeTicketCreateRequest[];\n}\n\nexport interface CreateRegTimeTicketData {\n  timeTicketRequests: RegisteredTimeTicketCreateRequest[];\n}\n\nexport interface PassengerRequest extends PassengerData {\n  tariff: Tariff;\n}\n\nexport interface Passenger {\n  amount: number;\n  dateOfBirth: null;\n  email: string | null;\n  firstName: string | null;\n  id: number;\n  moneyBack: number;\n  phone: string | null;\n  surname: string | null;\n  tariff: Tariff;\n}\n\nexport interface SeatTicketRequest {\n  codeDiscount?: string;\n  passengers: PassengerRequest[];\n  percentualDiscountIds: number[];\n  route: Route;\n  selectedAddons: SelectedAddon[];\n}\n\nexport interface CreateSroTicketData {\n  ticketRequests: SroTicketRequest[];\n}\n\nexport interface SroTicketRequest {\n  passengers: { email: string }[];\n  priceSourceId: string;\n  routeId: string;\n  seatClass: SeatClass;\n  sections: SectionElement[];\n}\n\nexport interface PassengerData {\n  email?: string;\n  firstName?: string;\n  phone?: string;\n  surname?: string;\n  id?: number;\n}\n\nexport interface Route {\n  actionPrice?: ActionPrice;\n  priceSource: string;\n  routeId: RouteId;\n  seatClass: SeatClass;\n  sections: SectionElement[];\n}\n\nexport interface ActionPrice {\n  code: string;\n  description: string;\n  id: number;\n  name: string;\n  showIcon: boolean;\n  url: string;\n}\n\nexport interface SectionElement {\n  section: RouteSectionFromTo;\n  selectedSeats: SelectedSeat[];\n}\n\nexport interface SeatSroTicket {\n  id: string;\n  routeSections: TicketSection[];\n}\n\nexport interface UnregisteredSeatSroTicketData {\n  token: string;\n  tickets: SeatSroTicket[];\n}\n\nexport interface RegisteredSeatTicketData {\n  tickets: SeatSroTicket[];\n}\n\nexport interface UnregisteredTimeTicketData {\n  token: { token: string };\n}\n\nconst fetchSroTickets = (config?: AxiosRequestConfig) =>\n  api.get<SroTicket[]>('/tickets/RJ_SRO', {\n    params: { limit: 1, ticketStates: ['UNPAID'] },\n    ...config,\n  });\n\n/**\n * Reserving tickets and charging credit if there's enough credit in account\n */\nconst useCreateTickets = () => {\n  const isLoggedIn = useContextSelector(\n    StoreContext,\n    (c) => !!c.state.user.user,\n  );\n  const { setToken } = useHeadersActions();\n  const setState = useSetResponseState(ResponseStateCategory.createTickets);\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    (c) => c.state[ResponseStateCategory.createTickets],\n  );\n  const { clearBooking } = useBookingActions();\n  const bookingThere = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there,\n  );\n  const bookingBack = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.back,\n  );\n  const connection = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.connection,\n  );\n  const carbonOffset = useContextSelector(\n    BookingContext,\n    (c) => c.state.booking?.there?.carbonOffset,\n  );\n\n  const {\n    buyTickets,\n    loading: paymentLoading,\n    error: paymentError,\n  } = usePayment();\n\n  const bookingPriceWithoutAddons =\n    (bookingThere?.price ?? 0) + (bookingBack?.price ?? 0);\n\n  const [\n    {\n      loading: unregisteredSeatTicketLoading,\n      error: unregisteredSeatTicketError,\n    },\n    fetchUnregisteredSeatTicket,\n  ] = useManualApi<UnregisteredSeatSroTicketData>({\n    url: '/tickets/create/unregistered',\n    method: 'POST',\n    headers: { 'Content-Type': 'application/1.2.0+json' },\n  });\n\n  const [\n    { loading: registeredSeatTicketLoading, error: registeredSeatTicketError },\n    fetchRegisteredSeatTicket,\n  ] = useManualApi<RegisteredSeatTicketData>({\n    url: '/tickets/create/registered',\n    method: 'POST',\n    headers: { 'Content-Type': 'application/1.2.0+json' },\n  });\n\n  const [\n    {\n      loading: unregisteredTimeTicketLoading,\n      error: unregisteredTimeTicketError,\n    },\n    fetchUnregisteredTimeTicket,\n  ] = useManualApi<UnregisteredTimeTicketData>({\n    url: '/tickets/timetickets/unregistered',\n    method: 'POST',\n  });\n\n  const [\n    { loading: registeredTimeTicketLoading, error: registeredTimeTicketError },\n    fetchRegisteredTimeTicket,\n  ] = useManualApi<number[]>({ url: '/tickets/timeticket', method: 'POST' });\n\n  const [\n    {\n      loading: unregisteredSroTicketLoading,\n      error: unregisteredSroTicketError,\n    },\n    fetchUnregisteredSroTicket,\n  ] = useManualApi<Pick<UnregisteredSeatSroTicketData, 'token'>>({\n    url: '/tickets/RJ_SRO/unregistered',\n    method: 'POST',\n  });\n\n  const [\n    { loading: registeredSroTicketLoading, error: registeredSroTicketError },\n    fetchRegisteredSroTicket,\n  ] = useManualApi<{ message: string; messageFields: string[] }>({\n    url: '/tickets/RJ_SRO/registered',\n    method: 'POST',\n  });\n\n  /**\n   * Tries to reserve tickets on ybus from all finished bookings.\n   * Returns route. If it redirects to checkout, it can also returns SelectedSeats,\n   * if there's new seats selected by ybus to inform user.\n   *\n   * @param passengers Its length has to match booking tariffs length\n   * @param chargeImmediately Set true only when user has enough credit and has fast booking\n   */\n  const createTickets = async (\n    email: string,\n    passengers: Passengers[],\n    phone?: string,\n    chargeImmediately?: boolean,\n    signal?: GenericAbortSignal,\n  ): Promise<{\n    newSeats: SelectedSeat[];\n    redirect: 'tickets' | 'checkout' | 'cart' | '';\n    ticketTypeId?: TicketTypeId[];\n  }> => {\n    try {\n      if (!connection) {\n        throw new Error('no connection');\n      }\n      const allBookings = [bookingThere, bookingBack].filter(\n        Boolean,\n      ) as BookingProps[];\n      const rjSeatBookings = allBookings.filter((b) => b.type === 'RJ_SEAT');\n      const rjSroBookings = allBookings.filter((b) => b.type === 'RJ_SRO');\n      const rjTimeBookings = allBookings.filter((b) =>\n        ['RJ_TIME', 'FLEXI'].includes(b.type!),\n      );\n\n      let newSeats: SelectedSeat[] | null = null;\n      let ticketTypeId: TicketTypeId[] | undefined = undefined;\n\n      const getTicketPassengers = (tariffs: Tariff[]) =>\n        !passengers.length\n          ? tariffs.map((tariff, i) => ({\n            tariff,\n            ...(i ? {} : { phone, email }),\n          }))\n          : passengers.map(({ fields }, i) => ({\n            ...fields,\n            tariff: tariffs[i] || Tariff.Regular,\n            phone: i ? undefined : phone,\n            email: i ? undefined : email,\n          }));\n\n      const rjSeatPayload: CreateSeatTicketData = {\n        ticketRequests: rjSeatBookings.map((b) => ({\n          passengers: getTicketPassengers(b?.tariffs || []),\n          route: {\n            routeId: b?.routeId || '',\n            priceSource: b?.priceSource || '',\n            sections: (b?.sections || []).map(\n              ({ sectionId, fromStationId, toStationId, selectedSeats }) => ({\n                section: { fromStationId, sectionId, toStationId },\n                selectedSeats: (selectedSeats || []).map((selectedSeat) => ({\n                  ...selectedSeat,\n                  sectionId,\n                })),\n              }),\n            ),\n            seatClass: b?.seatClass || SeatClass.No,\n          },\n          selectedAddons: (b?.selectedAddons || []).map(\n            ({ addonCode, ...a }) => a,\n          ),\n          percentualDiscountIds: b.percentualDiscountIds || [],\n          codeDiscount: b.codeDiscount,\n        })),\n        affiliateCode: getAffiliateCode(),\n      };\n\n      const reqSeats = rjSeatPayload.ticketRequests.flatMap((tr) =>\n        tr.route.sections.flatMap((s) => s.selectedSeats),\n      );\n\n      const rjSroPayload: CreateSroTicketData = {\n        ticketRequests: rjSroBookings.map((b) => ({\n          routeId: b.routeId!,\n          seatClass: b.seatClass!,\n          passengers: (b?.tariffs || []).map(() => ({ email })),\n          sections: (b?.sections || []).map(\n            ({ sectionId, fromStationId, toStationId, selectedSeats }) => ({\n              section: { fromStationId, sectionId, toStationId },\n              selectedSeats: (selectedSeats || []).map((selectedSeat) => ({\n                ...selectedSeat,\n                sectionId,\n              })),\n            }),\n          ),\n          priceSourceId: b.priceSource!,\n        })),\n      };\n\n      const rjTimeUnregPayload: CreateUnregTimeTicketData = {\n        unregisteredTimeTicketCreateRequest: rjTimeBookings.map((b) => ({\n          email,\n          lineGroupCode: b.lineGroupCode!,\n          lineNumber: b.lineNumber!,\n          seatClassKey: b.seatClass!,\n          station1Id: b.fromStationId!,\n          station2Id: b.toStationId!,\n          tariff: b.tariffs![0]!,\n          timeTicketType: b.flexiType || 'FLEX',\n          validFrom: connection.departureDate!,\n        })),\n      };\n\n      const rjTimeRegPayload: CreateRegTimeTicketData = {\n        timeTicketRequests: rjTimeBookings.flatMap((b) =>\n          (b.tariffs || []).map((tariff) => ({\n            lineGroupCode: b.lineGroupCode!,\n            lineNumber: b.lineNumber!,\n            seatClass: b.seatClass!,\n            station1Id: b.fromStationId!,\n            station2Id: b.toStationId!,\n            tariff,\n            type: b.flexiType || 'FLEX',\n            validFrom: connection.departureDate!,\n          })),\n        ),\n      };\n\n      if (isLoggedIn) {\n        let regRjSeatData: RegisteredSeatTicketData = { tickets: [] };\n\n        if (rjSeatBookings.length) {\n          const { data } = await fetchRegisteredSeatTicket({\n            data: rjSeatPayload,\n            signal,\n          });\n          regRjSeatData = data;\n\n          ticketTypeId = data.tickets.map(({ id }) => ({\n            type: 'RJ_SEAT',\n            id: parseInt(id, 10),\n          }));\n\n          const respSeats = regRjSeatData.tickets.flatMap((t) =>\n            t.routeSections.flatMap((rs) => rs.selectedSeats),\n          );\n\n          /* Don't buy if price is 0 - bookings are bought automatically */\n          if (\n            rjSeatBookings.reduce(\n              (totalPrice, { price }) => totalPrice + (price || 0),\n              0,\n            ) === 0\n          ) {\n            return {\n              redirect: 'tickets',\n              newSeats: getNewSeats(reqSeats, respSeats),\n              ticketTypeId,\n            };\n          }\n\n          if (chargeImmediately) {\n            const response = await buyTickets(\n              false,\n              // @ts-expect-error Override is allowed\n              { email, phone, ...(passengers?.[0]?.fields || {}) },\n              ticketTypeId,\n              true,\n              signal,\n            );\n\n            clearBooking();\n\n            if (!response) {\n              return {\n                redirect: 'checkout',\n                newSeats: [],\n                ticketTypeId,\n              };\n            }\n\n            return {\n              redirect: 'tickets',\n              newSeats: getNewSeats(reqSeats, respSeats),\n              ticketTypeId,\n            };\n          }\n        }\n\n        if (rjTimeBookings.length) {\n          const { data } = await fetchRegisteredTimeTicket({\n            data: rjTimeRegPayload,\n            headers: {\n              'X-TxToken': createTxToken(),\n              'Content-Type': 'application/1.2.0+json',\n            },\n            signal,\n          });\n          if (chargeImmediately) {\n            ticketTypeId = data.map((id) => ({ type: 'RJ_TIME', id }));\n            await buyTickets(\n              false,\n              passengers[0].fields,\n              ticketTypeId,\n              true,\n              signal,\n            );\n\n            clearBooking();\n            return { redirect: 'tickets', newSeats: [], ticketTypeId };\n          }\n        }\n\n        if (rjSroBookings.length) {\n          await fetchRegisteredSroTicket({\n            data: rjSroPayload,\n            headers: { 'X-TxToken': createTxToken() },\n            signal,\n          });\n\n          if (chargeImmediately) {\n            const { data } = await fetchSroTickets();\n\n            ticketTypeId = data.map((t) => ({\n              type: 'RJ_SRO',\n              id: t.sroTicketId,\n            }));\n\n            await buyTickets(\n              false,\n              passengers[0].fields,\n              ticketTypeId,\n              true,\n              signal,\n            );\n\n            clearBooking();\n            return { redirect: 'tickets', newSeats: [], ticketTypeId };\n          }\n        }\n\n        const respSeats = regRjSeatData.tickets.flatMap((t) =>\n          t.routeSections.flatMap((rs) => rs.selectedSeats),\n        );\n\n        newSeats = getNewSeats(reqSeats, respSeats);\n      } else {\n        let token = null;\n\n        if (rjSeatBookings.length) {\n          const { data } = await fetchUnregisteredSeatTicket({\n            data: { ...rjSeatPayload, agreeWithTerms: true },\n            signal,\n          });\n\n          ticketTypeId = data.tickets.map(({ id }) => ({\n            id: parseInt(id, 10),\n            type: 'RJ_SEAT',\n          }));\n\n          /**\n           * Soft booking can book other seat than selected. We need to inform user about it\n           */\n          const respSeats = data.tickets.flatMap((t) =>\n            t.routeSections.flatMap((rs) => rs.selectedSeats),\n          );\n          newSeats = getNewSeats(reqSeats, respSeats);\n\n          token = data.token;\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        }\n\n        if (rjTimeBookings.length) {\n          if (!token) {\n            const { data } = await fetchUnregisteredTimeTicket({\n              data: rjTimeUnregPayload,\n              headers: {\n                'Content-Type': 'application/1.2.0+json',\n                'X-TxToken': createTxToken(),\n              },\n              signal,\n            });\n            token = data.token.token;\n            api.defaults.headers.Authorization = `Bearer ${data.token.token}`;\n          } else {\n            await fetchRegisteredTimeTicket({\n              data: rjTimeRegPayload,\n              headers: { 'X-TxToken': createTxToken() },\n              signal,\n            });\n          }\n        }\n\n        if (rjSroBookings.length) {\n          if (!token) {\n            const { data } = await fetchUnregisteredSroTicket({\n              data: { ...rjSroPayload, agreeWithTerms: true },\n              headers: { 'X-TxToken': createTxToken() },\n              signal,\n            });\n            token = data.token;\n            api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          } else {\n            await fetchRegisteredSroTicket({\n              data: rjSroPayload,\n              headers: { 'X-TxToken': createTxToken() },\n              signal,\n            });\n          }\n        }\n\n        await setToken(token);\n      }\n\n      clearBooking();\n      return {\n        redirect: bookingPriceWithoutAddons ? 'cart' : 'tickets',\n        newSeats: newSeats || [],\n        ticketTypeId,\n      };\n    } catch {\n      return { redirect: '', newSeats: [] };\n    }\n  };\n\n  const errorData =\n    unregisteredTimeTicketError ||\n    unregisteredSeatTicketError ||\n    unregisteredSroTicketError ||\n    registeredSroTicketError ||\n    registeredTimeTicketError ||\n    registeredSeatTicketError;\n\n  const loading =\n    unregisteredTimeTicketLoading ||\n    unregisteredSeatTicketLoading ||\n    unregisteredSroTicketLoading ||\n    registeredSroTicketLoading ||\n    registeredTimeTicketLoading ||\n    registeredSeatTicketLoading ||\n    paymentLoading;\n\n  useEffect(() => {\n    setState(\n      errorData?.response?.data?.message || paymentError?.message,\n      loading,\n    );\n  }, [errorData, loading]);\n\n  return { createTickets, ...categoryState };\n};\n\nexport default useCreateTickets;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { useManualApi } from './useManualApi';\nimport {\n  PassengerFieldsFromApi,\n  PassengerFieldsToSend,\n} from './usePassengersData';\nimport { TicketTypeId } from './usePayment';\nimport useSetResponseState from './useSetResponseState';\nimport { Tickets } from './useUserTickets';\nimport { basketItemsToTicketTypes, gtmPush } from './utils';\n\n/**\n * Adding user credit\n */\nconst useCredit = (\n  unpaidTickets: Tickets,\n) => {\n  const user = useContextSelector(StoreContext, c => c.state.user);\n  const currency = useContextSelector(StoreContext, c => c.state.user.currency);\n  const setState = useSetResponseState(\n    ResponseStateCategory.credit,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.credit],\n  );\n\n  const [{ error, loading }, fetchAddCredit] = useManualApi<{\n    payRedirectUrl: string;\n  }>({\n    url: '/payments/credit/add',\n    method: 'POST',\n  });\n\n  const addCredit = async (\n    amount: number,\n    rememberCard: boolean,\n    chargeTickets = false,\n    tickets: TicketTypeId[] | undefined = undefined,\n    fields: Partial<Record<PassengerFieldsToSend, string>> = {},\n    signal?: GenericAbortSignal,\n  ) => {\n    if (user.user) {\n      const ticketsCorrelation = chargeTickets\n        ? (tickets ? tickets : basketItemsToTicketTypes(unpaidTickets))\n          .map((t) => `${t.type}=${t.id}`)\n          .join('&')\n        : null;\n\n      try {\n        const payload = {\n          amount: currency === 'EUR' ? parseFloat(amount.toFixed(1)) : amount,\n          currency,\n          paymentMethodCode: user.paymentMethodCode,\n          correlationId: `credit${ticketsCorrelation ? `&${ticketsCorrelation}` : ''\n          }`,\n          formFields: [\n            {\n              fieldType: PassengerFieldsFromApi.email,\n              fieldValue: fields?.email || user.user.email,\n            },\n            fields.firstName && {\n              fieldType: PassengerFieldsFromApi.firstName,\n              fieldValue: fields.firstName,\n            },\n            fields.surname && {\n              fieldType: PassengerFieldsFromApi.surname,\n              fieldValue: fields.surname,\n            }, fields.customerName && {\n              fieldType: PassengerFieldsFromApi.customerName,\n              fieldValue: fields.customerName,\n            }, fields.customerAddress && {\n              fieldType: PassengerFieldsFromApi.customerAddress,\n              fieldValue: fields.customerAddress,\n            },\n          ].filter(Boolean),\n          rememberCard,\n        };\n\n        gtmPush({ event: 'ADD_CREDIT', ADD_CREDIT: payload });\n\n        const { data } = await fetchAddCredit({ data: payload, signal });\n\n        return data.payRedirectUrl;\n      } catch (e) { }\n    }\n  };\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, loading);\n  }, [error, loading]);\n\n  return { addCredit, ...categoryState };\n};\n\nexport default useCredit;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { StoreContext } from '../store/rootReducer';\nimport { api } from './consts';\nimport { DateString, VehicleKey } from './types';\nimport { useApi } from './useManualApi';\n\nexport interface Departure {\n  busConnectionId: number;\n  label: string;\n  number: null | string;\n  delay: number;\n  vehicleCategory: 'COACH' | 'RAIL_CAR';\n  freeSeatsCount: number;\n  connectionStations: ConnectionStation[];\n  type: 'RJ' | 'R' | 'WB';\n  vehicleStandard: VehicleKey;\n}\n\nexport interface ConnectionStation {\n  stationId: number;\n  arrival: DateString | null;\n  departure: DateString | null;\n  platform: null | string;\n  departingStation: boolean;\n}\n\nconst useDepartures = (stationId: number, limit = 10) => {\n  const language = useContextSelector(\n    StoreContext,\n    (c) => c.state.user.language,\n  );\n  const [{ loading, error, data }, fetchDepartures] = useApi<Departure[]>({\n    headers: { Accept: 'application/1.1.0+json' },\n    method: 'GET',\n    url: `/routes/${stationId}/departures?limit=${limit}`,\n  });\n\n  useEffect(() => {\n    api.defaults.headers.common['X-Lang'] =\n      language === 'de-AT' ? 'at' : language;\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchDepartures({ signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [language]);\n\n  return { data, error, fetchDepartures, loading };\n};\n\nexport default useDepartures;\n","import { useMemo } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { FlexiResponse, RoutePayload } from './useConnectionRoute';\nimport { useManualApi } from './useManualApi';\nimport { isRegional } from './utils';\n\nconst useFlexiTickets = () => {\n  const [{ data, loading }, fetchClasses] = useManualApi<FlexiResponse[]>({});\n\n  const fetchRoute =\n    async (params: RoutePayload, departureDate: string, signal?: GenericAbortSignal) => {\n      try {\n        const { routeId, fromStationId, toStationId, tariffs } = params;\n\n        if (!isRegional(fromStationId, toStationId) ||\n          tariffs.length !== 1) {\n          return true;\n        }\n        await fetchClasses({\n          signal,\n          url: `/pricelists/timeticket/${routeId}/${fromStationId}/${toStationId}/FLEX/${departureDate}/${tariffs[0]}`,\n        });\n        return true;\n      } catch (e) {\n        return false;\n      }\n    };\n\n  return useMemo(() => ({\n    data,\n    fetchRoute,\n    loading,\n  }), [loading, data]);\n};\n\nexport default useFlexiTickets;","import { DateString } from './types';\nimport { LineCode } from './useLineTimetables';\nimport { useApi } from './useManualApi';\n\nexport interface LineDetail {\n  lineGroupCode: LineCode;\n  lineNumber: number;\n  name: string;\n  timeTable: number;\n  validFrom: DateString;\n  validTo: DateString;\n}\n\n/**\n * Hook for handling line detail (timetables, valid from, valid to)\n * @param stationId\n */\nconst useLines = (stationId: number) => {\n  const [{ data = [], loading }] = useApi<LineDetail[]>({\n    url: `/consts/lines/${stationId}`,\n    headers: { 'X-Application-Origin': 'WEB' },\n    method: 'GET',\n  });\n\n  return {\n    data: data.filter(({ lineGroupCode }) =>\n      ['WEB', 'WEB1'].includes(lineGroupCode),\n    ),\n    loading,\n  };\n};\n\nexport default useLines;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport PersistContext from './PersistContext';\nimport { SeatClass } from './types';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface SeatClassData {\n  vehicleClass: '1' | '2' | 'undefined';\n  key: SeatClass;\n  title: string;\n  shortDescription: string;\n  description: string;\n  imageUrl: null | string;\n  galleryUrl: null | string;\n}\n\ntype FormattedSeatClasses = Record<SeatClass, SeatClassData>;\n\nconst useSeatClasses = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.seatClasses,\n  );\n  const categoryState = useContextSelector(ResponseStateContext, c =>\n    c.state[ResponseStateCategory.seatClasses],\n  );\n\n  const { error, loading } = useContextSelector(PersistContext, c =>\n    c.seatClassesResponse,\n  );\n  const data = useContextSelector(PersistContext, c =>\n    c.seatClasses,\n  );\n\n  const formattedData = data?.reduce((\n    acc: FormattedSeatClasses,\n    seatClass: SeatClassData,\n  ) => {\n    acc[seatClass.key] = seatClass;\n\n    return acc;\n  }, {} as FormattedSeatClasses);\n\n  useEffect(() => {\n    setState(error?.response?.data.message, !!loading);\n  }, [setState, error, loading]);\n\n  return { data: formattedData, ...categoryState };\n};\n\nexport default useSeatClasses;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport {\n  SeatClass,\n  SeatSectionBasic,\n  SelectedSeat,\n  Tariff,\n  VehicleType,\n  VehicleKey,\n} from './types';\nimport { Service } from './useConnectionRoute';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface PreselectedSeat extends SelectedSeat {\n  vehicleDeckNumber: number;\n}\n\nexport interface SectionCommons {\n  fixedSeatReservation: boolean;\n  selectedSeats: SelectedSeat[];\n  vehicles: Vehicle[];\n}\n\nexport interface SeatSection extends SectionCommons {\n  selectedSeats: PreselectedSeat[];\n  sectionId: number;\n}\n\nexport interface VehicleService {\n  code: string;\n  name: string;\n  imageCode: Service;\n}\n\nexport interface VehicleSeatClass {\n  name: SeatClass;\n  services: VehicleService[];\n}\n\nexport interface Vehicle {\n  id: number;\n  code: string | null;\n  type: VehicleType;\n  number: number;\n  seatClasses: VehicleSeatClass[];\n  standard: VehicleKey;\n  notifications: string[];\n  cateringEnabled: boolean;\n  decks: Deck[];\n}\n\nexport interface Deck {\n  number: number;\n  name: string;\n  layoutURL: string;\n  freeSeats: Seat[];\n  occupiedSeats: Seat[];\n}\n\nexport interface Seat {\n  index: number;\n  seatClass: SeatClass;\n  seatConstraint: null | string;\n  seatNotes: string[];\n}\n\nexport interface SeatsPayload {\n  seatClass: SeatClass;\n  sections: SeatSectionBasic[];\n  tariffs: Tariff[];\n}\n\ntype Options = {\n  ignoreGlobalState?: boolean;\n};\n\nconst useSeats = (options?: Options) => {\n  const [{ data, error, loading }, fetch] = useManualApi<SeatSection[]>({\n    method: 'POST',\n  });\n  const setState = useSetResponseState(ResponseStateCategory.seats);\n  const categoryState = useContextSelector(ResponseStateContext, (c) =>\n    options?.ignoreGlobalState\n      ? undefined\n      : c.state[ResponseStateCategory.seats],\n  );\n\n  const fetchSeats = async (\n    reqData: SeatsPayload,\n    signal?: GenericAbortSignal,\n  ) => {\n    try {\n      await fetch({\n        url: '/routes/freeSeats',\n        data: reqData,\n        headers: { 'Content-Type': 'application/json' },\n        signal,\n      });\n\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (options?.ignoreGlobalState) {\n      return;\n    }\n    setState(error?.response?.data?.message, loading);\n  }, [options?.ignoreGlobalState, error, loading]);\n\n  return {\n    data,\n    fetchSeats,\n    error,\n    loading,\n    ...categoryState,\n  };\n};\n\nexport default useSeats;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport PersistContext from './PersistContext';\nimport { Tariff } from './types';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface TariffResponse {\n  key: Tariff;\n  value: string;\n}\n\nconst useTariffs = () => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.tariffs,\n  );\n  const categoryState = useContextSelector(\n    ResponseStateContext,\n    c => c.state[ResponseStateCategory.tariffs],\n  );\n\n  const { error, loading } = useContextSelector(PersistContext, c => c.tariffsResponse);\n  const data = useContextSelector(PersistContext, c => c.tariffs);\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, !!loading);\n  }, [error, loading]);\n\n  return { data, ...categoryState };\n};\n\nexport default useTariffs;\n","import { useEffect } from 'react';\nimport type { GenericAbortSignal } from 'axios';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport { StoreContext } from '../store/rootReducer';\nimport { useManualApi } from './useManualApi';\nimport useSetResponseState from './useSetResponseState';\nimport { gtmPush } from './utils';\n\nexport interface Review {\n  sectionId: number;\n  fields: QuestionField[];\n}\n\nexport interface QuestionField {\n  questionId: number;\n  type: 'RADIO_BUTTON' | 'TEXT';\n  text: string;\n  options: Option[];\n}\n\nexport interface Option {\n  text: string;\n  answerId: number;\n}\n\nexport interface RatingPayload {\n  forms: Form[];\n}\n\nexport interface Form {\n  sectionId: number;\n  form: FormFields;\n}\n\nexport interface FormFields {\n  fields: AnswerField[];\n}\n\nexport interface AnswerField {\n  questionId: number;\n  text: string;\n  answerId?: number | null;\n}\n\ninterface TicketReviewParams {\n  ticketId: number;\n  luh?: string;\n}\n\nconst useTicketReview = ({ ticketId, luh }: TicketReviewParams) => {\n  const setState = useSetResponseState(ResponseStateCategory.ticketReview);\n  const token = useContextSelector(StoreContext, c => c.state.user.token);\n\n  const [\n    { data: authData, loading: authLoading, error: authError },\n    fetchReviewAuth,\n  ] = useManualApi<{ token: string }>({\n    url: `/tickets/authenticate/${luh}`,\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    data: {},\n  });\n\n  const [{ loading, ...reviewForm }, fetchReviewForm] = useManualApi<Review[]>({\n    url: `tickets/${ticketId}/rating`,\n    method: 'GET',\n  });\n\n  const [{ loading: putLoading, error }, putReviewForm] = useManualApi<\n  Review[]\n  >({\n    url: `tickets/${ticketId}/rating`,\n    method: 'PUT',\n  });\n\n  const sendReview = async (data: RatingPayload, signal?: GenericAbortSignal) => {\n    try {\n      await putReviewForm({\n        data,\n        headers: luh\n          ? { Authorization: `Bearer ${authData?.token}` }\n          : undefined,\n        signal,\n      });\n      gtmPush({ event: 'SENT_REVIEW', SENT_REVIEW: data });\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    if (luh && authData?.token) {\n      fetchReviewForm({\n        headers: { Authorization: `Bearer ${authData?.token}` },\n        signal,\n      });\n    } else if (!luh && token) {\n      fetchReviewForm({ signal });\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [authData?.token]);\n\n  useEffect(() => {\n    if (!luh) {\n      return;\n    }\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetchReviewAuth({ signal });\n    return () => {\n      abortController.abort();\n    };\n  }, [luh]);\n\n  useEffect(() => {\n    setState(\n      reviewForm.error?.response?.data?.message ||\n      authError?.response?.data?.message ||\n      error?.response?.data?.message,\n      authLoading || loading || putLoading,\n    );\n  }, [reviewForm.error, authError, error, loading, authLoading, loading]);\n\n  return {\n    reviewForm,\n    loading: authLoading || loading || putLoading,\n    sendReview,\n  };\n};\n\nexport default useTicketReview;\n","import { ConnectionDirection } from '../store/booking/types';\nimport { DateString } from './types';\nimport useLocations from './useLocations';\nimport { useApi } from './useManualApi';\n\nexport interface TimetablesResponse {\n  connectionCode: string;\n  connectionId: number;\n  direction?: ConnectionDirection;\n  fromCityName: string;\n  stations: Station[];\n  symbols?: string[];\n  timeCodes?: number[];\n  timetableId: number;\n  toCityName: string;\n  validFrom: DateString;\n  validTo: DateString;\n  carrierId: number;\n}\n\nexport interface Station {\n  stationId: number;\n  departure?: string;\n  arrival?: string;\n  platform?: string;\n  symbols?: string[];\n}\n\n/**\n * Hook for handling line detail (all stations, coordinates, images etc.)\n * @param sectionId\n */\nconst useTimetables = (sectionId: number) => {\n  const { getStation } = useLocations();\n  const [{ error, loading, data }] = useApi<TimetablesResponse>({\n    url: `/consts/timetables/${sectionId}`,\n    method: 'GET',\n  });\n\n  const stations = (data?.stations || []).map((station) => ({\n    ...station,\n    ...getStation(station.stationId)!,\n  }));\n\n  return {\n    error,\n    loading,\n    stations,\n    fromCityName: data?.fromCityName,\n    toCityName: data?.toCityName,\n    carrierId: data?.carrierId,\n  };\n};\n\nexport default useTimetables;\n","export const REFRESH_COOLDOWN = 'REFRESH_COOLDOWN';\nexport const REFUSE_UPSELL = 'REFUSE_UPSELL';\n\nexport interface RefreshCooldownUpsell {\n  type: typeof REFRESH_COOLDOWN;\n}\n\nexport interface RefuseUpsellAction {\n  type: typeof REFUSE_UPSELL;\n}\n\nexport interface UpsellReducerProps {\n  displayCount: number;\n  cooldownTs: number;\n}\n\nexport type UpsellActions = RefreshCooldownUpsell | RefuseUpsellAction;\n","import { useEffect } from 'react';\nimport { useContextSelector } from 'use-context-selector';\nimport { ResponseStateContext } from '../store/responseState/reducer';\nimport { ResponseStateCategory } from '../store/responseState/types';\nimport PersistContext from './PersistContext';\nimport { VehicleKey } from './types';\nimport useSetResponseState from './useSetResponseState';\n\nexport interface VehicleStandard {\n  key: VehicleKey;\n  name: string;\n  shortDescription: string;\n  description: string;\n  imageUrl: string;\n  supportImageUrl: string;\n  galleryUrl: null | string;\n}\n\ntype FormattedVehicleStandards = Record<VehicleKey, VehicleStandard>;\n\ninterface UseVehicleStandardsReturnType {\n  data: FormattedVehicleStandards | undefined;\n  error?: { message?: string };\n  loading: boolean;\n}\n\nconst useVehicleStandards = (): UseVehicleStandardsReturnType => {\n  const setState = useSetResponseState(\n    ResponseStateCategory.vehicleStandards,\n  );\n  const categoryState = useContextSelector(ResponseStateContext, (c) =>\n    c.state[ResponseStateCategory.vehicleStandards],\n  );\n  const { error, loading } = useContextSelector(PersistContext, (c) =>\n    c.vehicleStandardsResponse,\n  );\n  const data = useContextSelector(PersistContext, (c) =>\n    c.vehicleStandards,\n  );\n\n  const formattedData = data?.reduce((\n    acc: FormattedVehicleStandards,\n    vehicle: VehicleStandard,\n  ) => {\n    acc[vehicle.key] = vehicle;\n\n    return acc;\n  }, {} as FormattedVehicleStandards);\n\n  useEffect(() => {\n    setState(error?.response?.data?.message, !!loading);\n  }, [setState, error, loading]);\n\n  return { data: formattedData, ...categoryState };\n};\n\nexport default useVehicleStandards;\n"],"names":["Tariff","SeatClass","PaymentType","VehicleKey","PaymentMethod","_Object$freeze","Env","ResponseStateCategory","_responseStateInitial","envUrls","Object","freeze","PROD","QA","DEV","paramsSerializer","serialize","params","qs","stringify","indices","api","axios","create","baseURL","timeout","headers","transitional","clarifyTimeoutError","resInterceptor","onUnauthorized","interceptors","response","use","defaults","common","error","_error$response","isCancel","Promise","resolve","status","reject","e","bodyHashEndpoints","getHashedData","data","hash","shaObj","JsSHA","cleanedData","JSON","setHMACKey","update","getHMAC","reqInterceptor","request","req","_req$headers","_req$url","token","Authorization","split","hideTokenHash","url","includes","Referer","TIMEOUT_MESSAGE","FAIL_MESSAGE","NETWORK_MESSAGE","getErrorMessage","code","AxiosError","ERR_CANCELED","ETIMEDOUT","ECONNABORTED","ERR_NETWORK","langPriorityCountries","cs","de","en","hu","pl","sk","uk","unusablePaymentMethods","Cash","Transfer","Giftcertificate","basketItemsToTicketTypes","tickets","entries","reduce","prev","_ref","type","ticketList","length","push","apply","map","_ref2","id","sroTicketId","createTxToken","result","rest","number","Date","valueOf","remainder","Math","floor","characters","i","mapFieldToUser","EMAIL","FIRST_NAME","SURNAME","couchetteClasses","getMoreExpensiveClass","baseClass","priceClasses","actualClassIndex","findIndex","pc","seatClassKey","actualClass","moreExpensiveClass","price","actionPrice","gtmPush","payload","_window$dataLayer","window","dataLayer","event","getAffiliateCode","affiliateCode","localStorage","getItem","parseInt","removeItem","r8Stations","r23Stations","isRegional","fromStationId","toStationId","getNewSeats","reqSeats","respSeats","equal","filter","respSeat","some","reqSeat","getPriorityInArray","arr","item","indexOf","depArrSections","s","sectionId","departureStationId","arrivalStationId","addonCode","prependAll","lowerCaseAddon","toLowerCase","arr1","arr2","sorted1","sort","sorted2","every","lat1","lon1","lat2","lon2","p","a","cos","asin","sqrt","CLEAR_BOOKING","REPLACE_TARIFFS","SAVE_CONNECTION","SELECT_ADDONS","SELECT_CLASS","SELECT_CODE_DISCOUNT","SELECT_PERC_DISCOUNT","SELECT_ROUTE","SELECT_SEATS","SET_PRICE","UPSELL_ADDONS","_excluded","_excluded2","_excluded3","_excluded4","bookingInitialState","booking","fav","BookingContext","createContext","bookingReducer","draft","action","_action$payload","_gtmPush","direction","_extends","currency","_draft$booking","tariffs","connection","isReturn","returnDepartureDate","there","back","ignoreFavorite","fromLocationId","fromLocationType","toLocationId","toLocationType","favoriteIndex","splice","unshift","_action$payload2","_objectWithoutPropertiesLoose","nextBooking","bookingState","seatClass","undefined","sections","priceSource","selectedAddons","passengers","_action$payload3","_draft$booking2","_action$payload4","_draft$booking3","_action$payload5","seats","_draft$booking4","_draft$booking5","selectedSeats","seat","_action$payload6","_draft$booking6","_draft$booking7","_action$payload7","_draft$booking8","percentualDiscountIds","discountAmount","_draft$booking9","_draft$booking10","_action$payload8","codeDiscount","_draft$booking11","_action$payload9","_draft$booking12","_action$payload10","_action$payload11","_draft$booking13","BookingProvider","children","persistConfig","persist","_useImmerReducer","useImmerReducer","bookings","state","dispatch","useEffect","setItem","interceptorId","eject","value","useMemo","React","createElement","Provider","responseStateInitialState","addons","loading","connectionRoute","createTickets","credit","locations","passengersData","payment","ticket","ticketAction","userTickets","useTicketsType","user","ticketReview","vehicleStandards","seatClasses","ResponseStateContext","responseStateReducer","newState","keys","forEach","ResponseStateProvider","responseState","upsellInitialState","cooldownTs","displayCount","upsellReducer","userReducer","language","paymentMethodCode","loginNrs","Array","from","Set","loginNr","concat","slice","StoreContext","upsellDispatch","userDispatch","interceptorsMounted","upsell","StoreProvider","transportHash","_ref$lang","lang","_useImmerReducer2","generateUserInitialState","_useState","useState","setInterceptorsMounted","reqIID","resIID","useApi","makeUseAxios","useManualApi","defaultOptions","manual","PersistContext","useHandleApiResponse","cacheKey","cacheRef","cache","_cache$setItem","current","useHandleApiError","refetch","interval","setInterval","clearInterval","PersistContextProvider","_useContextSelector","useContextSelector","c","locationsCacheSetForLang","useRef","tariffsCacheSetForLang","seatClassesCacheSetForLang","vehicleStandardsCacheSetForLang","_useApi","locationsResponse","refetchLocations","_useApi2","tariffsResponse","refetchTariffs","_useApi3","seatClassesResponse","refetchSeatClasses","_useApi4","vehicleStandardsResponse","refetchVehicleStandards","fetchedForLanguage","abortController","AbortController","signal","all","then","abort","flatMap","cities","city","aliases","name","country","placeType","stations","st","countryCode","fullname","types","stationsTypes","flattenLocations","useSetResponseState","category","message","errorFields","useBookingActions","directionProp","_c$state$booking3","clearBooking","dir","createBooking","replaceTariffs","selectAddons","selectClass","selectRoute","selectSeats","upsellAddons","useLocations","priorityCountries","setState","categoryState","_useContext","useContext","_useContext$locations","getStation","useCallback","stationId","_iterator","_step","_createForOfIteratorHelperLoose","done","_step2","_iterator2","station","cityId","cityName","getCity","find","b","significance","getDestination","destinationId","_getStation","PassengerFieldsFromApi","PassengerFieldsToSend","croatiaNotSroStations","additionalStationsMap","routesURL","versionHeaders","Accept","additionalStationsArrivalCountries","mapPassengerData","CUSTOMER_ADDRESS","customerAddress","CUSTOMER_NAME","customerName","email","firstName","PHONE","phone","surname","BIRTHDAY","dateOfBirth","typesToIgnore","FlexiType","emptyArr","departureDate","flexiTypes","Week","Month","Quarter","SET_LOGIN_NR","SET_USER","fetchAuthorize","config","get","useHeadersActions","isLoggedIn","setCurrency","authorize","_temp2","creditPrice","accountCode","_temp","_fetchAuthorize","_catch","_fetchAuthorize2","setCaptcha","setLanguage","setToken","useUserActions","_useManualApi","method","_useManualApi$","signupError","signupLoading","callRegistration","_useManualApi2","_useManualApi2$","loginError","loginLoading","callLogin","_useManualApi3","_useManualApi3$","forgottenPasswordError","forgottenPasswordLoading","callForgottenPassword","_useManualApi4","_useManualApi4$","loginTicketError","loginTicketLoading","callLoginTicket","_useManualApi5","_useManualApi5$","logoutError","logoutLoading","callLogout","_useManualApi6","_useManualApi6$","changeInfoError","changeInfoLoading","callChangeInfo","_useManualApi7","_useManualApi7$","changePassError","changePassLoading","callChangePassword","_useManualApi8","_useManualApi8$","resetPassError","resetPassLoading","callResetPassword","_useManualApi9","_useManualApi9$","resetPassVerifyError","resetPassVerifyLoading","callResetPasswordVerify","_useManualApi10","_useManualApi10$","qrError","qrLoading","qrData","getAccountQr","_useManualApi11","_useManualApi11$","percDiscountsError","percDiscountsLoading","percDiscountsData","getPercDiscounts","_useManualApi12","_useManualApi12$","callRegisterOpen","_error$response2","addLoginNumber","changeUserInfo","changeInfoPayload","company","companyInformation","defaultTariffKey","notifications","phoneNumber","changeUserPassword","login","userData","loginTicket","logout","registerOpenTicket","requestPasswordReset","register","resetPassword","newPassword","crpvStatus","_ref3","setPaymentCode","accountQr","percDiscounts","emptyTickets","RJ_SEAT","RJ_SRO","RJ_TIME","emptyOffsets","CANCELED","limit","UNPAID","sortDirection","USED","VALID","ticketTypeToUrlPath","priceReducer","acc","unpaid","filterExpired","t","expirationDate","conditions","expireAt","expiration","API_CONFIG","usePayment","ticketState","ticketIds","paymentMethods","paymentMethodsError","paymentMethodsLoading","fetchPaymentMethods","paymentForm","paymentFormError","paymentFormLoading","fetchPaymentForm","payError","payLoading","fetchPay","giftAddError","giftAddLoading","fetchGiftAdd","chargeCreditError","chargeCreditLoading","fetchChargeFromCredit","filteredPaymentMethods","m","active","paymentType","addCreditByGift","buyTickets","rememberCard","fields","boughtTickets","fromCredit","useCreditChargeWithFormFields","_exit","_temp4","_temp3","_result2","correlationId","formFields","PAY","_type$url2","payRedirectUrl","_fields$email","restFields","fieldType","fieldValue","_ref4","join","_type$url","_result3","getPaymentForm","manualPaymentMethodCode","getPaymentMethods","ticketsTypeIds","ticketsAvailable","Fuse","threshold","Method","MAX_SCORE_MATCH","removeDashDeburr","text","_deburr$split","deburr","stationName","nameOrAliasesStartWith","location","searchString","startsWithFn","part","startsWith","pact","_Pact","o","_settle","bind","v","observer","acceptedClass","priceDifference","prototype","onFulfilled","this","callback","_this","onRejected","typeToUrl","FLEXI","_ref$env","env","verbose","_ref$applicationOrigi","applicationOrigin","console","log","res","_res$request","addonsLoading","addonsError","callAddons","verificationLoading","verificationError","callVerifyAddons","putLoading","putError","callPutAddons","_addonsError$response","_verificationError$re","_putError$response","_addonsError$response2","_verificationError$re2","_putError$response2","fetchAddons","putAddons","ticketId","verifyAddons","maxCount","_c$state$booking","bookingItem","_c$state$booking2","verifyDiscount","selectCodeDiscount","_bookingItem$tariffs","_bookingItem$sections","tariff","route","routeId","section","ticketPrice","discountData","discountedTicketPrice","thereAddons","backAddons","therePrice","backPrice","_c$state$booking4","backCarbonOffsetPrice","_c$state$booking5","carbonOffset","amount","thereCarbonOffsetPrice","_c$state$booking6","addonsPrice","curr","count","bookingPrice","CarbonOffsetPrice","totalPrice","_useManualApi$$data","cityPairs","fetchFromCityPairs","fromCityId","isCreditPrice","_c$state$user$user","headersRef","callConnectionSearch","additionalData","setAdditionalData","_useLocations","_useState2","sroLoading","setSroLoading","shouldFindSro","routes","transfersCount","vehicleTypes","correctPriceData","routesMessage","textBubbles","bubble","index","self","departureTime","ar","priceFrom","creditPriceFrom","priceTo","creditPriceTo","fetchConnectionData","move","_getCity","additionalStation","responseHeaders","additionalRes","fetchBackwardRoutes","fetchConnection","fromLocationName","toLocationName","apiParams","fetchForwardRoutes","fetchSroRoutes","firstRoute","secondRoute","currentRoute","pricesCount","min","numberOfPassengers","max","freeSeatsCount","ignoreErrors","fetchRjSeat","sroLoading1","sroError1","sroData1","callSro1","sroData2","callSro2","rjSroLoading","rjSroError","dataWithPrice","fetchRoute","sroPriceClasses","sro","routeLoading","routeError","_routeError$response","_routeError$response2","rjSroClasses","_sroData1$priceClasse","_sroData2$priceClasse","sroCl","fill","Regular","_bookingThere$price","_bookingBack$price","bookingThere","bookingBack","_usePayment","paymentLoading","paymentError","bookingPriceWithoutAddons","unregisteredSeatTicketLoading","unregisteredSeatTicketError","fetchUnregisteredSeatTicket","registeredSeatTicketLoading","registeredSeatTicketError","fetchRegisteredSeatTicket","unregisteredTimeTicketLoading","unregisteredTimeTicketError","fetchUnregisteredTimeTicket","registeredTimeTicketLoading","registeredTimeTicketError","fetchRegisteredTimeTicket","unregisteredSroTicketLoading","unregisteredSroTicketError","fetchUnregisteredSroTicket","fetchRegisteredSroTicket","errorData","_errorData$response","chargeImmediately","_temp16","_result7","redirect","newSeats","ticketTypeId","Error","allBookings","Boolean","rjSeatBookings","rjSroBookings","rjTimeBookings","rjSeatPayload","ticketRequests","selectedSeat","No","tr","rjSroPayload","priceSourceId","rjTimeUnregPayload","unregisteredTimeTicketCreateRequest","lineGroupCode","lineNumber","station1Id","station2Id","timeTicketType","flexiType","validFrom","rjTimeRegPayload","timeTicketRequests","_temp15","_temp6","_result","_result6","regRjSeatData","routeSections","rs","ticketStates","_ref5","_ref6","_redirect$newSeats$ti4","_temp5","_ref7","_ref8","_ref9","_redirect$newSeats$ti","_passengers$","_redirect$newSeats$ti3","_temp14","_temp12","_temp10","_temp9","_temp8","agreeWithTerms","_ref10","_temp11","_temp7","_ref11","_temp13","_ref12","_ref13","unpaidTickets","fetchAddCredit","addCredit","chargeTickets","ticketsCorrelation","parseFloat","toFixed","_fields","ADD_CREDIT","_useApi$","fetchDepartures","fetchClasses","fetchAdditionalInfo","timeTableId","_useApi$$data","_useManualApi$0$data","symbols","fetchSymbols","_useManualApi2$0$data","timeCodes","fetchCodes","thereData","thereLoading","thereError","fetchThere","backData","fetchBack","_tariffs$length","contactData","personalData","to","morePreciseData","otherPassengersData","firstPassengerData","pd","_","passData","_bookingBack$tariffs","numberOfPassenger","_bookingThere$tariffs","fetchPayments","pages","fetchInvoice","paymentId","routeType","matchedPayment","fetchInvoices","paymentIds","post","invoices","fetchPaymentsHistory","page","offset","shouldSearch","fuse","trim","fullName","includeScore","weight","filtered","normalizedSearchString","search","citySearch","_city$significance","refIndex","score","locationA","locationB","sortStations","stationSearch","startsWithDiff","significanceDiff","priorityDiff","sortCities","formattedData","key","options","fetch","ignoreGlobalState","fetchSeats","reqData","ticketCode","customLoading","setCustomLoading","customError","setCustomError","sendMailError","sendMailLoading","fetchSendMail","responseType","getPdfError","getPdfLoading","getPdf","wheelChairPlatformError","wheelChairPlatformLoading","submitWheelChairPlatformOrder","getQrError","getQrLoading","getQr","questionnaireUrls","cancelSeatError","cancelSeatLoading","fetchCancelSeatTicket","cancelTimeError","cancelTimeLoading","fetchCancelTimeTicket","cancelSroError","cancelSroLoading","fetchCancelSroTicket","refetchSeatTicketError","refetchSeatTicketLoading","refetchSeatTicket","qrText","cancel","controlHash","refundToOriginalSource","statusCode","_switch","refetchStatus","getAppleWalletFile","_finallyRethrows","_wasThrown2","orderWheelChairPlatform","partialCancel","seatsForCancel","success","sendRequest","passenger","disabledPassengers","pass","DisabledAttendance","otherPassengers","_wasThrown","sendByEmail","luh","authData","authLoading","authError","fetchReviewAuth","reviewForm","fetchReviewForm","putReviewForm","_reviewForm$error","_authError$response","sendReview","SENT_REVIEW","setTickets","fetchTickets","ticketTypes","ticketIndices","ticketType","ticketResponses","responses","fetchedTickets","BOUGHT_TICKETS","_e$response","isAxiosError","flexiClassesWeek","loadingWeek","errorWeek","fetchWeek","flexiClassesMonth","loadingMonth","errorMonth","fetchMonth","flexiClassesQuarter","fetchQuarter","isFlexiLoaded","flexiClasses","fromCityName","toCityName","carrierId","acceptUpsell","ACCEPT_UPSELL","priceDiff","refuseUpsell","shouldShowUpsell","selectedClassKey","_priceClasses$find","upsellClass","userObj","loginNumbers","autoFetch","_useImmer","useImmer","setLoading","loadingMore","setLoadingMore","maxTickets","ticketsCount","defaultParams","shouldFetchMore","totalCount","fetchedCount","noLimitReset","_ref3$","_ref3$2","sroHeaders","_ref3$3","rjTimeData","timeHeaders","addStateToTicket","polishData","fetchMore","polishSingleType","_draft$type","_e$response2","vehicle"],"mappings":"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"}