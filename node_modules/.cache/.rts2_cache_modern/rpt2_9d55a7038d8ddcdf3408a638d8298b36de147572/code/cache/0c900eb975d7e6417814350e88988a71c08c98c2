{"code":"import { useCallback, useEffect, useMemo } from 'react';\r\nimport { useContextSelector } from 'use-context-selector';\r\nimport { ResponseStateCategory } from '../store/responseState/types';\r\nimport { StoreContext } from '../store/rootReducer';\r\nimport { getErrorMessage } from './consts';\r\nimport { Tariff, } from './types';\r\nimport { useManualApi } from './useManualApi';\r\nimport useSetResponseState from './useSetResponseState';\r\nconst emptyArr = [];\r\nconst departureDate = '2022-01-01';\r\nconst useConnectionRoute = (ignoreErrors = false) => {\r\n    const setState = useSetResponseState(ResponseStateCategory.connectionRoute);\r\n    const isCreditPrice = useContextSelector(StoreContext, (c) => c.state.user.user?.creditPrice);\r\n    const [{ data, error, loading }, fetchRjSeat] = useManualApi({});\r\n    const [{ loading: sroLoading1, error: sroError1, data: sroData1 }, callSro1] = useManualApi({});\r\n    const [{ loading: sroLoading2, error: sroError2, data: sroData2 }, callSro2] = useManualApi({});\r\n    const rjSroLoading = sroLoading1 || sroLoading2;\r\n    const rjSroError = sroError1 || sroError2;\r\n    const dataWithPrice = useMemo(() => data && {\r\n        ...data,\r\n        priceFrom: isCreditPrice ? data.creditPriceFrom : data.priceFrom,\r\n        priceClasses: data.priceClasses.map((pc) => ({\r\n            ...pc,\r\n            price: isCreditPrice ? pc.creditPrice : pc.price,\r\n            type: 'RJ_SEAT',\r\n        })),\r\n    }, [data, isCreditPrice]);\r\n    const fetchRoute = useCallback(async (params, signal) => {\r\n        try {\r\n            // causes some weird bug in the app with memoizing even when not using any memoizing ...\r\n            // if (\r\n            //   params.fromStationId === data?.departureStationId\r\n            //   && params.toStationId === data.arrivalStationId\r\n            //   && params.routeId === data.id\r\n            //   && unorderedArrayEqual(params.tariffs, data.priceClasses[0]?.tariffs)\r\n            // ) return data;\r\n            const response = await fetchRjSeat({\r\n                url: `/routes/${params.routeId}/simple`,\r\n                params,\r\n                signal,\r\n            });\r\n            return response.data;\r\n        }\r\n        catch {\r\n            return undefined;\r\n        }\r\n    }, [fetchRjSeat]);\r\n    const fetchSroRoutes = useCallback(async ({ routeId, ...payload }, signal) => {\r\n        // if (\r\n        //   sroData1?.routeId === routeId &&\r\n        //   sroData2?.routeId === routeId\r\n        // ) return [sroData2, sroData1].flatMap((sro) => sro.priceClasses);\r\n        const params = {\r\n            ...payload,\r\n            numberOfPassengers: payload.tariffs.length,\r\n        };\r\n        const url = `/routes/${routeId}/RJ_SRO`;\r\n        try {\r\n            const sroPriceClasses = await Promise.all([\r\n                callSro2({\r\n                    params: {\r\n                        ...params,\r\n                        departureDate,\r\n                        seatClass: 2,\r\n                    },\r\n                    signal,\r\n                    url,\r\n                }),\r\n                callSro1({\r\n                    params: {\r\n                        ...params,\r\n                        departureDate,\r\n                        seatClass: 1,\r\n                    },\r\n                    signal,\r\n                    url,\r\n                }),\r\n            ]);\r\n            return sroPriceClasses.flatMap((sro) => sro.data.priceClasses);\r\n        }\r\n        catch {\r\n            return undefined;\r\n        }\r\n    }, [callSro1, callSro2]);\r\n    const routeLoading = loading || rjSroLoading;\r\n    const routeError = error || rjSroError;\r\n    useEffect(() => {\r\n        if (!ignoreErrors) {\r\n            setState(routeError?.response?.data?.message || getErrorMessage(routeError), routeLoading, routeError?.response?.data?.errorFields);\r\n        }\r\n    }, [routeLoading, routeError]);\r\n    const rjSroClasses = useMemo(() => sroData1?.priceClasses.length || sroData2?.priceClasses.length\r\n        ? [\r\n            ...(sroData1?.priceClasses ?? []),\r\n            ...(sroData2?.priceClasses ?? []),\r\n        ].map((sroCl) => ({\r\n            ...sroCl,\r\n            tariffs: new Array(sroCl.numberOfPassengers).fill(Tariff.Regular),\r\n            price: sroCl.price * sroCl.numberOfPassengers,\r\n            type: 'RJ_SRO',\r\n        }))\r\n        : emptyArr, [sroData1, sroData2]);\r\n    return {\r\n        data: dataWithPrice,\r\n        fetchRoute,\r\n        fetchSroRoutes,\r\n        rjSroClasses,\r\n        routeError,\r\n        routeLoading,\r\n    };\r\n};\r\nexport default useConnectionRoute;\r\n//# sourceMappingURL=useConnectionRoute.js.map","references":["/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/@types/react/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/axios/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/use-context-selector/dist/src/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/responseState/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/rootReducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/consts.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useAddons.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useCreateTickets.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useManualApi.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useSetResponseState.ts"],"map":"{\"version\":3,\"file\":\"useConnectionRoute.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useConnectionRoute.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAExD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,qBAAqB,EAAE,MAAM,8BAA8B,CAAC;AACrE,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAC3C,OAAO,EAML,MAAM,GAIP,MAAM,SAAS,CAAC;AAGjB,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAgMxD,MAAM,QAAQ,GAAU,EAAE,CAAC;AAE3B,MAAM,aAAa,GAAG,YAAY,CAAC;AAEnC,MAAM,kBAAkB,GAAG,CAAC,YAAY,GAAG,KAAK,EAAE,EAAE;IAClD,MAAM,QAAQ,GAAG,mBAAmB,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC;IAC5E,MAAM,aAAa,GAAG,kBAAkB,CACtC,YAAY,EACZ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CACtC,CAAC;IACF,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,WAAW,CAAC,GAAG,YAAY,CAAc,EAAE,CAAC,CAAC;IAE9E,MAAM,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,GAC1E,YAAY,CAAmB,EAAE,CAAC,CAAC;IAErC,MAAM,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,GAC1E,YAAY,CAAmB,EAAE,CAAC,CAAC;IACrC,MAAM,YAAY,GAAG,WAAW,IAAI,WAAW,CAAC;IAChD,MAAM,UAAU,GAAG,SAAS,IAAI,SAAS,CAAC;IAE1C,MAAM,aAAa,GAA4B,OAAO,CACpD,GAAG,EAAE,CACH,IAAI,IAAI;QACN,GAAG,IAAI;QACP,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;QAChE,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAC3C,GAAG,EAAE;YACL,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;YAChD,IAAI,EAAE,SAAuB;SAC9B,CAAC,CAAC;KACJ,EACH,CAAC,IAAI,EAAE,aAAa,CAAC,CACtB,CAAC;IAEF,MAAM,UAAU,GAAG,WAAW,CAC5B,KAAK,EAAE,MAAoB,EAAE,MAA2B,EAAE,EAAE;QAC1D,IAAI;YACF,wFAAwF;YACxF,OAAO;YACP,sDAAsD;YACtD,oDAAoD;YACpD,kCAAkC;YAClC,0EAA0E;YAC1E,iBAAiB;YACjB,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC;gBACjC,GAAG,EAAE,WAAW,MAAM,CAAC,OAAO,SAAS;gBACvC,MAAM;gBACN,MAAM;aACP,CAAC,CAAC;YAEH,OAAO,QAAQ,CAAC,IAAI,CAAC;SACtB;QAAC,MAAM;YACN,OAAO,SAAS,CAAC;SAClB;IACH,CAAC,EACD,CAAC,WAAW,CAAC,CACd,CAAC;IAEF,MAAM,cAAc,GAAG,WAAW,CAChC,KAAK,EACH,EAAE,OAAO,EAAE,GAAG,OAAO,EAAgB,EACrC,MAA2B,EAC3B,EAAE;QACF,OAAO;QACP,qCAAqC;QACrC,kCAAkC;QAClC,oEAAoE;QACpE,MAAM,MAAM,GAAG;YACb,GAAG,OAAO;YACV,kBAAkB,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM;SAC3C,CAAC;QACF,MAAM,GAAG,GAAG,WAAW,OAAO,SAAS,CAAC;QACxC,IAAI;YACF,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBACxC,QAAQ,CAAC;oBACP,MAAM,EAAE;wBACN,GAAG,MAAM;wBACT,aAAa;wBACb,SAAS,EAAE,CAAC;qBACb;oBACD,MAAM;oBACN,GAAG;iBACJ,CAAC;gBACF,QAAQ,CAAC;oBACP,MAAM,EAAE;wBACN,GAAG,MAAM;wBACT,aAAa;wBACb,SAAS,EAAE,CAAC;qBACb;oBACD,MAAM;oBACN,GAAG;iBACJ,CAAC;aACH,CAAC,CAAC;YACH,OAAO,eAAe,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAChE;QAAC,MAAM;YACN,OAAO,SAAS,CAAC;SAClB;IACH,CAAC,EACD,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACrB,CAAC;IAEF,MAAM,YAAY,GAAG,OAAO,IAAI,YAAY,CAAC;IAC7C,MAAM,UAAU,GAAG,KAAK,IAAI,UAAU,CAAC;IAEvC,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,YAAY,EAAE;YACjB,QAAQ,CACN,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,IAAI,eAAe,CAAC,UAAU,CAAC,EAClE,YAAY,EACZ,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CACxC,CAAC;SACH;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC;IAE/B,MAAM,YAAY,GAAG,OAAO,CAC1B,GAAG,EAAE,CACH,QAAQ,EAAE,YAAY,CAAC,MAAM,IAAI,QAAQ,EAAE,YAAY,CAAC,MAAM;QAC5D,CAAC,CAAC;YACA,GAAG,CAAC,QAAQ,EAAE,YAAY,IAAI,EAAE,CAAC;YACjC,GAAG,CAAC,QAAQ,EAAE,YAAY,IAAI,EAAE,CAAC;SAClC,CAAC,GAAG,CAA0B,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACzC,GAAG,KAAK;YACR,OAAO,EAAE,IAAI,KAAK,CAAS,KAAK,CAAC,kBAAkB,CAAC,CAAC,IAAI,CACvD,MAAM,CAAC,OAAO,CACf;YACD,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,kBAAkB;YAC7C,IAAI,EAAE,QAAQ;SACf,CAAC,CAAC;QACH,CAAC,CAAE,QAAsC,EAC7C,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACrB,CAAC;IAEF,OAAO;QACL,IAAI,EAAE,aAAa;QACnB,UAAU;QACV,cAAc;QACd,YAAY;QACZ,UAAU;QACV,YAAY;KACb,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC\"}","dts":{"name":"/home/karelpelcak/Documents/repo/rj-shop-bl/dist/hooks/useConnectionRoute.d.ts","writeByteOrderMark":false,"text":"import type { GenericAbortSignal } from 'axios';\r\nimport { Currency, DateString, FlexiType, RouteId, SeatClass, Tariff, TicketType, VehicleKey, VehicleType } from './types';\r\nimport { Descriptions } from './useAddons';\r\nimport { ActionPrice } from './useCreateTickets';\r\nexport type Service = 'typy_vozidel_astra' | 'typy_vozidel_automaty' | 'typy_vozidel_bezp_sluzba' | 'typy_vozidel_bez_dotykove_obrazovky' | 'typy_vozidel_chlazene_napoje' | 'typy_vozidel_denni_tisk' | 'typy_vozidel_detske_kupe' | 'typy_vozidel_dotykova_obrazovka' | 'typy_vozidel_dzus' | 'typy_vozidel_imobilni' | 'typy_vozidel_imobilni_rampa' | 'typy_vozidel_klidova_zona' | 'typy_vozidel_klimatizace' | 'typy_vozidel_kocarky' | 'typy_vozidel_kresilko' | 'typy_vozidel_low_cost' | 'typy_vozidel_obcerstveni' | 'typy_vozidel_online_catering' | 'typy_vozidel_prednostni_servis' | 'typy_vozidel_preprava_kola' | 'typy_vozidel_restauracni_vuz' | 'typy_vozidel_sekt' | 'typy_vozidel_sluchatka' | 'typy_vozidel_snidane' | 'typy_vozidel_spaci_vuz' | 'typy_vozidel_spaci_vuz_zeny' | 'typy_vozidel_stevardka' | 'typy_vozidel_teple_napoje_zdarma' | 'typy_vozidel_tiche_kupe' | 'typy_vozidel_wifi_ano' | 'typy_vozidel_wifi_ne' | 'typy_vozidel_zabavni_portal_ano' | 'typy_vozidel_zasuvka' | 'typy_vozidel_zastuvka_ne';\r\nexport interface Line {\r\n    id: number;\r\n    code: string | null;\r\n    from: string;\r\n    to: string;\r\n    lineGroupCode: string;\r\n    lineNumber: number;\r\n}\r\nexport interface CarbonOffset {\r\n    amount: number;\r\n    currency: Currency;\r\n}\r\nexport interface TransferTime {\r\n    days: number;\r\n    hours: number;\r\n    minutes: number;\r\n}\r\nexport interface Transfer {\r\n    fromStationId: number;\r\n    toStationId: number;\r\n    calculatedTransferTime: TransferTime;\r\n    determinedTransferTime: TransferTime | null;\r\n    description: string | null;\r\n}\r\nexport interface TariffNotifications {\r\n    title: string;\r\n    description: string;\r\n    content: string[];\r\n}\r\nexport interface PriceClass {\r\n    actionPrice: null | ActionPrice;\r\n    bookable: boolean;\r\n    conditions: {\r\n        descriptions: Descriptions;\r\n    };\r\n    creditPrice: number;\r\n    customerNotifications: string[];\r\n    flexiType?: FlexiType;\r\n    freeSeatsCount: number;\r\n    lineGroupCode?: string;\r\n    lineNumber?: number;\r\n    price: number;\r\n    priceSource: string;\r\n    seatClassKey: SeatClass;\r\n    services: Service[];\r\n    tariffNotifications: TariffNotifications;\r\n    tariffs: Tariff[];\r\n    type: TicketType;\r\n}\r\nexport interface TransfersInfo {\r\n    info: string;\r\n    transfers: Transfer[];\r\n}\r\nexport interface RouteSectionCommons {\r\n    arrivalCityName: string;\r\n    arrivalStationId: number;\r\n    arrivalCityId: number;\r\n    arrivalStationName: string;\r\n    arrivalTime: DateString;\r\n    delay: string | null;\r\n    departureCityName: string;\r\n    departureStationId: number;\r\n    departureCityId: number;\r\n    departureStationName: string;\r\n    departureTime: DateString;\r\n    estimatedArrivalTime: DateString;\r\n    freeSeatsCount: number;\r\n    support: boolean;\r\n    travelTime: string;\r\n}\r\nexport interface Section extends RouteSectionCommons {\r\n    departurePlatform: string | null;\r\n    id: number;\r\n    line: Line;\r\n    notices: string[] | null;\r\n    vehicleType: VehicleType;\r\n    services: Service[];\r\n    vehicleStandardKey: VehicleKey;\r\n}\r\nexport interface RouteOverview extends RouteSectionCommons {\r\n    bookable: boolean;\r\n    creditPriceFrom: number;\r\n    creditPriceTo: number;\r\n    id: RouteId;\r\n    mainSectionId: number;\r\n    notices: boolean;\r\n    priceFrom: number;\r\n    priceTo: number;\r\n    transfersCount: number;\r\n    vehicleTypes: VehicleType[];\r\n}\r\nexport interface Surcharge {\r\n    price: number;\r\n    notification: string;\r\n}\r\nexport interface RouteDetail extends RouteOverview {\r\n    carbonOffset: CarbonOffset;\r\n    nationalTrip: boolean;\r\n    priceClasses: PriceClass[];\r\n    sections: Section[];\r\n    transfersInfo: TransfersInfo | null;\r\n    surcharge: null | Surcharge;\r\n    vehicleStandardKey: VehicleKey;\r\n}\r\nexport interface FlexiResponse {\r\n    flexiType?: FlexiType;\r\n    lineGroupCode: string;\r\n    lineNumber: number;\r\n    price: number;\r\n    seatClassKey: SeatClass;\r\n}\r\nexport interface RoutePayload {\r\n    routeId: string | number;\r\n    fromStationId: number;\r\n    toStationId: number;\r\n    tariffs: Tariff[];\r\n}\r\nexport interface SroPriceClass {\r\n    conditions: SroConditions;\r\n    freeSeatsCount: number;\r\n    numberOfPassengers: number;\r\n    price: number;\r\n    priceSource: string;\r\n    seatClassKey: SeatClass;\r\n}\r\nexport interface SroPriceClassSelectable extends SroPriceClass {\r\n    tariffs: Tariff[];\r\n    type: TicketType;\r\n}\r\nexport interface SroConditions {\r\n    cancelCharge: number;\r\n    code: string;\r\n    refundToOriginalSourcePossible: boolean;\r\n}\r\nexport interface SroRouteResponse {\r\n    priceClasses: SroPriceClass[];\r\n    routeId: string;\r\n}\r\ndeclare const useConnectionRoute: (ignoreErrors?: boolean) => {\r\n    data: RouteDetail | undefined;\r\n    fetchRoute: (params: RoutePayload, signal?: GenericAbortSignal) => Promise<RouteDetail | undefined>;\r\n    fetchSroRoutes: ({ routeId, ...payload }: RoutePayload, signal?: GenericAbortSignal) => Promise<SroPriceClass[] | undefined>;\r\n    rjSroClasses: SroPriceClassSelectable[];\r\n    routeError: import(\"axios\").AxiosError<any, any> | null;\r\n    routeLoading: boolean;\r\n};\r\nexport default useConnectionRoute;\r\n"}}
