{"code":"import useLocations from './useLocations';\r\nimport { useApi } from './useManualApi';\r\n/**\r\n * Hook for handling line detail (all stations, coordinates, images etc.)\r\n * @param sectionId\r\n */\r\nconst useTimetables = (sectionId) => {\r\n    const { getStation } = useLocations();\r\n    const [{ error, loading, data }] = useApi({\r\n        url: `/consts/timetables/${sectionId}`,\r\n        method: 'GET',\r\n    });\r\n    const stations = (data?.stations || []).map((station) => ({\r\n        ...station,\r\n        ...getStation(station.stationId),\r\n    }));\r\n    return {\r\n        error,\r\n        loading,\r\n        stations,\r\n        fromCityName: data?.fromCityName,\r\n        toCityName: data?.toCityName,\r\n        carrierId: data?.carrierId,\r\n    };\r\n};\r\nexport default useTimetables;\r\n//# sourceMappingURL=useTimetables.js.map","references":["/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/booking/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useLocations.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useManualApi.ts"],"map":"{\"version\":3,\"file\":\"useTimetables.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useTimetables.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAyBxC;;;GAGG;AACH,MAAM,aAAa,GAAG,CAAC,SAAiB,EAAE,EAAE;IAC1C,MAAM,EAAE,UAAU,EAAE,GAAG,YAAY,EAAE,CAAC;IACtC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,GAAG,MAAM,CAAqB;QAC5D,GAAG,EAAE,sBAAsB,SAAS,EAAE;QACtC,MAAM,EAAE,KAAK;KACd,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACxD,GAAG,OAAO;QACV,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,CAAE;KAClC,CAAC,CAAC,CAAC;IAEJ,OAAO;QACL,KAAK;QACL,OAAO;QACP,QAAQ;QACR,YAAY,EAAE,IAAI,EAAE,YAAY;QAChC,UAAU,EAAE,IAAI,EAAE,UAAU;QAC5B,SAAS,EAAE,IAAI,EAAE,SAAS;KAC3B,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC\"}","dts":{"name":"/home/karelpelcak/Documents/repo/rj-shop-bl/dist/hooks/useTimetables.d.ts","writeByteOrderMark":false,"text":"import { ConnectionDirection } from '../store/booking/types';\r\nimport { DateString } from './types';\r\nexport interface TimetablesResponse {\r\n    connectionCode: string;\r\n    connectionId: number;\r\n    direction?: ConnectionDirection;\r\n    fromCityName: string;\r\n    stations: Station[];\r\n    symbols?: string[];\r\n    timeCodes?: number[];\r\n    timetableId: number;\r\n    toCityName: string;\r\n    validFrom: DateString;\r\n    validTo: DateString;\r\n    carrierId: number;\r\n}\r\nexport interface Station {\r\n    stationId: number;\r\n    departure?: string;\r\n    arrival?: string;\r\n    platform?: string;\r\n    symbols?: string[];\r\n}\r\n/**\r\n * Hook for handling line detail (all stations, coordinates, images etc.)\r\n * @param sectionId\r\n */\r\ndeclare const useTimetables: (sectionId: number) => {\r\n    error: import(\"axios\").AxiosError<any, any> | null;\r\n    loading: boolean;\r\n    stations: {\r\n        cityId: number;\r\n        cityName: string;\r\n        address: string;\r\n        latitude: number;\r\n        longitude: number;\r\n        placeType: \"STATION\";\r\n        types: import(\"./useLocations\").StationType[];\r\n        countryCode: import(\"./types\").StationCountry;\r\n        aliases: string[];\r\n        id: number;\r\n        name: string;\r\n        significance: number;\r\n        fullname: string;\r\n        imageUrl: string | null;\r\n        stationsTypes: import(\"./useLocations\").StationType[];\r\n        stationId: number;\r\n        departure?: string | undefined;\r\n        arrival?: string | undefined;\r\n        platform?: string | undefined;\r\n        symbols?: string[] | undefined;\r\n    }[];\r\n    fromCityName: string | undefined;\r\n    toCityName: string | undefined;\r\n    carrierId: number | undefined;\r\n};\r\nexport default useTimetables;\r\n"}}
