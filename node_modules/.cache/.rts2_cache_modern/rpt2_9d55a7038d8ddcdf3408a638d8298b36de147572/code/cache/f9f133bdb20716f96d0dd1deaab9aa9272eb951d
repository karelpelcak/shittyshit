{"code":"import { useEffect } from 'react';\r\nimport { useContextSelector } from 'use-context-selector';\r\nimport { BookingContext } from '../store/booking/reducer';\r\nimport { ResponseStateContext } from '../store/responseState/reducer';\r\nimport { ResponseStateCategory } from '../store/responseState/types';\r\nimport { StoreContext } from '../store/rootReducer';\r\nimport { api } from './consts';\r\nimport { SeatClass, Tariff, } from './types';\r\nimport useBookingActions from './useBooking';\r\nimport { useHeadersActions } from './useHeaders';\r\nimport { useManualApi } from './useManualApi';\r\nimport usePayment from './usePayment';\r\nimport useSetResponseState from './useSetResponseState';\r\nimport { createTxToken, getAffiliateCode, getNewSeats } from './utils';\r\nconst fetchSroTickets = (config) => api.get('/tickets/RJ_SRO', {\r\n    params: { limit: 1, ticketStates: ['UNPAID'] },\r\n    ...config,\r\n});\r\n/**\r\n * Reserving tickets and charging credit if there's enough credit in account\r\n */\r\nconst useCreateTickets = () => {\r\n    const isLoggedIn = useContextSelector(StoreContext, (c) => !!c.state.user.user);\r\n    const { setToken } = useHeadersActions();\r\n    const setState = useSetResponseState(ResponseStateCategory.createTickets);\r\n    const categoryState = useContextSelector(ResponseStateContext, (c) => c.state[ResponseStateCategory.createTickets]);\r\n    const { clearBooking } = useBookingActions();\r\n    const bookingThere = useContextSelector(BookingContext, (c) => c.state.booking?.there);\r\n    const bookingBack = useContextSelector(BookingContext, (c) => c.state.booking?.back);\r\n    const connection = useContextSelector(BookingContext, (c) => c.state.booking?.connection);\r\n    const carbonOffset = useContextSelector(BookingContext, (c) => c.state.booking?.there?.carbonOffset);\r\n    const { buyTickets, loading: paymentLoading, error: paymentError, } = usePayment();\r\n    const bookingPriceWithoutAddons = (bookingThere?.price ?? 0) + (bookingBack?.price ?? 0);\r\n    const [{ loading: unregisteredSeatTicketLoading, error: unregisteredSeatTicketError, }, fetchUnregisteredSeatTicket,] = useManualApi({\r\n        url: '/tickets/create/unregistered',\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/1.2.0+json' },\r\n    });\r\n    const [{ loading: registeredSeatTicketLoading, error: registeredSeatTicketError }, fetchRegisteredSeatTicket,] = useManualApi({\r\n        url: '/tickets/create/registered',\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/1.2.0+json' },\r\n    });\r\n    const [{ loading: unregisteredTimeTicketLoading, error: unregisteredTimeTicketError, }, fetchUnregisteredTimeTicket,] = useManualApi({\r\n        url: '/tickets/timetickets/unregistered',\r\n        method: 'POST',\r\n    });\r\n    const [{ loading: registeredTimeTicketLoading, error: registeredTimeTicketError }, fetchRegisteredTimeTicket,] = useManualApi({ url: '/tickets/timeticket', method: 'POST' });\r\n    const [{ loading: unregisteredSroTicketLoading, error: unregisteredSroTicketError, }, fetchUnregisteredSroTicket,] = useManualApi({\r\n        url: '/tickets/RJ_SRO/unregistered',\r\n        method: 'POST',\r\n    });\r\n    const [{ loading: registeredSroTicketLoading, error: registeredSroTicketError }, fetchRegisteredSroTicket,] = useManualApi({\r\n        url: '/tickets/RJ_SRO/registered',\r\n        method: 'POST',\r\n    });\r\n    /**\r\n     * Tries to reserve tickets on ybus from all finished bookings.\r\n     * Returns route. If it redirects to checkout, it can also returns SelectedSeats,\r\n     * if there's new seats selected by ybus to inform user.\r\n     *\r\n     * @param passengers Its length has to match booking tariffs length\r\n     * @param chargeImmediately Set true only when user has enough credit and has fast booking\r\n     */\r\n    const createTickets = async (email, passengers, phone, chargeImmediately, signal) => {\r\n        try {\r\n            if (!connection) {\r\n                throw new Error('no connection');\r\n            }\r\n            const allBookings = [bookingThere, bookingBack].filter(Boolean);\r\n            const rjSeatBookings = allBookings.filter((b) => b.type === 'RJ_SEAT');\r\n            const rjSroBookings = allBookings.filter((b) => b.type === 'RJ_SRO');\r\n            const rjTimeBookings = allBookings.filter((b) => ['RJ_TIME', 'FLEXI'].includes(b.type));\r\n            let newSeats = null;\r\n            let ticketTypeId = undefined;\r\n            const getTicketPassengers = (tariffs) => !passengers.length\r\n                ? tariffs.map((tariff, i) => ({\r\n                    tariff,\r\n                    ...(i ? {} : { phone, email }),\r\n                }))\r\n                : passengers.map(({ fields }, i) => ({\r\n                    ...fields,\r\n                    tariff: tariffs[i] || Tariff.Regular,\r\n                    phone: i ? undefined : phone,\r\n                    email: i ? undefined : email,\r\n                }));\r\n            const rjSeatPayload = {\r\n                ticketRequests: rjSeatBookings.map((b) => ({\r\n                    passengers: getTicketPassengers(b?.tariffs || []),\r\n                    route: {\r\n                        routeId: b?.routeId || '',\r\n                        priceSource: b?.priceSource || '',\r\n                        sections: (b?.sections || []).map(({ sectionId, fromStationId, toStationId, selectedSeats }) => ({\r\n                            section: { fromStationId, sectionId, toStationId },\r\n                            selectedSeats: (selectedSeats || []).map((selectedSeat) => ({\r\n                                ...selectedSeat,\r\n                                sectionId,\r\n                            })),\r\n                        })),\r\n                        seatClass: b?.seatClass || SeatClass.No,\r\n                    },\r\n                    selectedAddons: (b?.selectedAddons || []).map(({ addonCode, ...a }) => a),\r\n                    percentualDiscountIds: b.percentualDiscountIds || [],\r\n                    codeDiscount: b.codeDiscount,\r\n                })),\r\n                affiliateCode: getAffiliateCode(),\r\n            };\r\n            const reqSeats = rjSeatPayload.ticketRequests.flatMap((tr) => tr.route.sections.flatMap((s) => s.selectedSeats));\r\n            const rjSroPayload = {\r\n                ticketRequests: rjSroBookings.map((b) => ({\r\n                    routeId: b.routeId,\r\n                    seatClass: b.seatClass,\r\n                    passengers: (b?.tariffs || []).map(() => ({ email })),\r\n                    sections: (b?.sections || []).map(({ sectionId, fromStationId, toStationId, selectedSeats }) => ({\r\n                        section: { fromStationId, sectionId, toStationId },\r\n                        selectedSeats: (selectedSeats || []).map((selectedSeat) => ({\r\n                            ...selectedSeat,\r\n                            sectionId,\r\n                        })),\r\n                    })),\r\n                    priceSourceId: b.priceSource,\r\n                })),\r\n            };\r\n            const rjTimeUnregPayload = {\r\n                unregisteredTimeTicketCreateRequest: rjTimeBookings.map((b) => ({\r\n                    email,\r\n                    lineGroupCode: b.lineGroupCode,\r\n                    lineNumber: b.lineNumber,\r\n                    seatClassKey: b.seatClass,\r\n                    station1Id: b.fromStationId,\r\n                    station2Id: b.toStationId,\r\n                    tariff: b.tariffs[0],\r\n                    timeTicketType: b.flexiType || 'FLEX',\r\n                    validFrom: connection.departureDate,\r\n                })),\r\n            };\r\n            const rjTimeRegPayload = {\r\n                timeTicketRequests: rjTimeBookings.flatMap((b) => (b.tariffs || []).map((tariff) => ({\r\n                    lineGroupCode: b.lineGroupCode,\r\n                    lineNumber: b.lineNumber,\r\n                    seatClass: b.seatClass,\r\n                    station1Id: b.fromStationId,\r\n                    station2Id: b.toStationId,\r\n                    tariff,\r\n                    type: b.flexiType || 'FLEX',\r\n                    validFrom: connection.departureDate,\r\n                }))),\r\n            };\r\n            if (isLoggedIn) {\r\n                let regRjSeatData = { tickets: [] };\r\n                if (rjSeatBookings.length) {\r\n                    const { data } = await fetchRegisteredSeatTicket({\r\n                        data: rjSeatPayload,\r\n                        signal,\r\n                    });\r\n                    regRjSeatData = data;\r\n                    ticketTypeId = data.tickets.map(({ id }) => ({\r\n                        type: 'RJ_SEAT',\r\n                        id: parseInt(id, 10),\r\n                    }));\r\n                    const respSeats = regRjSeatData.tickets.flatMap((t) => t.routeSections.flatMap((rs) => rs.selectedSeats));\r\n                    /* Don't buy if price is 0 - bookings are bought automatically */\r\n                    if (rjSeatBookings.reduce((totalPrice, { price }) => totalPrice + (price || 0), 0) === 0) {\r\n                        return {\r\n                            redirect: 'tickets',\r\n                            newSeats: getNewSeats(reqSeats, respSeats),\r\n                            ticketTypeId,\r\n                        };\r\n                    }\r\n                    if (chargeImmediately) {\r\n                        const response = await buyTickets(false, \r\n                        // @ts-expect-error Override is allowed\r\n                        { email, phone, ...(passengers?.[0]?.fields || {}) }, ticketTypeId, true, signal);\r\n                        clearBooking();\r\n                        if (!response) {\r\n                            return {\r\n                                redirect: 'checkout',\r\n                                newSeats: [],\r\n                                ticketTypeId,\r\n                            };\r\n                        }\r\n                        return {\r\n                            redirect: 'tickets',\r\n                            newSeats: getNewSeats(reqSeats, respSeats),\r\n                            ticketTypeId,\r\n                        };\r\n                    }\r\n                }\r\n                if (rjTimeBookings.length) {\r\n                    const { data } = await fetchRegisteredTimeTicket({\r\n                        data: rjTimeRegPayload,\r\n                        headers: {\r\n                            'X-TxToken': createTxToken(),\r\n                            'Content-Type': 'application/1.2.0+json',\r\n                        },\r\n                        signal,\r\n                    });\r\n                    if (chargeImmediately) {\r\n                        ticketTypeId = data.map((id) => ({ type: 'RJ_TIME', id }));\r\n                        await buyTickets(false, passengers[0].fields, ticketTypeId, true, signal);\r\n                        clearBooking();\r\n                        return { redirect: 'tickets', newSeats: [], ticketTypeId };\r\n                    }\r\n                }\r\n                if (rjSroBookings.length) {\r\n                    await fetchRegisteredSroTicket({\r\n                        data: rjSroPayload,\r\n                        headers: { 'X-TxToken': createTxToken() },\r\n                        signal,\r\n                    });\r\n                    if (chargeImmediately) {\r\n                        const { data } = await fetchSroTickets();\r\n                        ticketTypeId = data.map((t) => ({\r\n                            type: 'RJ_SRO',\r\n                            id: t.sroTicketId,\r\n                        }));\r\n                        await buyTickets(false, passengers[0].fields, ticketTypeId, true, signal);\r\n                        clearBooking();\r\n                        return { redirect: 'tickets', newSeats: [], ticketTypeId };\r\n                    }\r\n                }\r\n                const respSeats = regRjSeatData.tickets.flatMap((t) => t.routeSections.flatMap((rs) => rs.selectedSeats));\r\n                newSeats = getNewSeats(reqSeats, respSeats);\r\n            }\r\n            else {\r\n                let token = null;\r\n                if (rjSeatBookings.length) {\r\n                    const { data } = await fetchUnregisteredSeatTicket({\r\n                        data: { ...rjSeatPayload, agreeWithTerms: true },\r\n                        signal,\r\n                    });\r\n                    ticketTypeId = data.tickets.map(({ id }) => ({\r\n                        id: parseInt(id, 10),\r\n                        type: 'RJ_SEAT',\r\n                    }));\r\n                    /**\r\n                     * Soft booking can book other seat than selected. We need to inform user about it\r\n                     */\r\n                    const respSeats = data.tickets.flatMap((t) => t.routeSections.flatMap((rs) => rs.selectedSeats));\r\n                    newSeats = getNewSeats(reqSeats, respSeats);\r\n                    token = data.token;\r\n                    api.defaults.headers.Authorization = `Bearer ${data.token}`;\r\n                }\r\n                if (rjTimeBookings.length) {\r\n                    if (!token) {\r\n                        const { data } = await fetchUnregisteredTimeTicket({\r\n                            data: rjTimeUnregPayload,\r\n                            headers: {\r\n                                'Content-Type': 'application/1.2.0+json',\r\n                                'X-TxToken': createTxToken(),\r\n                            },\r\n                            signal,\r\n                        });\r\n                        token = data.token.token;\r\n                        api.defaults.headers.Authorization = `Bearer ${data.token.token}`;\r\n                    }\r\n                    else {\r\n                        await fetchRegisteredTimeTicket({\r\n                            data: rjTimeRegPayload,\r\n                            headers: { 'X-TxToken': createTxToken() },\r\n                            signal,\r\n                        });\r\n                    }\r\n                }\r\n                if (rjSroBookings.length) {\r\n                    if (!token) {\r\n                        const { data } = await fetchUnregisteredSroTicket({\r\n                            data: { ...rjSroPayload, agreeWithTerms: true },\r\n                            headers: { 'X-TxToken': createTxToken() },\r\n                            signal,\r\n                        });\r\n                        token = data.token;\r\n                        api.defaults.headers.Authorization = `Bearer ${data.token}`;\r\n                    }\r\n                    else {\r\n                        await fetchRegisteredSroTicket({\r\n                            data: rjSroPayload,\r\n                            headers: { 'X-TxToken': createTxToken() },\r\n                            signal,\r\n                        });\r\n                    }\r\n                }\r\n                await setToken(token);\r\n            }\r\n            clearBooking();\r\n            return {\r\n                redirect: bookingPriceWithoutAddons ? 'cart' : 'tickets',\r\n                newSeats: newSeats || [],\r\n                ticketTypeId,\r\n            };\r\n        }\r\n        catch {\r\n            return { redirect: '', newSeats: [] };\r\n        }\r\n    };\r\n    const errorData = unregisteredTimeTicketError ||\r\n        unregisteredSeatTicketError ||\r\n        unregisteredSroTicketError ||\r\n        registeredSroTicketError ||\r\n        registeredTimeTicketError ||\r\n        registeredSeatTicketError;\r\n    const loading = unregisteredTimeTicketLoading ||\r\n        unregisteredSeatTicketLoading ||\r\n        unregisteredSroTicketLoading ||\r\n        registeredSroTicketLoading ||\r\n        registeredTimeTicketLoading ||\r\n        registeredSeatTicketLoading ||\r\n        paymentLoading;\r\n    useEffect(() => {\r\n        setState(errorData?.response?.data?.message || paymentError?.message, loading);\r\n    }, [errorData, loading]);\r\n    return { createTickets, ...categoryState };\r\n};\r\nexport default useCreateTickets;\r\n//# sourceMappingURL=useCreateTickets.js.map","references":["/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/@types/react/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/axios/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/use-context-selector/dist/src/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/booking/reducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/booking/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/responseState/reducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/responseState/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/rootReducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/consts.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useAddons.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useBooking.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useHeaders.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useManualApi.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/usePassengersData.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/usePayment.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useSetResponseState.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useUserTickets.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/utils.ts"],"map":"{\"version\":3,\"file\":\"useCreateTickets.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useCreateTickets.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/karelpelcak/Documents/repo/rj-shop-bl/dist/hooks/useCreateTickets.d.ts","writeByteOrderMark":false,"text":"import type { GenericAbortSignal } from 'axios';\r\nimport { DateString, FlexiType, RouteId, RouteSectionFromTo, SeatClass, SelectedSeat, Tariff } from './types';\r\nimport { SelectedAddon } from './useAddons';\r\nimport { Passengers } from './usePassengersData';\r\nimport { TicketTypeId } from './usePayment';\r\nimport { TicketSection } from './useUserTickets';\r\nexport interface CreateSeatTicketData {\r\n    ticketRequests: SeatTicketRequest[];\r\n    affiliateCode?: string;\r\n}\r\nexport interface TimeTicketCreateRequest {\r\n    lineGroupCode: string;\r\n    lineNumber: number;\r\n    station1Id: number;\r\n    station2Id: number;\r\n    tariff: Tariff;\r\n    validFrom: DateString;\r\n}\r\nexport interface RegisteredTimeTicketCreateRequest extends TimeTicketCreateRequest {\r\n    seatClass: SeatClass;\r\n    type: FlexiType;\r\n}\r\nexport interface UnregisteredTimeTicketCreateRequest extends TimeTicketCreateRequest {\r\n    email: string;\r\n    seatClassKey: SeatClass;\r\n    timeTicketType: FlexiType;\r\n}\r\nexport interface CreateUnregTimeTicketData {\r\n    unregisteredTimeTicketCreateRequest: UnregisteredTimeTicketCreateRequest[];\r\n}\r\nexport interface CreateRegTimeTicketData {\r\n    timeTicketRequests: RegisteredTimeTicketCreateRequest[];\r\n}\r\nexport interface PassengerRequest extends PassengerData {\r\n    tariff: Tariff;\r\n}\r\nexport interface Passenger {\r\n    amount: number;\r\n    dateOfBirth: null;\r\n    email: string | null;\r\n    firstName: string | null;\r\n    id: number;\r\n    moneyBack: number;\r\n    phone: string | null;\r\n    surname: string | null;\r\n    tariff: Tariff;\r\n}\r\nexport interface SeatTicketRequest {\r\n    codeDiscount?: string;\r\n    passengers: PassengerRequest[];\r\n    percentualDiscountIds: number[];\r\n    route: Route;\r\n    selectedAddons: SelectedAddon[];\r\n}\r\nexport interface CreateSroTicketData {\r\n    ticketRequests: SroTicketRequest[];\r\n}\r\nexport interface SroTicketRequest {\r\n    passengers: {\r\n        email: string;\r\n    }[];\r\n    priceSourceId: string;\r\n    routeId: string;\r\n    seatClass: SeatClass;\r\n    sections: SectionElement[];\r\n}\r\nexport interface PassengerData {\r\n    email?: string;\r\n    firstName?: string;\r\n    phone?: string;\r\n    surname?: string;\r\n    id?: number;\r\n}\r\nexport interface Route {\r\n    actionPrice?: ActionPrice;\r\n    priceSource: string;\r\n    routeId: RouteId;\r\n    seatClass: SeatClass;\r\n    sections: SectionElement[];\r\n}\r\nexport interface ActionPrice {\r\n    code: string;\r\n    description: string;\r\n    id: number;\r\n    name: string;\r\n    showIcon: boolean;\r\n    url: string;\r\n}\r\nexport interface SectionElement {\r\n    section: RouteSectionFromTo;\r\n    selectedSeats: SelectedSeat[];\r\n}\r\nexport interface SeatSroTicket {\r\n    id: string;\r\n    routeSections: TicketSection[];\r\n}\r\nexport interface UnregisteredSeatSroTicketData {\r\n    token: string;\r\n    tickets: SeatSroTicket[];\r\n}\r\nexport interface RegisteredSeatTicketData {\r\n    tickets: SeatSroTicket[];\r\n}\r\nexport interface UnregisteredTimeTicketData {\r\n    token: {\r\n        token: string;\r\n    };\r\n}\r\n/**\r\n * Reserving tickets and charging credit if there's enough credit in account\r\n */\r\ndeclare const useCreateTickets: () => {\r\n    error?: {\r\n        message?: string | undefined;\r\n        errorFields?: import(\"../store/responseState/types\").ErrorFields[] | undefined;\r\n    } | undefined;\r\n    loading: boolean;\r\n    createTickets: (email: string, passengers: Passengers[], phone?: string, chargeImmediately?: boolean, signal?: GenericAbortSignal) => Promise<{\r\n        newSeats: SelectedSeat[];\r\n        redirect: 'tickets' | 'checkout' | 'cart' | '';\r\n        ticketTypeId?: TicketTypeId[];\r\n    }>;\r\n};\r\nexport default useCreateTickets;\r\n"}}
