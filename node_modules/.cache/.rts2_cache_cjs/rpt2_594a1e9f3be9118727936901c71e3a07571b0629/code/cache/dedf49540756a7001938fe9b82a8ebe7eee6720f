{"code":"import { useEffect } from 'react';\r\nimport { useManualApi } from './useManualApi';\r\nconst useCityPairs = (cityId) => {\r\n    const [{ data: cityPairs = [], loading }, fetchFromCityPairs] = useManualApi({ method: 'GET', url: '/consts/cityPairs' });\r\n    useEffect(() => {\r\n        if (!cityId) {\r\n            return;\r\n        }\r\n        const abortController = new AbortController();\r\n        const signal = abortController.signal;\r\n        fetchFromCityPairs({ params: { fromCityId: cityId }, signal });\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n    }, [cityId]);\r\n    return { cityPairs, loading };\r\n};\r\nexport default useCityPairs;\r\n//# sourceMappingURL=useCityPairs.js.map","references":["/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/@types/react/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useManualApi.ts"],"map":"{\"version\":3,\"file\":\"useCityPairs.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useCityPairs.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAW9C,MAAM,YAAY,GAAG,CAAC,MAAc,EAAE,EAAE;IACtC,MAAM,CAAC,EAAE,IAAI,EAAE,SAAS,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,kBAAkB,CAAC,GAAG,YAAY,CAE1E,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAE/C,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QACD,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;QAC9C,MAAM,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC;QACtC,kBAAkB,CAAC,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;QAC/D,OAAO,GAAG,EAAE;YACV,eAAe,CAAC,KAAK,EAAE,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;AAChC,CAAC,CAAC;AAEF,eAAe,YAAY,CAAC\"}","dts":{"name":"/home/karelpelcak/Documents/repo/rj-shop-bl/dist/hooks/useCityPairs.d.ts","writeByteOrderMark":false,"text":"import { VehicleType } from './types';\r\nexport interface CityPair {\r\n    departureCityId: number;\r\n    arrivalCityId: number;\r\n    numberOfTransfers: number;\r\n    transportTypes: VehicleType[];\r\n    iataCodesForDepartureCity: string[];\r\n    iataCodesForArrivalCity: string[];\r\n}\r\ndeclare const useCityPairs: (cityId: number) => {\r\n    cityPairs: CityPair[];\r\n    loading: boolean;\r\n};\r\nexport default useCityPairs;\r\n"}}
