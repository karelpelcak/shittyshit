{"code":"import { useEffect, useMemo } from 'react';\r\nimport { useContextSelector } from 'use-context-selector';\r\nimport { BookingContext } from '../store/booking/reducer';\r\nimport { ResponseStateCategory } from '../store/responseState/types';\r\nimport { useManualApi } from './useManualApi';\r\nimport useSetResponseState from './useSetResponseState';\r\nexport var PassengerFieldsFromApi;\r\n(function (PassengerFieldsFromApi) {\r\n    PassengerFieldsFromApi[\"email\"] = \"EMAIL\";\r\n    PassengerFieldsFromApi[\"firstName\"] = \"FIRST_NAME\";\r\n    PassengerFieldsFromApi[\"surname\"] = \"SURNAME\";\r\n    PassengerFieldsFromApi[\"phone\"] = \"PHONE\";\r\n    PassengerFieldsFromApi[\"customerName\"] = \"CUSTOMER_NAME\";\r\n    PassengerFieldsFromApi[\"customerAddress\"] = \"CUSTOMER_ADDRESS\";\r\n    PassengerFieldsFromApi[\"dateOfBirth\"] = \"BIRTHDAY\";\r\n})(PassengerFieldsFromApi || (PassengerFieldsFromApi = {}));\r\nexport var PassengerFieldsToSend;\r\n(function (PassengerFieldsToSend) {\r\n    PassengerFieldsToSend[\"email\"] = \"email\";\r\n    PassengerFieldsToSend[\"firstName\"] = \"firstName\";\r\n    PassengerFieldsToSend[\"phone\"] = \"phone\";\r\n    PassengerFieldsToSend[\"surname\"] = \"surname\";\r\n    PassengerFieldsToSend[\"customerName\"] = \"customerName\";\r\n    PassengerFieldsToSend[\"customerAddress\"] = \"customerAddress\";\r\n    PassengerFieldsToSend[\"dateOfBirth\"] = \"dateOfBirth\";\r\n})(PassengerFieldsToSend || (PassengerFieldsToSend = {}));\r\nexport const mapPassengerData = {\r\n    CUSTOMER_ADDRESS: PassengerFieldsToSend.customerAddress,\r\n    CUSTOMER_NAME: PassengerFieldsToSend.customerName,\r\n    EMAIL: PassengerFieldsToSend.email,\r\n    FIRST_NAME: PassengerFieldsToSend.firstName,\r\n    PHONE: PassengerFieldsToSend.phone,\r\n    SURNAME: PassengerFieldsToSend.surname,\r\n    BIRTHDAY: PassengerFieldsToSend.dateOfBirth,\r\n};\r\nconst typesToIgnore = ['RJ_TIME', 'FLEXI'];\r\nconst usePassengersData = () => {\r\n    const connection = useContextSelector(BookingContext, c => c.state.booking?.connection);\r\n    const bookingThere = useContextSelector(BookingContext, c => c.state.booking?.there);\r\n    const bookingBack = useContextSelector(BookingContext, c => c.state.booking?.back);\r\n    const setState = useSetResponseState(ResponseStateCategory.passengersData);\r\n    const [{ data: thereData, loading: thereLoading, error: thereError }, fetchThere,] = useManualApi({});\r\n    const [{ data: backData, loading: backLoading, error: backError }, fetchBack,] = useManualApi({});\r\n    const loading = thereLoading || backLoading;\r\n    const error = thereError || backError;\r\n    const data = useMemo(() => {\r\n        if (!thereData || (bookingBack?.routeId && !backData) || !connection) {\r\n            return {\r\n                contactData: { email: true },\r\n                personalData: {\r\n                    from: connection?.fromLocationName,\r\n                    passengers: [],\r\n                    to: connection?.toLocationName,\r\n                },\r\n            };\r\n        }\r\n        const morePreciseData = !backData ||\r\n            thereData.otherPassengersData.length > backData.otherPassengersData.length ?\r\n            thereData :\r\n            backData;\r\n        const contactData = {\r\n            email: true,\r\n            phone: morePreciseData.firstPassengerData.some((pd) => pd.includes(PassengerFieldsFromApi.phone)),\r\n        };\r\n        const personalData = {\r\n            from: connection.fromLocationName,\r\n            to: connection.toLocationName,\r\n            passengers: Array.from({ length: (bookingThere || bookingBack)?.tariffs?.length ?? 1 })\r\n                .map((_, i) => ({\r\n                fields: (i\r\n                    ? morePreciseData.otherPassengersData\r\n                    : morePreciseData.firstPassengerData.filter((p) => !['EMAIL', 'PHONE'].includes(p))).map((passData) => ({\r\n                    name: mapPassengerData[passData],\r\n                    value: '',\r\n                })),\r\n                tariff: (bookingThere || bookingBack)?.tariffs?.[i],\r\n            })),\r\n        };\r\n        return { contactData, personalData };\r\n    }, [thereData, backData]);\r\n    useEffect(() => {\r\n        setState(error?.response?.data?.message, loading);\r\n    }, [loading, error]);\r\n    useEffect(() => {\r\n        if (!bookingBack?.routeId || !bookingBack.type || typesToIgnore.includes(bookingBack.type)) {\r\n            return;\r\n        }\r\n        const abortController = new AbortController();\r\n        const signal = abortController.signal;\r\n        if (bookingBack?.type === 'RJ_SRO') {\r\n            fetchBack({\r\n                params: {\r\n                    departureDate: new Date(),\r\n                    fromStationId: bookingBack?.fromStationId,\r\n                    numberOfPassenger: bookingBack?.tariffs?.length,\r\n                    routeId: bookingBack?.routeId,\r\n                    seatClass: 1,\r\n                    toStationId: bookingBack?.toStationId,\r\n                },\r\n                signal,\r\n                url: `/routes/${bookingBack?.routeId}/passengersData/RJ_SRO`,\r\n            });\r\n        }\r\n        else {\r\n            fetchBack({\r\n                data: {\r\n                    priceSource: bookingBack?.priceSource,\r\n                    seatClass: bookingBack?.seatClass,\r\n                    sections: (bookingBack?.sections || []).map(({ selectedSeats, ...section }) => section),\r\n                    tariffs: bookingBack?.tariffs,\r\n                },\r\n                method: 'POST',\r\n                signal,\r\n                url: `/routes/${bookingBack?.routeId}/passengersData`,\r\n            });\r\n        }\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n    }, [bookingBack?.routeId]);\r\n    useEffect(() => {\r\n        if (!bookingThere?.routeId || !bookingThere.type || typesToIgnore.includes(bookingThere.type)) {\r\n            return;\r\n        }\r\n        const abortController = new AbortController();\r\n        const signal = abortController.signal;\r\n        if (bookingThere?.type === 'RJ_SRO') {\r\n            fetchThere({\r\n                params: {\r\n                    departureDate: new Date(),\r\n                    fromStationId: bookingThere?.fromStationId,\r\n                    numberOfPassenger: bookingThere?.tariffs?.length,\r\n                    routeId: bookingThere?.routeId,\r\n                    seatClass: 1,\r\n                    toStationId: bookingThere?.toStationId,\r\n                },\r\n                signal,\r\n                url: `/routes/${bookingThere?.routeId}/passengersData/RJ_SRO`,\r\n            });\r\n        }\r\n        else {\r\n            fetchThere({\r\n                data: {\r\n                    priceSource: bookingThere?.priceSource,\r\n                    seatClass: bookingThere?.seatClass,\r\n                    sections: (bookingThere?.sections || []).map(({ selectedSeats, ...section }) => section),\r\n                    tariffs: bookingThere?.tariffs,\r\n                },\r\n                method: 'POST',\r\n                signal,\r\n                url: `/routes/${bookingThere?.routeId}/passengersData`,\r\n            });\r\n        }\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n    }, [bookingThere?.routeId]);\r\n    return {\r\n        data,\r\n        error: error?.response?.data.message,\r\n        loading,\r\n    };\r\n};\r\nexport default usePassengersData;\r\n//# sourceMappingURL=usePassengersData.js.map","references":["/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/@types/react/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/use-context-selector/dist/src/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/booking/reducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/responseState/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useManualApi.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useSetResponseState.ts"],"map":"{\"version\":3,\"file\":\"usePassengersData.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/usePassengersData.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/karelpelcak/Documents/repo/rj-shop-bl/dist/hooks/usePassengersData.d.ts","writeByteOrderMark":false,"text":"import { Tariff } from './types';\r\nexport declare enum PassengerFieldsFromApi {\r\n    email = \"EMAIL\",\r\n    firstName = \"FIRST_NAME\",\r\n    surname = \"SURNAME\",\r\n    phone = \"PHONE\",\r\n    customerName = \"CUSTOMER_NAME\",\r\n    customerAddress = \"CUSTOMER_ADDRESS\",\r\n    dateOfBirth = \"BIRTHDAY\"\r\n}\r\nexport declare enum PassengerFieldsToSend {\r\n    email = \"email\",\r\n    firstName = \"firstName\",\r\n    phone = \"phone\",\r\n    surname = \"surname\",\r\n    customerName = \"customerName\",\r\n    customerAddress = \"customerAddress\",\r\n    dateOfBirth = \"dateOfBirth\"\r\n}\r\nexport declare const mapPassengerData: {\r\n    [key in PassengerFieldsFromApi]: PassengerFieldsToSend;\r\n};\r\nexport interface ContactData {\r\n    email: true;\r\n    phone: boolean;\r\n}\r\nexport interface PassengerField {\r\n    name: PassengerFieldsToSend;\r\n    value: string;\r\n    error?: string;\r\n}\r\nexport interface Passengers {\r\n    tariff: Tariff;\r\n    fields: Record<PassengerFieldsToSend, string>;\r\n}\r\nexport interface PersonalDataPassengers {\r\n    tariff?: Tariff;\r\n    fields: PassengerField[];\r\n}\r\nexport interface PersonalData {\r\n    from: string;\r\n    to: string;\r\n    passengers: PersonalDataPassengers[];\r\n}\r\nexport interface PassengersData {\r\n    contactData: ContactData;\r\n    personalData: PersonalData;\r\n}\r\nexport interface PassengersApiData {\r\n    firstPassengerData: PassengerFieldsFromApi[];\r\n    otherPassengersData: PassengerFieldsFromApi[];\r\n}\r\ndeclare const usePassengersData: () => {\r\n    data: {\r\n        contactData: ContactData;\r\n        personalData: PersonalData;\r\n    };\r\n    error: any;\r\n    loading: boolean;\r\n};\r\nexport default usePassengersData;\r\n"}}
