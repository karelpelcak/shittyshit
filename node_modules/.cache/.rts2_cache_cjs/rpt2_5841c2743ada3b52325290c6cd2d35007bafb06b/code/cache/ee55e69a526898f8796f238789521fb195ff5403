{"code":"import { useMemo, useRef, useState } from 'react';\r\nimport { useContextSelector } from 'use-context-selector';\r\nimport { StoreContext } from '../store/rootReducer';\r\nimport { api } from './consts';\r\nimport useLocations from './useLocations';\r\nimport { useManualApi } from './useManualApi';\r\nexport const croatiaNotSroStations = [\r\n    5577656005, 5577656007, 5577656006, 5362691025,\r\n];\r\nconst additionalStationsMap = Object.freeze({\r\n    10202001: 3088864005,\r\n});\r\nconst routesURL = '/routes/search/simple';\r\nconst versionHeaders = { Accept: 'application/1.2.0+json' };\r\nconst additionalStationsArrivalCountries = [\r\n    'HR',\r\n];\r\nconst useConnection = () => {\r\n    const isCreditPrice = useContextSelector(StoreContext, (c) => c.state.user.user?.creditPrice);\r\n    const connection = useRef();\r\n    const headersRef = useRef({});\r\n    const [{ data, loading }, callConnectionSearch] = useManualApi({\r\n        url: routesURL,\r\n        method: 'GET',\r\n        headers: versionHeaders,\r\n    });\r\n    const [additionalData, setAdditionalData] = useState();\r\n    const { getCity, getStation } = useLocations();\r\n    const [sroLoading, setSroLoading] = useState(false);\r\n    const shouldFindSro = useMemo(() => !!data?.routes.some(({ transfersCount, vehicleTypes, arrivalStationId, departureStationId, }) => !transfersCount &&\r\n        vehicleTypes.includes('TRAIN') &&\r\n        !(croatiaNotSroStations.includes(arrivalStationId) ||\r\n            croatiaNotSroStations.includes(departureStationId))), [data]);\r\n    const correctPriceData = data && {\r\n        routesMessage: additionalData?.routesMessage &&\r\n            data.routesMessage &&\r\n            additionalData?.routesMessage !== data.routesMessage\r\n            ? [data.routesMessage, additionalData?.routesMessage].join('\\n')\r\n            : data.routesMessage || additionalData?.routesMessage || null,\r\n        textBubbles: additionalData?.textBubbles.length\r\n            ? [...data.textBubbles, ...additionalData.textBubbles].filter((bubble, index, self) => index ===\r\n                self.findIndex((t) => t.id === bubble.id && t.text === bubble.text))\r\n            : data.textBubbles,\r\n        routes: (additionalData\r\n            ? [...data.routes, ...additionalData.routes]\r\n            : data.routes)\r\n            .sort((a, b) => new Date(a.departureTime).valueOf() -\r\n            new Date(b.departureTime).valueOf())\r\n            .map((ar) => ({\r\n            ...ar,\r\n            priceFrom: isCreditPrice ? ar.creditPriceFrom : ar.priceFrom,\r\n            priceTo: isCreditPrice ? ar.creditPriceTo : ar.priceTo,\r\n        })),\r\n    };\r\n    const fetchConnectionData = async (params, headers, move, signal) => {\r\n        try {\r\n            if (additionalData) {\r\n                setAdditionalData(undefined);\r\n            }\r\n            const additionalStation = !!additionalStationsMap[params.fromLocationId] &&\r\n                additionalStationsArrivalCountries.includes(params.toLocationType === 'CITY'\r\n                    ? getCity(params.toLocationId)?.code\r\n                    : getStation(params.toLocationId)?.countryCode);\r\n            const [{ headers: responseHeaders }, additionalRes] = await Promise.all([\r\n                callConnectionSearch({\r\n                    headers: { ...headers, ...versionHeaders },\r\n                    params: {\r\n                        ...params,\r\n                        departureDate: params.departureDate.slice(0, 10),\r\n                        ...(move && { move }),\r\n                    },\r\n                    signal,\r\n                }),\r\n                additionalStation &&\r\n                    api.get(routesURL, {\r\n                        headers,\r\n                        signal,\r\n                        params: {\r\n                            ...params,\r\n                            fromLocationId: additionalStationsMap[params.fromLocationId],\r\n                            fromLocationType: 'STATION',\r\n                            departureDate: params.departureDate.slice(0, 10),\r\n                            ...(move && { move }),\r\n                        },\r\n                    }),\r\n            ]);\r\n            if (additionalRes) {\r\n                setAdditionalData(additionalRes.data);\r\n            }\r\n            headersRef.current = {\r\n                'x-used-departurefromdatetime': responseHeaders['x-used-departurefromdatetime'],\r\n                'x-used-departuretodatetime': responseHeaders['x-used-departuretodatetime'],\r\n            };\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    const fetchConnection = async ({ returnDepartureDate, fromLocationName, toLocationName, departureDate, ...params }, signal) => {\r\n        try {\r\n            connection.current = { ...params, departureDate };\r\n            const apiParams = {\r\n                ...params,\r\n                departureDate,\r\n                returnDepartureDate,\r\n                fromLocationName,\r\n                toLocationName,\r\n            };\r\n            return await fetchConnectionData(apiParams, {}, undefined, signal);\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    const fetchForwardRoutes = async (headers, signal) => {\r\n        try {\r\n            return await fetchConnectionData(connection.current, {\r\n                ...headersRef.current,\r\n                ...headers,\r\n            }, 'FORWARD', signal);\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    const fetchBackwardRoutes = async (headers, signal) => {\r\n        try {\r\n            return await fetchConnectionData(connection.current, {\r\n                ...headersRef.current,\r\n                ...headers,\r\n            }, 'BACKWARD', signal);\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    const fetchSroRoutes = async (payload, signal) => {\r\n        setSroLoading(true);\r\n        const [firstRoute, secondRoute] = await Promise.all([2, 1].map((seatClass) => api.get('/routes/search/RJ_SRO', {\r\n            params: { ...payload, seatClass },\r\n            signal,\r\n        })));\r\n        setSroLoading(false);\r\n        return firstRoute.data.map((route, i) => {\r\n            const currentRoute = secondRoute.data[i];\r\n            if (!currentRoute) {\r\n                return {\r\n                    ...route,\r\n                    /* YBUS returns prices only for 1 passenger in SRO - to unify it with seat tickets,\r\n                     * we need to multiply by no of passengers */\r\n                    creditPriceFrom: route.creditPriceFrom * payload.numberOfPassengers,\r\n                    creditPriceTo: route.creditPriceTo * payload.numberOfPassengers,\r\n                    priceFrom: route.priceFrom * payload.numberOfPassengers,\r\n                    priceTo: route.priceTo * payload.numberOfPassengers,\r\n                };\r\n            }\r\n            return {\r\n                ...route,\r\n                /* Some props has to be calculated to be merged correctly */\r\n                pricesCount: route.pricesCount + currentRoute.pricesCount,\r\n                creditPriceFrom: Math.min(route.creditPriceFrom, currentRoute.creditPriceFrom) *\r\n                    payload.numberOfPassengers,\r\n                creditPriceTo: Math.max(route.creditPriceTo, currentRoute.creditPriceTo) *\r\n                    payload.numberOfPassengers,\r\n                priceFrom: Math.min(route.priceFrom, currentRoute.priceFrom) *\r\n                    payload.numberOfPassengers,\r\n                priceTo: Math.max(route.priceTo, currentRoute.priceTo) *\r\n                    payload.numberOfPassengers,\r\n                freeSeatsCount: route.freeSeatsCount + currentRoute.freeSeatsCount,\r\n            };\r\n        });\r\n    };\r\n    return {\r\n        data: correctPriceData,\r\n        fetchBackwardRoutes,\r\n        fetchConnection,\r\n        fetchForwardRoutes,\r\n        fetchSroRoutes,\r\n        loading: loading || sroLoading,\r\n        shouldFindSro,\r\n    };\r\n};\r\nexport default useConnection;\r\n//# sourceMappingURL=useConnection.js.map","references":["/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/@types/react/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/axios/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/use-context-selector/dist/src/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/rootReducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/consts.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useConnectionRoute.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useCreateTickets.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useLocations.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useManualApi.ts"],"map":"{\"version\":3,\"file\":\"useConnection.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useConnection.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/karelpelcak/Documents/repo/rj-shop-bl/dist/hooks/useConnection.d.ts","writeByteOrderMark":false,"text":"import type { GenericAbortSignal } from 'axios';\r\nimport { DateString, Tariff, VehicleKey } from './types';\r\nimport { RouteOverview } from './useConnectionRoute';\r\nimport { ActionPrice } from './useCreateTickets';\r\nimport { LocationType } from './useLocations';\r\nexport declare const croatiaNotSroStations: number[];\r\nexport interface ConnectionLocations {\r\n    fromLocationId: number;\r\n    fromLocationName?: string;\r\n    fromLocationType: LocationType;\r\n    toLocationId: number;\r\n    toLocationName?: string;\r\n    toLocationType: LocationType;\r\n}\r\nexport interface ConnectionPayload extends ConnectionLocations {\r\n    departureDate: DateString;\r\n    returnDepartureDate?: DateString;\r\n    tariffs: Tariff[];\r\n}\r\nexport interface SroConnectionPayload {\r\n    departureDate: DateString;\r\n    fromLocationType: LocationType;\r\n    fromLocation: number;\r\n    numberOfPassengers: number;\r\n    toLocationType: LocationType;\r\n    toLocation: number;\r\n}\r\nexport interface ConnectionRoute extends RouteOverview {\r\n    actionPrice?: ActionPrice;\r\n    surcharge: boolean;\r\n    pricesCount: number;\r\n    nationalTrip: boolean;\r\n    vehicleStandards: VehicleKey[];\r\n}\r\nexport interface Connection {\r\n    routes: ConnectionRoute[];\r\n    routesMessage: string | null;\r\n    textBubbles: {\r\n        id: number;\r\n        text: string;\r\n    }[];\r\n}\r\ndeclare const useConnection: () => {\r\n    data: Connection | undefined;\r\n    fetchBackwardRoutes: (headers?: Record<string, string | undefined>, signal?: GenericAbortSignal) => Promise<boolean>;\r\n    fetchConnection: ({ returnDepartureDate, fromLocationName, toLocationName, departureDate, ...params }: ConnectionPayload, signal?: GenericAbortSignal) => Promise<boolean>;\r\n    fetchForwardRoutes: (headers?: Record<string, string | undefined>, signal?: GenericAbortSignal) => Promise<boolean>;\r\n    fetchSroRoutes: (payload: SroConnectionPayload, signal?: GenericAbortSignal) => Promise<ConnectionRoute[]>;\r\n    loading: boolean;\r\n    shouldFindSro: boolean;\r\n};\r\nexport default useConnection;\r\n"}}
