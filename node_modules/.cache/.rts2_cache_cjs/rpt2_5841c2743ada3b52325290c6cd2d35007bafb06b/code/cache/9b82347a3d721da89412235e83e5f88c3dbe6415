{"code":"import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport axios, { isAxiosError } from 'axios';\r\nimport { useContextSelector } from 'use-context-selector';\r\nimport { useImmer } from 'use-immer';\r\nimport { ResponseStateContext } from '../store/responseState/reducer';\r\nimport { ResponseStateCategory } from '../store/responseState/types';\r\nimport { StoreContext } from '../store/rootReducer';\r\nimport { FAIL_MESSAGE, api, getErrorMessage } from './consts';\r\nimport useSetResponseState from './useSetResponseState';\r\nexport const emptyTickets = {\r\n    RJ_SEAT: [],\r\n    RJ_SRO: [],\r\n    RJ_TIME: [],\r\n};\r\nexport const emptyOffsets = Object.freeze({\r\n    RJ_SEAT: 0,\r\n    RJ_SRO: 0,\r\n    RJ_TIME: 0,\r\n});\r\nexport const defaultOptions = Object.freeze({\r\n    CANCELED: { limit: 10 },\r\n    UNPAID: { limit: 99, sortDirection: 'ASC' },\r\n    USED: { limit: 5 },\r\n    VALID: { limit: 10, sortDirection: 'ASC' },\r\n});\r\nconst ticketTypeToUrlPath = {\r\n    RJ_SEAT: '/tickets',\r\n    RJ_SRO: '/tickets/RJ_SRO',\r\n    RJ_TIME: '/tickets/RJ_TIME',\r\n};\r\nconst priceReducer = (acc, { unpaid }) => unpaid + acc;\r\nconst filterExpired = (t) => +new Date(t.expirationDate || t.conditions.expireAt || t.conditions.expiration || 0) >\r\n    +new Date().valueOf();\r\nconst polishData = (state, { RJ_SEAT, RJ_SRO, RJ_TIME }) => {\r\n    const addStateToTicket = (t) => ({ ...t, state });\r\n    if (state !== 'UNPAID') {\r\n        return {\r\n            RJ_SEAT: RJ_SEAT.map(addStateToTicket),\r\n            RJ_SRO: RJ_SRO.map(addStateToTicket),\r\n            RJ_TIME: RJ_TIME.map(addStateToTicket),\r\n        };\r\n    }\r\n    return {\r\n        RJ_SEAT: RJ_SEAT.map(addStateToTicket).filter(filterExpired),\r\n        RJ_SRO: RJ_SRO.map(addStateToTicket).filter(filterExpired),\r\n        RJ_TIME: RJ_TIME.map(addStateToTicket).filter(filterExpired),\r\n    };\r\n};\r\nconst polishSingleType = (state, type, tickets) => {\r\n    const addStateToTicket = (t) => ({ ...t, state });\r\n    if (state !== 'UNPAID') {\r\n        return tickets.map(addStateToTicket);\r\n    }\r\n    return tickets.filter(filterExpired).map(addStateToTicket);\r\n};\r\nconst useUserTickets = (state, autoFetch = true, options) => {\r\n    const token = useContextSelector(StoreContext, c => c.state.user.token);\r\n    const interceptorsMounted = useContextSelector(StoreContext, c => c.interceptorsMounted);\r\n    const setState = useSetResponseState(ResponseStateCategory.userTickets);\r\n    const error = useContextSelector(ResponseStateContext, c => c.state[ResponseStateCategory.userTickets].error);\r\n    const [tickets, setTickets] = useImmer(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n    const maxTickets = useRef(emptyOffsets);\r\n    const ticketsCount = useRef({ ...emptyOffsets });\r\n    if (tickets) {\r\n        ticketsCount.current.RJ_SEAT = tickets.RJ_SEAT.length;\r\n        ticketsCount.current.RJ_SRO = tickets.RJ_SRO.length;\r\n        ticketsCount.current.RJ_TIME = tickets.RJ_TIME.length;\r\n    }\r\n    const defaultParams = useMemo(() => ({\r\n        ...defaultOptions[state],\r\n        ...options,\r\n        ticketStates: [state],\r\n    }), [state]);\r\n    const shouldFetchMore = tickets ? {\r\n        RJ_SEAT: tickets.RJ_SEAT.length < maxTickets.current.RJ_SEAT,\r\n        RJ_SRO: tickets.RJ_SRO.length < maxTickets.current.RJ_SRO,\r\n        RJ_TIME: tickets.RJ_TIME.length < maxTickets.current.RJ_TIME,\r\n    } : {};\r\n    const totalPrice = useMemo(() => tickets ?\r\n        tickets.RJ_SEAT.reduce(priceReducer, 0) +\r\n            tickets.RJ_SRO.reduce(priceReducer, 0) +\r\n            tickets.RJ_TIME.reduce(priceReducer, 0)\r\n        : 0, [tickets]);\r\n    const totalCount = maxTickets.current.RJ_SEAT +\r\n        maxTickets.current.RJ_SRO +\r\n        maxTickets.current.RJ_TIME;\r\n    const fetchedCount = loading || !tickets ? 0 :\r\n        tickets.RJ_SEAT.length + tickets.RJ_SRO.length + tickets.RJ_TIME.length;\r\n    const fetchTickets = useCallback(async (signal, noLimitReset) => {\r\n        try {\r\n            if (api.defaults.headers.Authorization) {\r\n                setState(undefined, false);\r\n                setLoading(true);\r\n                const [{ data: RJ_SEAT, headers: seatHeaders }, { data: RJ_SRO, headers: sroHeaders }, { data: rjTimeData, headers: timeHeaders },] = await Promise.all([\r\n                    api.get(ticketTypeToUrlPath.RJ_SEAT, {\r\n                        headers: {\r\n                            'Accept': 'application/1.2.0+json',\r\n                        },\r\n                        params: noLimitReset && ticketsCount.current.RJ_SEAT ? {\r\n                            ...defaultParams,\r\n                            limit: ticketsCount.current.RJ_SEAT,\r\n                        } : defaultParams,\r\n                        signal,\r\n                    }),\r\n                    api.get(ticketTypeToUrlPath.RJ_SRO, {\r\n                        params: noLimitReset && ticketsCount.current.RJ_SRO ? {\r\n                            ...defaultParams,\r\n                            limit: ticketsCount.current.RJ_SRO,\r\n                        } : defaultParams,\r\n                        signal,\r\n                    }),\r\n                    api.get(ticketTypeToUrlPath.RJ_TIME, {\r\n                        params: noLimitReset && ticketsCount.current.RJ_TIME ? {\r\n                            ...defaultParams,\r\n                            limit: ticketsCount.current.RJ_TIME,\r\n                        } : defaultParams,\r\n                        signal,\r\n                    }),\r\n                ]);\r\n                maxTickets.current = {\r\n                    RJ_SEAT: parseInt(seatHeaders['x-pagination-total']),\r\n                    RJ_SRO: parseInt(sroHeaders['x-pagination-total']),\r\n                    RJ_TIME: parseInt(timeHeaders['x-pagination-total']),\r\n                };\r\n                setTickets(polishData(state, { RJ_SEAT, RJ_SRO, RJ_TIME: rjTimeData.tickets }));\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                maxTickets.current = emptyOffsets;\r\n                setTickets(emptyTickets);\r\n            }\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            setLoading(false);\r\n            if (axios.isCancel(e)) {\r\n                return false;\r\n            }\r\n            maxTickets.current = emptyOffsets;\r\n            setTickets(undefined);\r\n            setState(isAxiosError(e) ?\r\n                e.response?.data.message || getErrorMessage(e)\r\n                : FAIL_MESSAGE, false);\r\n            return false;\r\n        }\r\n    }, [state]);\r\n    const fetchMore = useCallback(async (type, signal) => {\r\n        try {\r\n            if (api.defaults.headers.Authorization && tickets?.[type].length) {\r\n                setLoadingMore(true);\r\n                const { data } = await api.get(ticketTypeToUrlPath[type], {\r\n                    params: { ...defaultParams, offset: tickets[type].length },\r\n                    headers: type === 'RJ_SEAT' ? { 'Accept': 'application/1.2.0+json' } : undefined,\r\n                    signal,\r\n                });\r\n                const fetchedTickets = polishSingleType(state, type, type === 'RJ_TIME' ? data.tickets : data);\r\n                if (!fetchedTickets.length) {\r\n                    return;\r\n                }\r\n                setTickets(draft => {\r\n                    draft?.[type].push(...fetchedTickets);\r\n                });\r\n                setLoadingMore(false);\r\n            }\r\n            else {\r\n                maxTickets.current = emptyOffsets;\r\n                setTickets(undefined);\r\n            }\r\n        }\r\n        catch (e) {\r\n            setTickets(undefined);\r\n            setState(isAxiosError(e) ?\r\n                e.response?.data.message || getErrorMessage(e)\r\n                : FAIL_MESSAGE, false);\r\n        }\r\n    }, [tickets, state]);\r\n    useEffect(() => {\r\n        if (autoFetch && api.defaults.headers.Authorization && interceptorsMounted) {\r\n            maxTickets.current = emptyOffsets;\r\n            setTickets(undefined);\r\n            fetchTickets();\r\n        }\r\n        else if (!api.defaults.headers.Authorization) {\r\n            maxTickets.current = emptyOffsets;\r\n            setTickets(undefined);\r\n        }\r\n    }, [state, token, interceptorsMounted]);\r\n    return {\r\n        error,\r\n        fetchMore,\r\n        fetchTickets,\r\n        fetchedCount,\r\n        loading,\r\n        loadingMore,\r\n        shouldFetchMore,\r\n        tickets,\r\n        totalCount,\r\n        totalPrice,\r\n    };\r\n};\r\nexport default useUserTickets;\r\n//# sourceMappingURL=useUserTickets.js.map","references":["/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/@types/react/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/axios/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/axios/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/use-context-selector/dist/src/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/node_modules/use-immer/dist/index.d.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/responseState/reducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/responseState/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/store/rootReducer.tsx","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/consts.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/types.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useAddons.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useConnectionRoute.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useCreateTickets.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useSeats.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useSetResponseState.ts","/home/karelpelcak/Documents/repo/rj-shop-bl/src/hooks/useUser.ts"],"map":"{\"version\":3,\"file\":\"useUserTickets.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useUserTickets.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/karelpelcak/Documents/repo/rj-shop-bl/dist/hooks/useUserTickets.d.ts","writeByteOrderMark":false,"text":"import type { GenericAbortSignal } from 'axios';\r\nimport { Currency, DateString, FlexiType, RouteId, SeatClass, Tariff, TicketState, TicketType } from './types';\r\nimport { TicketAddon } from './useAddons';\r\nimport { Section, TransfersInfo } from './useConnectionRoute';\r\nimport { Passenger } from './useCreateTickets';\r\nimport { SectionCommons } from './useSeats';\r\nimport { PercentualDiscount } from './useUser';\r\nexport interface Bill {\r\n    amount: number;\r\n    currency: Currency;\r\n    label: string;\r\n}\r\nexport interface CustomerActions {\r\n    additionalServices: boolean;\r\n    cancel: boolean;\r\n    editPassengers: boolean;\r\n    evaluate: boolean;\r\n    pay: boolean;\r\n    payRemaining: boolean;\r\n    printInvoice: boolean;\r\n    printTicket: boolean;\r\n    rebook: boolean;\r\n    requiredToFillInQuestionnaire: boolean;\r\n    sentToMail: boolean;\r\n    showDetail: boolean;\r\n    storno: boolean;\r\n}\r\nexport interface TicketDescriptions {\r\n    cancel: string;\r\n    expiration: string;\r\n    rebook: string;\r\n}\r\nexport interface Conditions {\r\n    cancel?: DateString;\r\n    expireAt?: DateString;\r\n    coolingOff?: DateString;\r\n    departureCancel?: DateString;\r\n    expiration?: DateString;\r\n    cancellationFee?: number;\r\n    refundToOriginalSourcePossible?: boolean;\r\n}\r\nexport interface CodeDiscount {\r\n    code: string;\r\n    discount: number;\r\n    id: number;\r\n}\r\nexport interface TicketSection extends SectionCommons {\r\n    section: Section;\r\n}\r\nexport interface TimeTicket {\r\n    accountCode: string;\r\n    bills: Bill[];\r\n    conditions: Conditions;\r\n    customerActions: CustomerActions;\r\n    customerNotifications: string[] | null;\r\n    id: number;\r\n    name: string;\r\n    price: number;\r\n    seatClass: SeatClass;\r\n    state: TicketState;\r\n    station1Id: number;\r\n    station2Id: number;\r\n    surname: string;\r\n    tariff: {\r\n        value: Tariff | null;\r\n    };\r\n    ticketCode: string;\r\n    type: FlexiType;\r\n    unpaid: number;\r\n    validFrom: DateString;\r\n    validTo: DateString;\r\n}\r\nexport interface SeatSroTicketCommons {\r\n    bills: Bill[];\r\n    currency: Currency;\r\n    customerActions: CustomerActions;\r\n    delay: string | null;\r\n    estimatedArrivalTime: DateString;\r\n    passengersInfo: {\r\n        passengers: Passenger[];\r\n    };\r\n    paymentId: number;\r\n    price: number;\r\n    routeSections: TicketSection[];\r\n    seatClassKey: SeatClass;\r\n    state: TicketState;\r\n    travelTime: string;\r\n    unpaid: number;\r\n}\r\nexport interface SeatTicket extends SeatSroTicketCommons {\r\n    addons: TicketAddon[] | null;\r\n    affiliateTicket: boolean | null;\r\n    cancelChargeSum: number | null;\r\n    cancelMoneyBackSum: number | null;\r\n    conditions: null | {\r\n        descriptions: TicketDescriptions;\r\n        code: string;\r\n    };\r\n    customerNotifications: string[] | null;\r\n    expirateAt: null | {\r\n        days: number;\r\n        hours: number;\r\n        minutes: number;\r\n    };\r\n    expirationDate: DateString | null;\r\n    id: number;\r\n    routeId: RouteId;\r\n    surcharge: number;\r\n    ticketCode: string;\r\n    transfersInfo: TransfersInfo | null;\r\n    usedCodeDiscount: CodeDiscount | null;\r\n    usedPercentualDiscounts: PercentualDiscount[] | null;\r\n    wheelChairPlatformOrderPossible: boolean;\r\n    wheelChairPlatformOrdered: boolean;\r\n}\r\nexport interface SroTicket extends SeatSroTicketCommons {\r\n    affiliateTicket: boolean;\r\n    conditions: Conditions;\r\n    sroTicketId: number;\r\n}\r\nexport interface UserTicketsOptions {\r\n    limit: number;\r\n    sortDirection?: 'ASC' | 'DESC';\r\n}\r\nexport type FetchableTicketType = Exclude<TicketType, 'FLEXI'>;\r\nexport interface Tickets {\r\n    RJ_SEAT: SeatTicket[];\r\n    RJ_SRO: SroTicket[];\r\n    RJ_TIME: TimeTicket[];\r\n}\r\nexport type TicketsResponse = SeatTicket[] | SroTicket[] | {\r\n    tickets: TimeTicket[];\r\n};\r\nexport declare const emptyTickets: Tickets;\r\nexport declare const emptyOffsets: Record<FetchableTicketType, number>;\r\nexport declare const defaultOptions: Record<TicketState, UserTicketsOptions>;\r\ndeclare const useUserTickets: (state: TicketState, autoFetch?: boolean, options?: Partial<UserTicketsOptions>) => {\r\n    error: {\r\n        message?: string | undefined;\r\n        errorFields?: import(\"../store/responseState/types\").ErrorFields[] | undefined;\r\n    } | undefined;\r\n    fetchMore: (type: FetchableTicketType, signal?: GenericAbortSignal) => Promise<void>;\r\n    fetchTickets: (signal?: GenericAbortSignal, noLimitReset?: boolean) => Promise<boolean>;\r\n    fetchedCount: number;\r\n    loading: boolean;\r\n    loadingMore: boolean;\r\n    shouldFetchMore: {\r\n        RJ_SEAT: boolean;\r\n        RJ_SRO: boolean;\r\n        RJ_TIME: boolean;\r\n    } | {\r\n        RJ_SEAT?: undefined;\r\n        RJ_SRO?: undefined;\r\n        RJ_TIME?: undefined;\r\n    };\r\n    tickets: Tickets | undefined;\r\n    totalCount: number;\r\n    totalPrice: number;\r\n};\r\nexport default useUserTickets;\r\n"}}
